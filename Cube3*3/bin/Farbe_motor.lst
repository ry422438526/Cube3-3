   1              		.arch armv5te
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 2
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"Farbe_motor.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.align	2
  17              		.global	Farbe_init
  19              	Farbe_init:
  20              		.fnstart
  21              	.LFB21:
  22              		.file 1 "Farbe_motor.c"
   1:Farbe_motor.c **** //
   2:Farbe_motor.c **** //  Farbe_motor.c
   3:Farbe_motor.c **** //  Cube3*3
   4:Farbe_motor.c **** //
   5:Farbe_motor.c **** //  Created by 杨春霞 on 12.11.15.
   6:Farbe_motor.c **** //  Copyright © 2015 Chunxia Yang. All rights reserved.
   7:Farbe_motor.c **** //
   8:Farbe_motor.c **** 
   9:Farbe_motor.c **** #include <fcntl.h>
  10:Farbe_motor.c **** #include <stdio.h>
  11:Farbe_motor.c **** #include <sys/mman.h>
  12:Farbe_motor.c **** #ifdef __linux__
  13:Farbe_motor.c **** #include "lms2012.h"
  14:Farbe_motor.c **** #include "../lms2012/c_output.h"
  15:Farbe_motor.c **** #endif
  16:Farbe_motor.c **** #include <unistd.h>
  17:Farbe_motor.c **** #include <stdlib.h>
  18:Farbe_motor.c **** 
  19:Farbe_motor.c **** #include "Farbe_motor.h"
  20:Farbe_motor.c **** 
  21:Farbe_motor.c **** #ifdef __linux__
  22:Farbe_motor.c **** const int MOTOR_SPEED_D=30; //power:0~100
  23:Farbe_motor.c **** const char MOTOR_PORT_D = 0x08; //Schwenkbarer Farbensensor Motor;
  24:Farbe_motor.c **** OUTPUT_GLOBALS OutputInstance;
  25:Farbe_motor.c **** int Farbe_referenz=0;
  26:Farbe_motor.c **** int Farbe_ist=0;
  27:Farbe_motor.c **** const int Farbe_winkel[]={4,-735,-645,-640,-610,-590,-400};
  28:Farbe_motor.c **** #endif
  29:Farbe_motor.c **** 
  30:Farbe_motor.c **** int Farbe_init()
  31:Farbe_motor.c **** {
  23              		.loc 1 31 0
  24              		.cfi_startproc
  25              		@ args = 0, pretend = 0, frame = 0
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27 0000 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
  28              		.save {r4, r5, r6, lr}
  29              		.cfi_def_cfa_offset 16
  30              		.cfi_offset 4, -16
  31              		.cfi_offset 5, -12
  32              		.cfi_offset 6, -8
  33              		.cfi_offset 14, -4
  32:Farbe_motor.c **** #ifdef __linux__
  33:Farbe_motor.c ****     cOutputInit();
  34              		.loc 1 33 0
  35 0004 FEFFFFEB 		bl	cOutputInit
  36              	.LVL0:
  34:Farbe_motor.c ****     cOutputSetType(3,TYPE_MINITACHO);
  37              		.loc 1 34 0
  38 0008 0300A0E3 		mov	r0, #3
  39 000c 0810A0E3 		mov	r1, #8
  40 0010 FEFFFFEB 		bl	cOutputSetType
  41              	.LVL1:
  35:Farbe_motor.c ****     cOutputSpeed(MOTOR_PORT_D,MOTOR_SPEED_D);
  42              		.loc 1 35 0
  43 0014 0800A0E3 		mov	r0, #8
  44 0018 1E10A0E3 		mov	r1, #30
  45 001c FEFFFFEB 		bl	cOutputSpeed
  46              	.LVL2:
  36:Farbe_motor.c ****     cOutputStart(MOTOR_PORT_D);
  47              		.loc 1 36 0
  48 0020 0800A0E3 		mov	r0, #8
  49 0024 FEFFFFEB 		bl	cOutputStart
  50              	.LVL3:
  37:Farbe_motor.c ****     int old_TachoSensor;
  38:Farbe_motor.c ****     old_TachoSensor=cOutputGetCount(3);
  51              		.loc 1 38 0
  52 0028 0300A0E3 		mov	r0, #3
  53 002c FEFFFFEB 		bl	cOutputGetCount
  54              	.LVL4:
  55 0030 0050A0E1 		mov	r5, r0
  56              	.LVL5:
  39:Farbe_motor.c ****     usleep(2*1000000);
  57              		.loc 1 39 0
  58 0034 58009FE5 		ldr	r0, .L4
  59              	.LVL6:
  60 0038 FEFFFFEB 		bl	usleep
  61              	.LVL7:
  40:Farbe_motor.c ****     while(old_TachoSensor!=cOutputGetCount(3)){
  62              		.loc 1 40 0
  63 003c 0340A0E3 		mov	r4, #3
  41:Farbe_motor.c ****         old_TachoSensor=cOutputGetCount(3);
  42:Farbe_motor.c ****         usleep(1000);
  64              		.loc 1 42 0
  65 0040 FA6FA0E3 		mov	r6, #1000
  40:Farbe_motor.c ****     while(old_TachoSensor!=cOutputGetCount(3)){
  66              		.loc 1 40 0
  67 0044 040000EA 		b	.L2
  68              	.L3:
  41:Farbe_motor.c ****         old_TachoSensor=cOutputGetCount(3);
  69              		.loc 1 41 0
  70 0048 0400A0E1 		mov	r0, r4
  71 004c FEFFFFEB 		bl	cOutputGetCount
  72              	.LVL8:
  73 0050 0050A0E1 		mov	r5, r0
  74              	.LVL9:
  75              		.loc 1 42 0
  76 0054 0600A0E1 		mov	r0, r6
  77              	.LVL10:
  78 0058 FEFFFFEB 		bl	usleep
  79              	.LVL11:
  80              	.L2:
  40:Farbe_motor.c ****     while(old_TachoSensor!=cOutputGetCount(3)){
  81              		.loc 1 40 0 discriminator 1
  82 005c 0400A0E1 		mov	r0, r4
  83 0060 FEFFFFEB 		bl	cOutputGetCount
  84              	.LVL12:
  85 0064 050050E1 		cmp	r0, r5
  86 0068 F6FFFF1A 		bne	.L3
  43:Farbe_motor.c ****     }
  44:Farbe_motor.c ****     cOutputStop(MOTOR_PORT_D,1);
  87              		.loc 1 44 0
  88 006c 0800A0E3 		mov	r0, #8
  89 0070 0110A0E3 		mov	r1, #1
  90 0074 FEFFFFEB 		bl	cOutputStop
  91              	.LVL13:
  45:Farbe_motor.c ****     Farbe_referenz=cOutputGetCount(3);
  92              		.loc 1 45 0
  93 0078 0300A0E3 		mov	r0, #3
  94 007c FEFFFFEB 		bl	cOutputGetCount
  95              	.LVL14:
  96 0080 10309FE5 		ldr	r3, .L4+4
  97 0084 000083E5 		str	r0, [r3]
  46:Farbe_motor.c ****     Farbe_ist = 0;
  98              		.loc 1 46 0
  99 0088 0000A0E3 		mov	r0, #0
 100 008c 040083E5 		str	r0, [r3, #4]
  47:Farbe_motor.c **** #endif
  48:Farbe_motor.c ****     return 0;
  49:Farbe_motor.c **** }
 101              		.loc 1 49 0
 102 0090 7080BDE8 		ldmfd	sp!, {r4, r5, r6, pc}
 103              	.L5:
 104              		.align	2
 105              	.L4:
 106 0094 80841E00 		.word	2000000
 107 0098 00000000 		.word	.LANCHOR0
 108              		.cfi_endproc
 109              	.LFE21:
 110              		.fnend
 112              		.align	2
 113              		.global	Farbe_setpos
 115              	Farbe_setpos:
 116              		.fnstart
 117              	.LFB22:
  50:Farbe_motor.c **** 
  51:Farbe_motor.c **** 
  52:Farbe_motor.c **** int Farbe_setpos(int Farbe_soll)
  53:Farbe_motor.c **** {
 118              		.loc 1 53 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL15:
 123 009c F0412DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
 124              		.save {r4, r5, r6, r7, r8, lr}
 125              		.cfi_def_cfa_offset 24
 126              		.cfi_offset 4, -24
 127              		.cfi_offset 5, -20
 128              		.cfi_offset 6, -16
 129              		.cfi_offset 7, -12
 130              		.cfi_offset 8, -8
 131              		.cfi_offset 14, -4
 132 00a0 0070A0E1 		mov	r7, r0
  54:Farbe_motor.c **** #ifdef __linux__
  55:Farbe_motor.c ****     if(Farbe_winkel[Farbe_ist]<Farbe_winkel[Farbe_soll])
 133              		.loc 1 55 0
 134 00a4 BC309FE5 		ldr	r3, .L13
 135 00a8 004193E7 		ldr	r4, [r3, r0, asl #2]
 136 00ac B8209FE5 		ldr	r2, .L13+4
 137 00b0 042092E5 		ldr	r2, [r2, #4]
 138 00b4 023193E7 		ldr	r3, [r3, r2, asl #2]
 139 00b8 040053E1 		cmp	r3, r4
 140 00bc 110000AA 		bge	.L7
  56:Farbe_motor.c ****     {
  57:Farbe_motor.c ****         cOutputSpeed(MOTOR_PORT_D,MOTOR_SPEED_D);
 141              		.loc 1 57 0
 142 00c0 0800A0E3 		mov	r0, #8
 143              	.LVL16:
 144 00c4 1E10A0E3 		mov	r1, #30
 145 00c8 FEFFFFEB 		bl	cOutputSpeed
 146              	.LVL17:
  58:Farbe_motor.c ****         cOutputStart(MOTOR_PORT_D);
 147              		.loc 1 58 0
 148 00cc 0800A0E3 		mov	r0, #8
 149 00d0 FEFFFFEB 		bl	cOutputStart
 150              	.LVL18:
  59:Farbe_motor.c ****         
  60:Farbe_motor.c ****         while ((cOutputGetCount(3)-Farbe_referenz) < Farbe_winkel[Farbe_soll])
 151              		.loc 1 60 0
 152 00d4 0360A0E3 		mov	r6, #3
 153 00d8 8C509FE5 		ldr	r5, .L13+4
  61:Farbe_motor.c ****         {
  62:Farbe_motor.c ****             usleep(1000);
 154              		.loc 1 62 0
 155 00dc FA8FA0E3 		mov	r8, #1000
  60:Farbe_motor.c ****         {
 156              		.loc 1 60 0
 157 00e0 010000EA 		b	.L8
 158              	.L9:
 159              		.loc 1 62 0
 160 00e4 0800A0E1 		mov	r0, r8
 161 00e8 FEFFFFEB 		bl	usleep
 162              	.LVL19:
 163              	.L8:
  60:Farbe_motor.c ****         {
 164              		.loc 1 60 0 discriminator 1
 165 00ec 0600A0E1 		mov	r0, r6
 166 00f0 FEFFFFEB 		bl	cOutputGetCount
 167              	.LVL20:
 168 00f4 003095E5 		ldr	r3, [r5]
 169 00f8 000063E0 		rsb	r0, r3, r0
 170 00fc 000054E1 		cmp	r4, r0
 171 0100 F7FFFFCA 		bgt	.L9
 172 0104 100000EA 		b	.L10
 173              	.LVL21:
 174              	.L7:
  63:Farbe_motor.c ****         }
  64:Farbe_motor.c ****     }
  65:Farbe_motor.c ****     else
  66:Farbe_motor.c ****     {
  67:Farbe_motor.c ****         cOutputSpeed(MOTOR_PORT_D,-MOTOR_SPEED_D);
 175              		.loc 1 67 0
 176 0108 0800A0E3 		mov	r0, #8
 177              	.LVL22:
 178 010c 1D10E0E3 		mvn	r1, #29
 179 0110 FEFFFFEB 		bl	cOutputSpeed
 180              	.LVL23:
  68:Farbe_motor.c ****         cOutputStart(MOTOR_PORT_D);
 181              		.loc 1 68 0
 182 0114 0800A0E3 		mov	r0, #8
 183 0118 FEFFFFEB 		bl	cOutputStart
 184              	.LVL24:
  69:Farbe_motor.c ****    
  70:Farbe_motor.c ****         while ((cOutputGetCount(3)-Farbe_referenz) > Farbe_winkel[Farbe_soll])
 185              		.loc 1 70 0
 186 011c 0360A0E3 		mov	r6, #3
 187 0120 44509FE5 		ldr	r5, .L13+4
  71:Farbe_motor.c ****         {
  72:Farbe_motor.c ****             usleep(1000);
 188              		.loc 1 72 0
 189 0124 FA8FA0E3 		mov	r8, #1000
  70:Farbe_motor.c ****         {
 190              		.loc 1 70 0
 191 0128 010000EA 		b	.L11
 192              	.L12:
 193              		.loc 1 72 0
 194 012c 0800A0E1 		mov	r0, r8
 195 0130 FEFFFFEB 		bl	usleep
 196              	.LVL25:
 197              	.L11:
  70:Farbe_motor.c ****         {
 198              		.loc 1 70 0 discriminator 1
 199 0134 0600A0E1 		mov	r0, r6
 200 0138 FEFFFFEB 		bl	cOutputGetCount
 201              	.LVL26:
 202 013c 003095E5 		ldr	r3, [r5]
 203 0140 000063E0 		rsb	r0, r3, r0
 204 0144 000054E1 		cmp	r4, r0
 205 0148 F7FFFFBA 		blt	.L12
 206              	.L10:
  73:Farbe_motor.c ****         }
  74:Farbe_motor.c ****     }
  75:Farbe_motor.c ****     cOutputStop(MOTOR_PORT_D,1);
 207              		.loc 1 75 0
 208 014c 0800A0E3 		mov	r0, #8
 209 0150 0110A0E3 		mov	r1, #1
 210 0154 FEFFFFEB 		bl	cOutputStop
 211              	.LVL27:
  76:Farbe_motor.c ****     Farbe_ist=Farbe_soll;
 212              		.loc 1 76 0
 213 0158 0C309FE5 		ldr	r3, .L13+4
 214 015c 047083E5 		str	r7, [r3, #4]
  77:Farbe_motor.c **** #endif
  78:Farbe_motor.c ****     return 0;
  79:Farbe_motor.c **** }
 215              		.loc 1 79 0
 216 0160 0000A0E3 		mov	r0, #0
 217 0164 F081BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, pc}
 218              	.L14:
 219              		.align	2
 220              	.L13:
 221 0168 00000000 		.word	.LANCHOR1
 222 016c 00000000 		.word	.LANCHOR0
 223              		.cfi_endproc
 224              	.LFE22:
 225              		.fnend
 227              		.align	2
 228              		.global	Farbe_close
 230              	Farbe_close:
 231              		.fnstart
 232              	.LFB23:
  80:Farbe_motor.c **** 
  81:Farbe_motor.c **** 
  82:Farbe_motor.c **** int Farbe_close()
  83:Farbe_motor.c **** {
 233              		.loc 1 83 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0170 08402DE9 		stmfd	sp!, {r3, lr}
 238              		.save {r3, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
  84:Farbe_motor.c **** #ifdef __linux__
  85:Farbe_motor.c ****     cOutputExit();
 242              		.loc 1 85 0
 243 0174 FEFFFFEB 		bl	cOutputExit
 244              	.LVL28:
  86:Farbe_motor.c **** #endif
  87:Farbe_motor.c ****     return 0;
  88:Farbe_motor.c **** }
 245              		.loc 1 88 0
 246 0178 0000A0E3 		mov	r0, #0
 247 017c 0880BDE8 		ldmfd	sp!, {r3, pc}
 248              		.cfi_endproc
 249              	.LFE23:
 250              		.fnend
 252              		.global	Farbe_winkel
 253              		.global	Farbe_ist
 254              		.global	Farbe_referenz
 255              		.comm	OutputInstance,64,4
 256              		.global	MOTOR_PORT_D
 257              		.global	MOTOR_SPEED_D
 258              		.section	.rodata
 259              		.align	2
 260              	.LANCHOR1 = . + 0
 263              	Farbe_winkel:
 264 0000 04000000 		.word	4
 265 0004 21FDFFFF 		.word	-735
 266 0008 7BFDFFFF 		.word	-645
 267 000c 80FDFFFF 		.word	-640
 268 0010 9EFDFFFF 		.word	-610
 269 0014 B2FDFFFF 		.word	-590
 270 0018 70FEFFFF 		.word	-400
 273              	MOTOR_PORT_D:
 274 001c 08       		.byte	8
 275 001d 000000   		.space	3
 278              	MOTOR_SPEED_D:
 279 0020 1E000000 		.word	30
 280              		.bss
 281              		.align	2
 282              	.LANCHOR0 = . + 0
 285              	Farbe_referenz:
 286 0000 00000000 		.space	4
 289              	Farbe_ist:
 290 0004 00000000 		.space	4
 291              		.text
 292              	.Letext0:
 293              		.file 2 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 294              		.file 3 "/usr/local/carlson-minot/crosscompilers/lib/gcc/arm-none-linux-gnueabi/4.8.3/include/stdd
 295              		.file 4 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 296              		.file 5 "lmstypes.h"
 297              		.file 6 "bytecodes.h"
 298              		.file 7 "lms2012.h"
 299              		.file 8 "../lms2012/c_output.h"
 300              		.file 9 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 301              		.file 10 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Farbe_motor.c
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:16     .text:0000000000000000 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:19     .text:0000000000000000 Farbe_init
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:106    .text:0000000000000094 $d
                       .ARM.exidx:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:112    .text:000000000000009c $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:115    .text:000000000000009c Farbe_setpos
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:221    .text:0000000000000168 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:227    .text:0000000000000170 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:230    .text:0000000000000170 Farbe_close
                       .ARM.extab:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:263    .rodata:0000000000000000 Farbe_winkel
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:289    .bss:0000000000000004 Farbe_ist
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:285    .bss:0000000000000000 Farbe_referenz
                            *COM*:0000000000000040 OutputInstance
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:273    .rodata:000000000000001c MOTOR_PORT_D
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:278    .rodata:0000000000000020 MOTOR_SPEED_D
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:259    .rodata:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccvlTPqx.s:281    .bss:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
cOutputInit
cOutputSetType
cOutputSpeed
cOutputStart
cOutputGetCount
usleep
cOutputStop
__aeabi_unwind_cpp_pr0
cOutputExit
__aeabi_unwind_cpp_pr1
