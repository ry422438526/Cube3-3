   1              		.arch armv5te
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 2
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"print_mode.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.align	2
  17              		.global	wuerfel_print
  19              	wuerfel_print:
  20              		.fnstart
  21              	.LFB33:
  22              		.file 1 "print_mode.c"
   1:print_mode.c  **** //
   2:print_mode.c  **** //  print_mode.c
   3:print_mode.c  **** //  Cube3*3
   4:print_mode.c  **** //
   5:print_mode.c  **** //  Created by 杨春霞 on 12.11.15.
   6:print_mode.c  **** //  Copyright © 2015 Chunxia Yang. All rights reserved.
   7:print_mode.c  **** //
   8:print_mode.c  **** 
   9:print_mode.c  **** #include "print_mode.h"
  10:print_mode.c  **** #include "main.h"
  11:print_mode.c  **** 
  12:print_mode.c  **** #include <stdlib.h>
  13:print_mode.c  **** #include <stdio.h>
  14:print_mode.c  **** #include "Top_Cross.h"
  15:print_mode.c  **** #include <string.h>
  16:print_mode.c  **** #include <unistd.h>
  17:print_mode.c  **** #include <sys/select.h>
  18:print_mode.c  **** #include <termios.h>
  19:print_mode.c  **** 
  20:print_mode.c  **** //#define RUN_MACOS  1
  21:print_mode.c  **** #define RUN_EV3    1
  22:print_mode.c  **** 
  23:print_mode.c  **** 
  24:print_mode.c  **** //0 =Weisse 1 =Balu 2 =Gelb 3 =Gruen 4 =Rot 5 =Orangen
  25:print_mode.c  **** 
  26:print_mode.c  **** #ifndef __linux__
  27:print_mode.c  **** struct termios orig_termios;
  28:print_mode.c  **** 
  29:print_mode.c  **** void reset_terminal_mode()
  30:print_mode.c  **** {
  31:print_mode.c  ****     tcsetattr(0, TCSANOW, &orig_termios);
  32:print_mode.c  **** }
  33:print_mode.c  **** 
  34:print_mode.c  **** void set_conio_terminal_mode()
  35:print_mode.c  **** {
  36:print_mode.c  ****     struct termios new_termios;
  37:print_mode.c  ****     
  38:print_mode.c  ****     /* take two copies - one for now, one for later */
  39:print_mode.c  ****     tcgetattr(0, &orig_termios);
  40:print_mode.c  ****     memcpy(&new_termios, &orig_termios, sizeof(new_termios));
  41:print_mode.c  ****     
  42:print_mode.c  ****     /* register cleanup handler, and set the new terminal mode */
  43:print_mode.c  ****     atexit(reset_terminal_mode);
  44:print_mode.c  ****     cfmakeraw(&new_termios);
  45:print_mode.c  ****     tcsetattr(0, TCSANOW, &new_termios);
  46:print_mode.c  **** }
  47:print_mode.c  **** 
  48:print_mode.c  **** 
  49:print_mode.c  **** 
  50:print_mode.c  **** int kbhit()
  51:print_mode.c  **** {
  52:print_mode.c  ****     struct timeval tv = { 0L, 0L };
  53:print_mode.c  ****     fd_set fds;
  54:print_mode.c  ****     FD_ZERO(&fds);
  55:print_mode.c  ****     FD_SET(0, &fds);
  56:print_mode.c  ****     return select(1, &fds, NULL, NULL, &tv);
  57:print_mode.c  **** }
  58:print_mode.c  **** 
  59:print_mode.c  **** int getch()
  60:print_mode.c  **** {
  61:print_mode.c  ****     int r;
  62:print_mode.c  ****     unsigned char c;
  63:print_mode.c  ****     if ((r = read(0, &c, sizeof(c))) < 0) {
  64:print_mode.c  ****         return r;
  65:print_mode.c  ****     } else {
  66:print_mode.c  ****         return c;
  67:print_mode.c  ****     }
  68:print_mode.c  **** }
  69:print_mode.c  **** #endif
  70:print_mode.c  **** void wuerfel_print(int mode)
  71:print_mode.c  **** {
  23              		.loc 1 71 0
  24              		.cfi_startproc
  25              		@ args = 0, pretend = 0, frame = 8
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27              	.LVL0:
  28 0000 F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, r10, fp, lr}
  29              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
  30              		.cfi_def_cfa_offset 36
  31              		.cfi_offset 4, -36
  32              		.cfi_offset 5, -32
  33              		.cfi_offset 6, -28
  34              		.cfi_offset 7, -24
  35              		.cfi_offset 8, -20
  36              		.cfi_offset 9, -16
  37              		.cfi_offset 10, -12
  38              		.cfi_offset 11, -8
  39              		.cfi_offset 14, -4
  40              		.pad #12
  41 0004 0CD04DE2 		sub	sp, sp, #12
  42              		.cfi_def_cfa_offset 48
  43 0008 0050A0E1 		mov	r5, r0
  72:print_mode.c  ****     
  73:print_mode.c  ****     int zeile;
  74:print_mode.c  ****     int spalte;
  75:print_mode.c  ****     
  76:print_mode.c  ****     setenv("XcodeColor", "YES", 0);
  44              		.loc 1 76 0
  45 000c 38019FE5 		ldr	r0, .L14
  46              	.LVL1:
  47 0010 38119FE5 		ldr	r1, .L14+4
  48 0014 0020A0E3 		mov	r2, #0
  49 0018 FEFFFFEB 		bl	setenv
  50              	.LVL2:
  77:print_mode.c  ****     
  78:print_mode.c  ****     printf("\n");
  51              		.loc 1 78 0
  52 001c 30419FE5 		ldr	r4, .L14+8
  53 0020 0400A0E1 		mov	r0, r4
  54 0024 FEFFFFEB 		bl	printf
  55              	.LVL3:
  79:print_mode.c  ****     printf(".........................................");
  56              		.loc 1 79 0
  57 0028 28019FE5 		ldr	r0, .L14+12
  58 002c FEFFFFEB 		bl	printf
  59              	.LVL4:
  80:print_mode.c  ****     printf("\n");
  60              		.loc 1 80 0
  61 0030 0400A0E1 		mov	r0, r4
  62 0034 FEFFFFEB 		bl	printf
  63              	.LVL5:
  81:print_mode.c  ****     printf("\n");
  64              		.loc 1 81 0
  65 0038 0400A0E1 		mov	r0, r4
  66 003c FEFFFFEB 		bl	printf
  67              	.LVL6:
  68 0040 6C30A0E3 		mov	r3, #108
  69 0044 950303E0 		mul	r3, r5, r3
  70 0048 0C219FE5 		ldr	r2, .L14+16
  71 004c 025083E0 		add	r5, r3, r2
  72              	.LVL7:
  73 0050 6C2082E2 		add	r2, r2, #108
  74 0054 022083E0 		add	r2, r3, r2
  75 0058 04208DE5 		str	r2, [sp, #4]
  76              	.LBB2:
  82:print_mode.c  ****     for(zeile=0;zeile<12;zeile++)
  83:print_mode.c  ****     {
  84:print_mode.c  ****         for(spalte=0;spalte<9;spalte++)
  85:print_mode.c  ****         {
  86:print_mode.c  ****             char tmp=print_mode[mode][zeile][spalte];
  87:print_mode.c  ****             if(tmp==-1)
  88:print_mode.c  ****                 printf("    ");
  89:print_mode.c  ****             else
  90:print_mode.c  ****                 switch(color_data[tmp/9][tmp%9])
  77              		.loc 1 90 0
  78 005c FC709FE5 		ldr	r7, .L14+20
  79 0060 FC609FE5 		ldr	r6, .L14+24
  91:print_mode.c  ****             {
  92:print_mode.c  **** #ifdef RUN_MACOS
  93:print_mode.c  ****                 case 0:
  94:print_mode.c  ****                     printf("\033[fg0,0,0;   %d\033[;",color_data[tmp/9][tmp%9]);
  95:print_mode.c  ****                     break;
  96:print_mode.c  ****                     
  97:print_mode.c  ****                 case 1:
  98:print_mode.c  ****                     printf("\033[fg0,0,255;   %d\033[;",color_data[tmp/9][tmp%9]);
  99:print_mode.c  ****                     break;
 100:print_mode.c  ****                     
 101:print_mode.c  ****                 case 2:
 102:print_mode.c  ****                     printf("\033[fg255,255,0;   %d\033[;",color_data[tmp/9][tmp%9]);
 103:print_mode.c  ****                     break;
 104:print_mode.c  ****                     
 105:print_mode.c  ****                 case 3:
 106:print_mode.c  ****                     printf("\033[fg0,255,0;   %d\033[;",color_data[tmp/9][tmp%9]);
 107:print_mode.c  ****                     break;
 108:print_mode.c  ****                     
 109:print_mode.c  ****                 case 4:
 110:print_mode.c  ****                     printf("\033[fg255,0,0;   %d\033[;",color_data[tmp/9][tmp%9]);
 111:print_mode.c  ****                     break;
 112:print_mode.c  ****                     
 113:print_mode.c  ****                 case 5:
 114:print_mode.c  ****                     printf("\033[fg255,97,0;   %d\033[;",color_data[tmp/9][tmp%9]);
 115:print_mode.c  ****                     break;
 116:print_mode.c  **** #endif
 117:print_mode.c  **** #ifdef RUN_EV3
 118:print_mode.c  ****                 case 0:
 119:print_mode.c  ****                     printf("\033[1;30m   %d\033[0m",color_data[tmp/9][tmp%9]);
 120:print_mode.c  ****                     break;
 121:print_mode.c  ****                     
 122:print_mode.c  ****                 case 1:
 123:print_mode.c  ****                     printf("\033[1;34m   %d\033[0m",color_data[tmp/9][tmp%9]);
 124:print_mode.c  ****                     break;
 125:print_mode.c  ****                     
 126:print_mode.c  ****                 case 2:
 127:print_mode.c  ****                     printf("\033[1;33m   %d\033[0m",color_data[tmp/9][tmp%9]);
 128:print_mode.c  ****                     break;
 129:print_mode.c  ****                     
 130:print_mode.c  ****                 case 3:
 131:print_mode.c  ****                     printf("\033[1;32m   %d\033[0m",color_data[tmp/9][tmp%9]);
 132:print_mode.c  ****                     break;
 133:print_mode.c  ****                     
 134:print_mode.c  ****                 case 4:
 135:print_mode.c  ****                     printf("\033[1;35m   %d\033[0m",color_data[tmp/9][tmp%9]);
 136:print_mode.c  ****                     break;
 137:print_mode.c  ****                     
 138:print_mode.c  ****                 case 5:
 139:print_mode.c  ****                     printf("\033[1;31m   %d\033[0m",color_data[tmp/9][tmp%9]);
  80              		.loc 1 139 0
  81 0064 FCB09FE5 		ldr	fp, .L14+28
 135:print_mode.c  ****                     break;
  82              		.loc 1 135 0
  83 0068 FCA09FE5 		ldr	r10, .L14+32
 131:print_mode.c  ****                     break;
  84              		.loc 1 131 0
  85 006c FC909FE5 		ldr	r9, .L14+36
 127:print_mode.c  ****                     break;
  86              		.loc 1 127 0
  87 0070 FC809FE5 		ldr	r8, .L14+40
  88 0074 300000EA 		b	.L2
  89              	.LVL8:
  90              	.L13:
  86:print_mode.c  ****             if(tmp==-1)
  91              		.loc 1 86 0
  92 0078 0420D5E7 		ldrb	r2, [r5, r4]	@ zero_extendqisi2
  93              	.LVL9:
  90:print_mode.c  ****             {
  94              		.loc 1 90 0
  95 007c 961283E0 		umull	r1, r3, r6, r2
  96 0080 A330A0E1 		mov	r3, r3, lsr #1
  97 0084 831183E0 		add	r1, r3, r3, asl #3
  98 0088 022061E0 		rsb	r2, r1, r2
  99 008c FF2002E2 		and	r2, r2, #255
 100 0090 023081E0 		add	r3, r1, r2
 101 0094 0330D7E7 		ldrb	r3, [r7, r3]	@ zero_extendqisi2
 102 0098 050053E3 		cmp	r3, #5
 103 009c 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 104 00a0 1C0000EA 		b	.L3
 105              	.L5:
 106 00a4 BC000000 		.word	.L4
 107 00a8 CC000000 		.word	.L6
 108 00ac DC000000 		.word	.L7
 109 00b0 EC000000 		.word	.L8
 110 00b4 FC000000 		.word	.L9
 111 00b8 0C010000 		.word	.L10
 112              	.L4:
 119:print_mode.c  ****                     break;
 113              		.loc 1 119 0
 114 00bc B4009FE5 		ldr	r0, .L14+44
 115 00c0 0010A0E3 		mov	r1, #0
 116 00c4 FEFFFFEB 		bl	printf
 117              	.LVL10:
 120:print_mode.c  ****                     
 118              		.loc 1 120 0
 119 00c8 120000EA 		b	.L3
 120              	.LVL11:
 121              	.L6:
 123:print_mode.c  ****                     break;
 122              		.loc 1 123 0
 123 00cc A8009FE5 		ldr	r0, .L14+48
 124 00d0 0110A0E3 		mov	r1, #1
 125 00d4 FEFFFFEB 		bl	printf
 126              	.LVL12:
 124:print_mode.c  ****                     
 127              		.loc 1 124 0
 128 00d8 0E0000EA 		b	.L3
 129              	.LVL13:
 130              	.L7:
 127:print_mode.c  ****                     break;
 131              		.loc 1 127 0
 132 00dc 0800A0E1 		mov	r0, r8
 133 00e0 0210A0E3 		mov	r1, #2
 134 00e4 FEFFFFEB 		bl	printf
 135              	.LVL14:
 128:print_mode.c  ****                     
 136              		.loc 1 128 0
 137 00e8 0A0000EA 		b	.L3
 138              	.LVL15:
 139              	.L8:
 131:print_mode.c  ****                     break;
 140              		.loc 1 131 0
 141 00ec 0900A0E1 		mov	r0, r9
 142 00f0 0310A0E3 		mov	r1, #3
 143 00f4 FEFFFFEB 		bl	printf
 144              	.LVL16:
 132:print_mode.c  ****                     
 145              		.loc 1 132 0
 146 00f8 060000EA 		b	.L3
 147              	.LVL17:
 148              	.L9:
 135:print_mode.c  ****                     break;
 149              		.loc 1 135 0
 150 00fc 0A00A0E1 		mov	r0, r10
 151 0100 0410A0E3 		mov	r1, #4
 152 0104 FEFFFFEB 		bl	printf
 153              	.LVL18:
 136:print_mode.c  ****                     
 154              		.loc 1 136 0
 155 0108 020000EA 		b	.L3
 156              	.LVL19:
 157              	.L10:
 158              		.loc 1 139 0
 159 010c 0B00A0E1 		mov	r0, fp
 160 0110 0510A0E3 		mov	r1, #5
 161 0114 FEFFFFEB 		bl	printf
 162              	.LVL20:
 163              	.L3:
 164              	.LBE2:
  84:print_mode.c  ****         {
 165              		.loc 1 84 0
 166 0118 014084E2 		add	r4, r4, #1
 167              	.LVL21:
 168 011c 090054E3 		cmp	r4, #9
 169 0120 D4FFFF1A 		bne	.L13
 140:print_mode.c  ****                     break;
 141:print_mode.c  **** #endif
 142:print_mode.c  ****             }
 143:print_mode.c  ****         }
 144:print_mode.c  ****         printf("\n\r");
 170              		.loc 1 144 0
 171 0124 54009FE5 		ldr	r0, .L14+52
 172 0128 FEFFFFEB 		bl	printf
 173              	.LVL22:
 174 012c 095085E2 		add	r5, r5, #9
  82:print_mode.c  ****     {
 175              		.loc 1 82 0
 176 0130 04309DE5 		ldr	r3, [sp, #4]
 177 0134 030055E1 		cmp	r5, r3
 178 0138 0100000A 		beq	.L1
 179              	.LVL23:
 180              	.L2:
  71:print_mode.c  ****     
 181              		.loc 1 71 0 discriminator 1
 182 013c 0040A0E3 		mov	r4, #0
 183 0140 CCFFFFEA 		b	.L13
 184              	.LVL24:
 185              	.L1:
 145:print_mode.c  ****     }
 146:print_mode.c  **** }
 186              		.loc 1 146 0
 187 0144 0CD08DE2 		add	sp, sp, #12
 188              		@ sp needed
 189 0148 F08FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, r10, fp, pc}
 190              	.LVL25:
 191              	.L15:
 192              		.align	2
 193              	.L14:
 194 014c 00000000 		.word	.LC0
 195 0150 0C000000 		.word	.LC1
 196 0154 10000000 		.word	.LC2
 197 0158 14000000 		.word	.LC3
 198 015c 00000000 		.word	print_mode
 199 0160 00000000 		.word	color_data
 200 0164 398EE338 		.word	954437177
 201 0168 A4000000 		.word	.LC9
 202 016c 90000000 		.word	.LC8
 203 0170 7C000000 		.word	.LC7
 204 0174 68000000 		.word	.LC6
 205 0178 40000000 		.word	.LC4
 206 017c 54000000 		.word	.LC5
 207 0180 B8000000 		.word	.LC10
 208              		.cfi_endproc
 209              	.LFE33:
 210              		.fnend
 212              		.section	.rodata.str1.4,"aMS",%progbits,1
 213              		.align	2
 214              	.LC0:
 215 0000 58636F64 		.ascii	"XcodeColor\000"
 215      65436F6C 
 215      6F7200
 216 000b 00       		.space	1
 217              	.LC1:
 218 000c 59455300 		.ascii	"YES\000"
 219              	.LC2:
 220 0010 0A00     		.ascii	"\012\000"
 221 0012 0000     		.space	2
 222              	.LC3:
 223 0014 2E2E2E2E 		.ascii	".........................................\000"
 223      2E2E2E2E 
 223      2E2E2E2E 
 223      2E2E2E2E 
 223      2E2E2E2E 
 224 003e 0000     		.space	2
 225              	.LC4:
 226 0040 1B5B313B 		.ascii	"\033[1;30m   %d\033[0m\000"
 226      33306D20 
 226      20202564 
 226      1B5B306D 
 226      00
 227 0051 000000   		.space	3
 228              	.LC5:
 229 0054 1B5B313B 		.ascii	"\033[1;34m   %d\033[0m\000"
 229      33346D20 
 229      20202564 
 229      1B5B306D 
 229      00
 230 0065 000000   		.space	3
 231              	.LC6:
 232 0068 1B5B313B 		.ascii	"\033[1;33m   %d\033[0m\000"
 232      33336D20 
 232      20202564 
 232      1B5B306D 
 232      00
 233 0079 000000   		.space	3
 234              	.LC7:
 235 007c 1B5B313B 		.ascii	"\033[1;32m   %d\033[0m\000"
 235      33326D20 
 235      20202564 
 235      1B5B306D 
 235      00
 236 008d 000000   		.space	3
 237              	.LC8:
 238 0090 1B5B313B 		.ascii	"\033[1;35m   %d\033[0m\000"
 238      33356D20 
 238      20202564 
 238      1B5B306D 
 238      00
 239 00a1 000000   		.space	3
 240              	.LC9:
 241 00a4 1B5B313B 		.ascii	"\033[1;31m   %d\033[0m\000"
 241      33316D20 
 241      20202564 
 241      1B5B306D 
 241      00
 242 00b5 000000   		.space	3
 243              	.LC10:
 244 00b8 0A0D00   		.ascii	"\012\015\000"
 245 00bb 00       		.text
 246              	.Letext0:
 247              		.file 2 "/usr/local/carlson-minot/crosscompilers/lib/gcc/arm-none-linux-gnueabi/4.8.3/include/stdd
 248              		.file 3 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 249              		.file 4 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 250              		.file 5 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 251              		.file 6 "main.h"
 252              		.file 7 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
DEFINED SYMBOLS
                            *ABS*:0000000000000000 print_mode.c
/var/folders/23/5yg9vnhn5dd7xxkqmvdyw4ww0000gn/T//ccV6S0Qj.s:16     .text:0000000000000000 $a
/var/folders/23/5yg9vnhn5dd7xxkqmvdyw4ww0000gn/T//ccV6S0Qj.s:19     .text:0000000000000000 wuerfel_print
/var/folders/23/5yg9vnhn5dd7xxkqmvdyw4ww0000gn/T//ccV6S0Qj.s:106    .text:00000000000000a4 $d
/var/folders/23/5yg9vnhn5dd7xxkqmvdyw4ww0000gn/T//ccV6S0Qj.s:114    .text:00000000000000bc $a
/var/folders/23/5yg9vnhn5dd7xxkqmvdyw4ww0000gn/T//ccV6S0Qj.s:194    .text:000000000000014c $d
                       .ARM.exidx:0000000000000000 $d
/var/folders/23/5yg9vnhn5dd7xxkqmvdyw4ww0000gn/T//ccV6S0Qj.s:213    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
setenv
printf
print_mode
color_data
__aeabi_unwind_cpp_pr0
