   1              		.arch armv5te
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 2
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"print_mode.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.align	2
  17              		.global	reset_terminal_mode
  19              	reset_terminal_mode:
  20              		.fnstart
  21              	.LFB33:
  22              		.file 1 "print_mode.c"
   1:print_mode.c  **** //
   2:print_mode.c  **** //  print_mode.c
   3:print_mode.c  **** //  Cube3*3
   4:print_mode.c  **** //
   5:print_mode.c  **** //  Created by 杨春霞 on 12.11.15.
   6:print_mode.c  **** //  Copyright © 2015 Chunxia Yang. All rights reserved.
   7:print_mode.c  **** //
   8:print_mode.c  **** 
   9:print_mode.c  **** #include "print_mode.h"
  10:print_mode.c  **** #include "main.h"
  11:print_mode.c  **** 
  12:print_mode.c  **** #include <stdlib.h>
  13:print_mode.c  **** #include <stdio.h>
  14:print_mode.c  **** #include "Top_Cross.h"
  15:print_mode.c  **** #include <string.h>
  16:print_mode.c  **** #include <unistd.h>
  17:print_mode.c  **** #include <sys/select.h>
  18:print_mode.c  **** #include <termios.h>
  19:print_mode.c  **** 
  20:print_mode.c  **** #ifdef __linux__
  21:print_mode.c  **** #define RUN_EV3    1
  22:print_mode.c  **** #else
  23:print_mode.c  **** #define RUN_MACOS  1
  24:print_mode.c  **** #endif
  25:print_mode.c  **** 
  26:print_mode.c  **** //0 =Weisse 1 =Balu 2 =Gelb 3 =Gruen 4 =Rot 5 =Orangen
  27:print_mode.c  **** 
  28:print_mode.c  **** struct termios orig_termios;
  29:print_mode.c  **** 
  30:print_mode.c  **** void reset_terminal_mode()
  31:print_mode.c  **** {
  23              		.loc 1 31 0
  24              		.cfi_startproc
  25              		@ args = 0, pretend = 0, frame = 0
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27 0000 08402DE9 		stmfd	sp!, {r3, lr}
  28              		.save {r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
  32:print_mode.c  ****     tcsetattr(0, TCSANOW, &orig_termios);
  32              		.loc 1 32 0
  33 0004 0000A0E3 		mov	r0, #0
  34 0008 0010A0E1 		mov	r1, r0
  35 000c 04209FE5 		ldr	r2, .L2
  36 0010 FEFFFFEB 		bl	tcsetattr
  37              	.LVL0:
  38 0014 0880BDE8 		ldmfd	sp!, {r3, pc}
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 0018 00000000 		.word	orig_termios
  43              		.cfi_endproc
  44              	.LFE33:
  45              		.fnend
  47              		.align	2
  48              		.global	set_conio_terminal_mode
  50              	set_conio_terminal_mode:
  51              		.fnstart
  52              	.LFB34:
  33:print_mode.c  **** }
  34:print_mode.c  **** 
  35:print_mode.c  **** void set_conio_terminal_mode()
  36:print_mode.c  **** {
  53              		.loc 1 36 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 64
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57 001c 10402DE9 		stmfd	sp!, {r4, lr}
  58              		.save {r4, lr}
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 4, -8
  61              		.cfi_offset 14, -4
  62              		.pad #64
  63 0020 40D04DE2 		sub	sp, sp, #64
  64              		.cfi_def_cfa_offset 72
  37:print_mode.c  ****     struct termios new_termios;
  38:print_mode.c  ****     
  39:print_mode.c  ****     /* take two copies - one for now, one for later */
  40:print_mode.c  ****     tcgetattr(0, &orig_termios);
  65              		.loc 1 40 0
  66 0024 40409FE5 		ldr	r4, .L5
  67 0028 0000A0E3 		mov	r0, #0
  68 002c 0410A0E1 		mov	r1, r4
  69 0030 FEFFFFEB 		bl	tcgetattr
  70              	.LVL1:
  41:print_mode.c  ****     memcpy(&new_termios, &orig_termios, sizeof(new_termios));
  71              		.loc 1 41 0
  72 0034 04008DE2 		add	r0, sp, #4
  73 0038 0410A0E1 		mov	r1, r4
  74 003c 3C20A0E3 		mov	r2, #60
  75 0040 FEFFFFEB 		bl	memcpy
  76              	.LVL2:
  42:print_mode.c  ****     
  43:print_mode.c  ****     /* register cleanup handler, and set the new terminal mode */
  44:print_mode.c  ****     atexit(reset_terminal_mode);
  77              		.loc 1 44 0
  78 0044 24009FE5 		ldr	r0, .L5+4
  79 0048 FEFFFFEB 		bl	atexit
  80              	.LVL3:
  45:print_mode.c  ****     cfmakeraw(&new_termios);
  81              		.loc 1 45 0
  82 004c 04008DE2 		add	r0, sp, #4
  83 0050 FEFFFFEB 		bl	cfmakeraw
  84              	.LVL4:
  46:print_mode.c  ****     tcsetattr(0, TCSANOW, &new_termios);
  85              		.loc 1 46 0
  86 0054 0000A0E3 		mov	r0, #0
  87 0058 0010A0E1 		mov	r1, r0
  88 005c 04208DE2 		add	r2, sp, #4
  89 0060 FEFFFFEB 		bl	tcsetattr
  90              	.LVL5:
  47:print_mode.c  **** }
  91              		.loc 1 47 0
  92 0064 40D08DE2 		add	sp, sp, #64
  93              		@ sp needed
  94 0068 1080BDE8 		ldmfd	sp!, {r4, pc}
  95              	.L6:
  96              		.align	2
  97              	.L5:
  98 006c 00000000 		.word	orig_termios
  99 0070 00000000 		.word	reset_terminal_mode
 100              		.cfi_endproc
 101              	.LFE34:
 102              		.fnend
 104              		.align	2
 105              		.global	kbhit
 107              	kbhit:
 108              		.fnstart
 109              	.LFB35:
  48:print_mode.c  **** 
  49:print_mode.c  **** 
  50:print_mode.c  **** 
  51:print_mode.c  **** int kbhit()
  52:print_mode.c  **** {
 110              		.loc 1 52 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 136
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0074 04E02DE5 		str	lr, [sp, #-4]!
 115              		.save {lr}
 116              		.cfi_def_cfa_offset 4
 117              		.cfi_offset 14, -4
 118              		.pad #148
 119 0078 94D04DE2 		sub	sp, sp, #148
 120              		.cfi_def_cfa_offset 152
  53:print_mode.c  ****     struct timeval tv = { 0L, 0L };
 121              		.loc 1 53 0
 122 007c 0030A0E3 		mov	r3, #0
 123 0080 88308DE5 		str	r3, [sp, #136]
 124 0084 8C308DE5 		str	r3, [sp, #140]
 125              	.LVL6:
 126 0088 04308DE2 		add	r3, sp, #4
 127 008c 84108DE2 		add	r1, sp, #132
 128              	.LBB2:
  54:print_mode.c  ****     fd_set fds;
  55:print_mode.c  ****     FD_ZERO(&fds);
 129              		.loc 1 55 0
 130 0090 0020A0E3 		mov	r2, #0
 131              	.LVL7:
 132              	.L9:
 133              		.loc 1 55 0 is_stmt 0 discriminator 2
 134 0094 0420A3E5 		str	r2, [r3, #4]!
 135 0098 010053E1 		cmp	r3, r1
 136 009c FCFFFF1A 		bne	.L9
 137              	.LBE2:
  56:print_mode.c  ****     FD_SET(0, &fds);
 138              		.loc 1 56 0 is_stmt 1
 139 00a0 08309DE5 		ldr	r3, [sp, #8]
 140 00a4 013083E3 		orr	r3, r3, #1
 141 00a8 90108DE2 		add	r1, sp, #144
 142 00ac 883021E5 		str	r3, [r1, #-136]!
  57:print_mode.c  ****     return select(1, &fds, NULL, NULL, &tv);
 143              		.loc 1 57 0
 144 00b0 88308DE2 		add	r3, sp, #136
 145 00b4 00308DE5 		str	r3, [sp]
 146 00b8 0100A0E3 		mov	r0, #1
 147 00bc 0020A0E3 		mov	r2, #0
 148 00c0 0230A0E1 		mov	r3, r2
 149 00c4 FEFFFFEB 		bl	select
 150              	.LVL8:
  58:print_mode.c  **** }
 151              		.loc 1 58 0
 152 00c8 94D08DE2 		add	sp, sp, #148
 153              		@ sp needed
 154 00cc 04F09DE4 		ldr	pc, [sp], #4
 155              		.cfi_endproc
 156              	.LFE35:
 157              		.fnend
 159              		.align	2
 160              		.global	getch
 162              	getch:
 163              		.fnstart
 164              	.LFB36:
  59:print_mode.c  **** 
  60:print_mode.c  **** int getch()
  61:print_mode.c  **** {
 165              		.loc 1 61 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 8
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 00d0 04E02DE5 		str	lr, [sp, #-4]!
 170              		.save {lr}
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 14, -4
 173              		.pad #12
 174 00d4 0CD04DE2 		sub	sp, sp, #12
 175              		.cfi_def_cfa_offset 16
  62:print_mode.c  ****     int r;
  63:print_mode.c  ****     unsigned char c;
  64:print_mode.c  ****     if ((r = read(0, &c, sizeof(c))) < 0) {
 176              		.loc 1 64 0
 177 00d8 0000A0E3 		mov	r0, #0
 178 00dc 07108DE2 		add	r1, sp, #7
 179 00e0 0120A0E3 		mov	r2, #1
 180 00e4 FEFFFFEB 		bl	read
 181              	.LVL9:
 182 00e8 000050E3 		cmp	r0, #0
  65:print_mode.c  ****         return r;
  66:print_mode.c  ****     } else {
  67:print_mode.c  ****         return c;
 183              		.loc 1 67 0
 184 00ec 0700DDA5 		ldrgeb	r0, [sp, #7]	@ zero_extendqisi2
 185              	.LVL10:
  68:print_mode.c  ****     }
  69:print_mode.c  **** }
 186              		.loc 1 69 0
 187 00f0 0CD08DE2 		add	sp, sp, #12
 188              		@ sp needed
 189 00f4 04F09DE4 		ldr	pc, [sp], #4
 190              		.cfi_endproc
 191              	.LFE36:
 192              		.fnend
 194              		.align	2
 195              		.global	wuerfel_print
 197              	wuerfel_print:
 198              		.fnstart
 199              	.LFB37:
  70:print_mode.c  **** void wuerfel_print(int mode)
  71:print_mode.c  **** {
 200              		.loc 1 71 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              	.LVL11:
 205 00f8 F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 206              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 207              		.cfi_def_cfa_offset 36
 208              		.cfi_offset 4, -36
 209              		.cfi_offset 5, -32
 210              		.cfi_offset 6, -28
 211              		.cfi_offset 7, -24
 212              		.cfi_offset 8, -20
 213              		.cfi_offset 9, -16
 214              		.cfi_offset 10, -12
 215              		.cfi_offset 11, -8
 216              		.cfi_offset 14, -4
 217              		.pad #12
 218 00fc 0CD04DE2 		sub	sp, sp, #12
 219              		.cfi_def_cfa_offset 48
 220 0100 0050A0E1 		mov	r5, r0
  72:print_mode.c  ****     
  73:print_mode.c  ****     int zeile;
  74:print_mode.c  ****     int spalte;
  75:print_mode.c  ****     
  76:print_mode.c  ****     setenv("XcodeColor", "YES", 0);
 221              		.loc 1 76 0
 222 0104 38019FE5 		ldr	r0, .L27
 223              	.LVL12:
 224 0108 38119FE5 		ldr	r1, .L27+4
 225 010c 0020A0E3 		mov	r2, #0
 226 0110 FEFFFFEB 		bl	setenv
 227              	.LVL13:
  77:print_mode.c  ****     
  78:print_mode.c  ****     printf("\n");
 228              		.loc 1 78 0
 229 0114 30419FE5 		ldr	r4, .L27+8
 230 0118 0400A0E1 		mov	r0, r4
 231 011c FEFFFFEB 		bl	printf
 232              	.LVL14:
  79:print_mode.c  ****     printf(".........................................");
 233              		.loc 1 79 0
 234 0120 28019FE5 		ldr	r0, .L27+12
 235 0124 FEFFFFEB 		bl	printf
 236              	.LVL15:
  80:print_mode.c  ****     printf("\n");
 237              		.loc 1 80 0
 238 0128 0400A0E1 		mov	r0, r4
 239 012c FEFFFFEB 		bl	printf
 240              	.LVL16:
  81:print_mode.c  ****     printf("\n\r");
 241              		.loc 1 81 0
 242 0130 1C019FE5 		ldr	r0, .L27+16
 243 0134 FEFFFFEB 		bl	printf
 244              	.LVL17:
 245 0138 6C30A0E3 		mov	r3, #108
 246 013c 950303E0 		mul	r3, r5, r3
 247 0140 10219FE5 		ldr	r2, .L27+20
 248 0144 025083E0 		add	r5, r3, r2
 249              	.LVL18:
 250 0148 6C2082E2 		add	r2, r2, #108
 251 014c 022083E0 		add	r2, r3, r2
 252 0150 04208DE5 		str	r2, [sp, #4]
 253              	.LBB3:
  82:print_mode.c  ****     for(zeile=0;zeile<12;zeile++)
  83:print_mode.c  ****     {
  84:print_mode.c  ****         for(spalte=0;spalte<9;spalte++)
  85:print_mode.c  ****         {
  86:print_mode.c  ****             char tmp=print_mode[mode][zeile][spalte];
  87:print_mode.c  ****             if(tmp==-1)
  88:print_mode.c  **** #ifndef __linux__
  89:print_mode.c  ****                 printf("    ");
  90:print_mode.c  **** #endif
  91:print_mode.c  **** #ifdef __linux__
  92:print_mode.c  ****             printf("\033[1;30m   %d\033[0m", 0);
  93:print_mode.c  **** #endif
  94:print_mode.c  ****             else
  95:print_mode.c  ****                 switch(color_data[tmp/9][tmp%9])
 254              		.loc 1 95 0
 255 0154 00719FE5 		ldr	r7, .L27+24
 256 0158 00619FE5 		ldr	r6, .L27+28
  96:print_mode.c  ****             {
  97:print_mode.c  **** #ifdef RUN_MACOS
  98:print_mode.c  ****                 case 0:
  99:print_mode.c  ****                     printf("\033[fg0,0,0;   %d\033[;",color_data[tmp/9][tmp%9]);
 100:print_mode.c  ****                     break;
 101:print_mode.c  ****                     
 102:print_mode.c  ****                 case 1:
 103:print_mode.c  ****                     printf("\033[fg0,0,255;   %d\033[;",color_data[tmp/9][tmp%9]);
 104:print_mode.c  ****                     break;
 105:print_mode.c  ****                     
 106:print_mode.c  ****                 case 2:
 107:print_mode.c  ****                     printf("\033[fg255,255,0;   %d\033[;",color_data[tmp/9][tmp%9]);
 108:print_mode.c  ****                     break;
 109:print_mode.c  ****                     
 110:print_mode.c  ****                 case 3:
 111:print_mode.c  ****                     printf("\033[fg0,255,0;   %d\033[;",color_data[tmp/9][tmp%9]);
 112:print_mode.c  ****                     break;
 113:print_mode.c  ****                     
 114:print_mode.c  ****                 case 4:
 115:print_mode.c  ****                     printf("\033[fg255,0,0;   %d\033[;",color_data[tmp/9][tmp%9]);
 116:print_mode.c  ****                     break;
 117:print_mode.c  ****                     
 118:print_mode.c  ****                 case 5:
 119:print_mode.c  ****                     printf("\033[fg255,97,0;   %d\033[;",color_data[tmp/9][tmp%9]);
 120:print_mode.c  ****                     break;
 121:print_mode.c  **** #endif
 122:print_mode.c  **** #ifdef RUN_EV3
 123:print_mode.c  ****                 case 0:
 124:print_mode.c  ****                     printf("\033[1;30m   %d\033[0m",color_data[tmp/9][tmp%9]);
 125:print_mode.c  ****                     break;
 126:print_mode.c  ****                     
 127:print_mode.c  ****                 case 1:
 128:print_mode.c  ****                     printf("\033[1;34m   %d\033[0m",color_data[tmp/9][tmp%9]);
 129:print_mode.c  ****                     break;
 130:print_mode.c  ****                     
 131:print_mode.c  ****                 case 2:
 132:print_mode.c  ****                     printf("\033[1;33m   %d\033[0m",color_data[tmp/9][tmp%9]);
 133:print_mode.c  ****                     break;
 134:print_mode.c  ****                     
 135:print_mode.c  ****                 case 3:
 136:print_mode.c  ****                     printf("\033[1;32m   %d\033[0m",color_data[tmp/9][tmp%9]);
 137:print_mode.c  ****                     break;
 138:print_mode.c  ****                     
 139:print_mode.c  ****                 case 4:
 140:print_mode.c  ****                     printf("\033[1;31m   %d\033[0m",color_data[tmp/9][tmp%9]);
 141:print_mode.c  ****                     break;
 142:print_mode.c  ****                     
 143:print_mode.c  ****                 case 5:
 144:print_mode.c  ****                     printf("\033[1;35m   %d\033[0m",color_data[tmp/9][tmp%9]);
 257              		.loc 1 144 0
 258 015c 00B19FE5 		ldr	fp, .L27+32
 140:print_mode.c  ****                     break;
 259              		.loc 1 140 0
 260 0160 00A19FE5 		ldr	r10, .L27+36
 136:print_mode.c  ****                     break;
 261              		.loc 1 136 0
 262 0164 00919FE5 		ldr	r9, .L27+40
 132:print_mode.c  ****                     break;
 263              		.loc 1 132 0
 264 0168 00819FE5 		ldr	r8, .L27+44
 265 016c 300000EA 		b	.L15
 266              	.LVL19:
 267              	.L26:
  86:print_mode.c  ****             if(tmp==-1)
 268              		.loc 1 86 0
 269 0170 0420D5E7 		ldrb	r2, [r5, r4]	@ zero_extendqisi2
 270              	.LVL20:
  95:print_mode.c  ****             {
 271              		.loc 1 95 0
 272 0174 961283E0 		umull	r1, r3, r6, r2
 273 0178 A330A0E1 		mov	r3, r3, lsr #1
 274 017c 831183E0 		add	r1, r3, r3, asl #3
 275 0180 022061E0 		rsb	r2, r1, r2
 276 0184 FF2002E2 		and	r2, r2, #255
 277 0188 023081E0 		add	r3, r1, r2
 278 018c 0330D7E7 		ldrb	r3, [r7, r3]	@ zero_extendqisi2
 279 0190 050053E3 		cmp	r3, #5
 280 0194 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 281 0198 1C0000EA 		b	.L16
 282              	.L18:
 283 019c B4010000 		.word	.L17
 284 01a0 C4010000 		.word	.L19
 285 01a4 D4010000 		.word	.L20
 286 01a8 E4010000 		.word	.L21
 287 01ac F4010000 		.word	.L22
 288 01b0 04020000 		.word	.L23
 289              	.L17:
 124:print_mode.c  ****                     break;
 290              		.loc 1 124 0
 291 01b4 B8009FE5 		ldr	r0, .L27+48
 292 01b8 0010A0E3 		mov	r1, #0
 293 01bc FEFFFFEB 		bl	printf
 294              	.LVL21:
 125:print_mode.c  ****                     
 295              		.loc 1 125 0
 296 01c0 120000EA 		b	.L16
 297              	.LVL22:
 298              	.L19:
 128:print_mode.c  ****                     break;
 299              		.loc 1 128 0
 300 01c4 AC009FE5 		ldr	r0, .L27+52
 301 01c8 0110A0E3 		mov	r1, #1
 302 01cc FEFFFFEB 		bl	printf
 303              	.LVL23:
 129:print_mode.c  ****                     
 304              		.loc 1 129 0
 305 01d0 0E0000EA 		b	.L16
 306              	.LVL24:
 307              	.L20:
 132:print_mode.c  ****                     break;
 308              		.loc 1 132 0
 309 01d4 0800A0E1 		mov	r0, r8
 310 01d8 0210A0E3 		mov	r1, #2
 311 01dc FEFFFFEB 		bl	printf
 312              	.LVL25:
 133:print_mode.c  ****                     
 313              		.loc 1 133 0
 314 01e0 0A0000EA 		b	.L16
 315              	.LVL26:
 316              	.L21:
 136:print_mode.c  ****                     break;
 317              		.loc 1 136 0
 318 01e4 0900A0E1 		mov	r0, r9
 319 01e8 0310A0E3 		mov	r1, #3
 320 01ec FEFFFFEB 		bl	printf
 321              	.LVL27:
 137:print_mode.c  ****                     
 322              		.loc 1 137 0
 323 01f0 060000EA 		b	.L16
 324              	.LVL28:
 325              	.L22:
 140:print_mode.c  ****                     break;
 326              		.loc 1 140 0
 327 01f4 0A00A0E1 		mov	r0, r10
 328 01f8 0410A0E3 		mov	r1, #4
 329 01fc FEFFFFEB 		bl	printf
 330              	.LVL29:
 141:print_mode.c  ****                     
 331              		.loc 1 141 0
 332 0200 020000EA 		b	.L16
 333              	.LVL30:
 334              	.L23:
 335              		.loc 1 144 0
 336 0204 0B00A0E1 		mov	r0, fp
 337 0208 0510A0E3 		mov	r1, #5
 338 020c FEFFFFEB 		bl	printf
 339              	.LVL31:
 340              	.L16:
 341              	.LBE3:
  84:print_mode.c  ****         {
 342              		.loc 1 84 0
 343 0210 014084E2 		add	r4, r4, #1
 344              	.LVL32:
 345 0214 090054E3 		cmp	r4, #9
 346 0218 D4FFFF1A 		bne	.L26
 145:print_mode.c  ****                     break;
 146:print_mode.c  **** #endif
 147:print_mode.c  ****             }
 148:print_mode.c  ****         }
 149:print_mode.c  ****         printf("\n\r");
 347              		.loc 1 149 0
 348 021c 30009FE5 		ldr	r0, .L27+16
 349 0220 FEFFFFEB 		bl	printf
 350              	.LVL33:
 351 0224 095085E2 		add	r5, r5, #9
  82:print_mode.c  ****     {
 352              		.loc 1 82 0
 353 0228 04309DE5 		ldr	r3, [sp, #4]
 354 022c 030055E1 		cmp	r5, r3
 355 0230 0100000A 		beq	.L14
 356              	.LVL34:
 357              	.L15:
  71:print_mode.c  ****     
 358              		.loc 1 71 0 discriminator 1
 359 0234 0040A0E3 		mov	r4, #0
 360 0238 CCFFFFEA 		b	.L26
 361              	.LVL35:
 362              	.L14:
 150:print_mode.c  ****     }
 151:print_mode.c  **** }
 363              		.loc 1 151 0
 364 023c 0CD08DE2 		add	sp, sp, #12
 365              		@ sp needed
 366 0240 F08FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, r10, fp, pc}
 367              	.LVL36:
 368              	.L28:
 369              		.align	2
 370              	.L27:
 371 0244 00000000 		.word	.LC0
 372 0248 0C000000 		.word	.LC1
 373 024c 10000000 		.word	.LC2
 374 0250 14000000 		.word	.LC3
 375 0254 40000000 		.word	.LC4
 376 0258 00000000 		.word	print_mode
 377 025c 00000000 		.word	color_data
 378 0260 398EE338 		.word	954437177
 379 0264 A8000000 		.word	.LC10
 380 0268 94000000 		.word	.LC9
 381 026c 80000000 		.word	.LC8
 382 0270 6C000000 		.word	.LC7
 383 0274 44000000 		.word	.LC5
 384 0278 58000000 		.word	.LC6
 385              		.cfi_endproc
 386              	.LFE37:
 387              		.fnend
 389              		.comm	orig_termios,60,4
 390              		.section	.rodata.str1.4,"aMS",%progbits,1
 391              		.align	2
 392              	.LC0:
 393 0000 58636F64 		.ascii	"XcodeColor\000"
 393      65436F6C 
 393      6F7200
 394 000b 00       		.space	1
 395              	.LC1:
 396 000c 59455300 		.ascii	"YES\000"
 397              	.LC2:
 398 0010 0A00     		.ascii	"\012\000"
 399 0012 0000     		.space	2
 400              	.LC3:
 401 0014 2E2E2E2E 		.ascii	".........................................\000"
 401      2E2E2E2E 
 401      2E2E2E2E 
 401      2E2E2E2E 
 401      2E2E2E2E 
 402 003e 0000     		.space	2
 403              	.LC4:
 404 0040 0A0D00   		.ascii	"\012\015\000"
 405 0043 00       		.space	1
 406              	.LC5:
 407 0044 1B5B313B 		.ascii	"\033[1;30m   %d\033[0m\000"
 407      33306D20 
 407      20202564 
 407      1B5B306D 
 407      00
 408 0055 000000   		.space	3
 409              	.LC6:
 410 0058 1B5B313B 		.ascii	"\033[1;34m   %d\033[0m\000"
 410      33346D20 
 410      20202564 
 410      1B5B306D 
 410      00
 411 0069 000000   		.space	3
 412              	.LC7:
 413 006c 1B5B313B 		.ascii	"\033[1;33m   %d\033[0m\000"
 413      33336D20 
 413      20202564 
 413      1B5B306D 
 413      00
 414 007d 000000   		.space	3
 415              	.LC8:
 416 0080 1B5B313B 		.ascii	"\033[1;32m   %d\033[0m\000"
 416      33326D20 
 416      20202564 
 416      1B5B306D 
 416      00
 417 0091 000000   		.space	3
 418              	.LC9:
 419 0094 1B5B313B 		.ascii	"\033[1;31m   %d\033[0m\000"
 419      33316D20 
 419      20202564 
 419      1B5B306D 
 419      00
 420 00a5 000000   		.space	3
 421              	.LC10:
 422 00a8 1B5B313B 		.ascii	"\033[1;35m   %d\033[0m\000"
 422      33356D20 
 422      20202564 
 422      1B5B306D 
 422      00
 423 00b9 000000   		.text
 424              	.Letext0:
 425              		.file 2 "/usr/local/carlson-minot/crosscompilers/lib/gcc/arm-none-linux-gnueabi/4.8.3/include/stdd
 426              		.file 3 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 427              		.file 4 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 428              		.file 5 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 429              		.file 6 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 430              		.file 7 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 431              		.file 8 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 432              		.file 9 "main.h"
 433              		.file 10 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
 434              		.file 11 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
 435              		.file 12 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
 436              		.file 13 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
DEFINED SYMBOLS
                            *ABS*:0000000000000000 print_mode.c
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:16     .text:0000000000000000 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:19     .text:0000000000000000 reset_terminal_mode
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:42     .text:0000000000000018 $d
                            *COM*:000000000000003c orig_termios
                       .ARM.extab:0000000000000000 $d
                       .ARM.exidx:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:47     .text:000000000000001c $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:50     .text:000000000000001c set_conio_terminal_mode
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:98     .text:000000000000006c $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:104    .text:0000000000000074 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:107    .text:0000000000000074 kbhit
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:162    .text:00000000000000d0 getch
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:197    .text:00000000000000f8 wuerfel_print
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:283    .text:000000000000019c $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:291    .text:00000000000001b4 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:371    .text:0000000000000244 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccjkJy18.s:391    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
tcsetattr
__aeabi_unwind_cpp_pr1
tcgetattr
memcpy
atexit
cfmakeraw
__aeabi_unwind_cpp_pr0
select
read
setenv
printf
print_mode
color_data
