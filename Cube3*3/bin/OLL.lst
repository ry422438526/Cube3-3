   1              		.arch armv5te
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 2
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"OLL.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.align	2
  17              		.global	OLL
  19              	OLL:
  20              		.fnstart
  21              	.LFB11:
  22              		.file 1 "OLL.c"
   1:OLL.c         **** //
   2:OLL.c         **** //  OLL.c
   3:OLL.c         **** //  Cube3*3
   4:OLL.c         **** //
   5:OLL.c         **** //  Created by Ryoma on 09.12.15.
   6:OLL.c         **** //  Copyright Â© 2015 Chunxia Yang. All rights reserved.
   7:OLL.c         **** //
   8:OLL.c         **** 
   9:OLL.c         **** #include "OLL.h"
  10:OLL.c         **** #include "Color_search.h"
  11:OLL.c         **** #include "Side_dreh.h"
  12:OLL.c         **** #include "print_mode.h"
  13:OLL.c         **** 
  14:OLL.c         **** int OLL(){
  23              		.loc 1 14 0
  24              		.cfi_startproc
  25              		@ args = 0, pretend = 0, frame = 16
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27 0000 F0412DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
  28              		.save {r4, r5, r6, r7, r8, lr}
  29              		.cfi_def_cfa_offset 24
  30              		.cfi_offset 4, -24
  31              		.cfi_offset 5, -20
  32              		.cfi_offset 6, -16
  33              		.cfi_offset 7, -12
  34              		.cfi_offset 8, -8
  35              		.cfi_offset 14, -4
  36              		.pad #16
  37 0004 10D04DE2 		sub	sp, sp, #16
  38              		.cfi_def_cfa_offset 40
  15:OLL.c         ****     change_topface(2);
  39              		.loc 1 15 0
  40 0008 0200A0E3 		mov	r0, #2
  41 000c FEFFFFEB 		bl	change_topface
  42              	.LVL0:
  16:OLL.c         ****     change_rightface(4);
  43              		.loc 1 16 0
  44 0010 0400A0E3 		mov	r0, #4
  45 0014 FEFFFFEB 		bl	change_rightface
  46              	.LVL1:
  17:OLL.c         ****     wuerfel_print(1);
  47              		.loc 1 17 0
  48 0018 0100A0E3 		mov	r0, #1
  49 001c FEFFFFEB 		bl	wuerfel_print
  50              	.LVL2:
  18:OLL.c         ****     if ((color_data[0][1]!=2)&&(color_data[0][3]!=2)&&(color_data[0][5]!=2)&&(color_data[0][7]!=2))
  51              		.loc 1 18 0
  52 0020 A4399FE5 		ldr	r3, .L30
  53 0024 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
  54 0028 020053E3 		cmp	r3, #2
  55 002c 2300000A 		beq	.L2
  56              		.loc 1 18 0 is_stmt 0 discriminator 1
  57 0030 94399FE5 		ldr	r3, .L30
  58 0034 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
  59 0038 020053E3 		cmp	r3, #2
  60 003c 4500000A 		beq	.L18
  61 0040 84399FE5 		ldr	r3, .L30
  62 0044 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
  63 0048 020053E3 		cmp	r3, #2
  64 004c 4100000A 		beq	.L18
  65 0050 74399FE5 		ldr	r3, .L30
  66 0054 0730D3E5 		ldrb	r3, [r3, #7]	@ zero_extendqisi2
  67 0058 020053E3 		cmp	r3, #2
  68 005c 3D00000A 		beq	.L18
  19:OLL.c         ****     {
  20:OLL.c         ****         rs_dreh(-1, 90);
  69              		.loc 1 20 0 is_stmt 1
  70 0060 0000E0E3 		mvn	r0, #0
  71 0064 5A10A0E3 		mov	r1, #90
  72 0068 FEFFFFEB 		bl	rs_dreh
  73              	.LVL3:
  21:OLL.c         ****         fs_dreh(-1, 90);
  74              		.loc 1 21 0
  75 006c 0000E0E3 		mvn	r0, #0
  76 0070 5A10A0E3 		mov	r1, #90
  77 0074 FEFFFFEB 		bl	fs_dreh
  78              	.LVL4:
  22:OLL.c         ****         fs_dreh(-1, 90);
  79              		.loc 1 22 0
  80 0078 0000E0E3 		mvn	r0, #0
  81 007c 5A10A0E3 		mov	r1, #90
  82 0080 FEFFFFEB 		bl	fs_dreh
  83              	.LVL5:
  23:OLL.c         ****         rs_dreh(1, 90);
  84              		.loc 1 23 0
  85 0084 0100A0E3 		mov	r0, #1
  86 0088 5A10A0E3 		mov	r1, #90
  87 008c FEFFFFEB 		bl	rs_dreh
  88              	.LVL6:
  24:OLL.c         ****         ls_dreh(1, 90);
  89              		.loc 1 24 0
  90 0090 0100A0E3 		mov	r0, #1
  91 0094 5A10A0E3 		mov	r1, #90
  92 0098 FEFFFFEB 		bl	ls_dreh
  93              	.LVL7:
  25:OLL.c         ****         fs_dreh(1, 90);
  94              		.loc 1 25 0
  95 009c 0100A0E3 		mov	r0, #1
  96 00a0 5A10A0E3 		mov	r1, #90
  97 00a4 FEFFFFEB 		bl	fs_dreh
  98              	.LVL8:
  26:OLL.c         ****         change_topface(2);
  99              		.loc 1 26 0
 100 00a8 0200A0E3 		mov	r0, #2
 101 00ac FEFFFFEB 		bl	change_topface
 102              	.LVL9:
  27:OLL.c         ****     }
  28:OLL.c         ****         if((color_data[0][1]==2)&&(color_data[0][3]!=2)&&(color_data[0][5]!=2)&&(color_data[0][7]==
 103              		.loc 1 28 0
 104 00b0 14399FE5 		ldr	r3, .L30
 105 00b4 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 106 00b8 020053E3 		cmp	r3, #2
 107 00bc 2500001A 		bne	.L18
 108              	.L2:
 109              		.loc 1 28 0 is_stmt 0 discriminator 1
 110 00c0 04399FE5 		ldr	r3, .L30
 111 00c4 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 112 00c8 020053E3 		cmp	r3, #2
 113 00cc 4700000A 		beq	.L19
 114 00d0 F4389FE5 		ldr	r3, .L30
 115 00d4 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 116 00d8 020053E3 		cmp	r3, #2
 117 00dc 4300000A 		beq	.L19
 118 00e0 E4389FE5 		ldr	r3, .L30
 119 00e4 0730D3E5 		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 120 00e8 020053E3 		cmp	r3, #2
 121 00ec 3F00001A 		bne	.L19
  29:OLL.c         ****         {
  30:OLL.c         ****             wuerfel_print(1);
 122              		.loc 1 30 0 is_stmt 1
 123 00f0 0100A0E3 		mov	r0, #1
 124 00f4 FEFFFFEB 		bl	wuerfel_print
 125              	.LVL10:
  31:OLL.c         ****             rs_dreh(-1, 90);
 126              		.loc 1 31 0
 127 00f8 0000E0E3 		mvn	r0, #0
 128 00fc 5A10A0E3 		mov	r1, #90
 129 0100 FEFFFFEB 		bl	rs_dreh
 130              	.LVL11:
  32:OLL.c         ****             fs_dreh(-1, 90);
 131              		.loc 1 32 0
 132 0104 0000E0E3 		mvn	r0, #0
 133 0108 5A10A0E3 		mov	r1, #90
 134 010c FEFFFFEB 		bl	fs_dreh
 135              	.LVL12:
  33:OLL.c         ****             fs_dreh(-1, 90);
 136              		.loc 1 33 0
 137 0110 0000E0E3 		mvn	r0, #0
 138 0114 5A10A0E3 		mov	r1, #90
 139 0118 FEFFFFEB 		bl	fs_dreh
 140              	.LVL13:
  34:OLL.c         ****             rs_dreh(1, 90);
 141              		.loc 1 34 0
 142 011c 0100A0E3 		mov	r0, #1
 143 0120 5A10A0E3 		mov	r1, #90
 144 0124 FEFFFFEB 		bl	rs_dreh
 145              	.LVL14:
  35:OLL.c         ****             ls_dreh(1, 90);
 146              		.loc 1 35 0
 147 0128 0100A0E3 		mov	r0, #1
 148 012c 5A10A0E3 		mov	r1, #90
 149 0130 FEFFFFEB 		bl	ls_dreh
 150              	.LVL15:
  36:OLL.c         ****             fs_dreh(1, 90);
 151              		.loc 1 36 0
 152 0134 0100A0E3 		mov	r0, #1
 153 0138 5A10A0E3 		mov	r1, #90
 154 013c FEFFFFEB 		bl	fs_dreh
 155              	.LVL16:
  37:OLL.c         ****             change_topface(2);
 156              		.loc 1 37 0
 157 0140 0200A0E3 		mov	r0, #2
 158 0144 FEFFFFEB 		bl	change_topface
 159              	.LVL17:
  38:OLL.c         ****         }
  39:OLL.c         ****         if ((color_data[0][1]!=2)&&(color_data[0][3]==2)&&(color_data[0][5]==2)&&(color_data[0][7]!
 160              		.loc 1 39 0
 161 0148 7C389FE5 		ldr	r3, .L30
 162 014c 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 163 0150 020053E3 		cmp	r3, #2
 164 0154 2500000A 		beq	.L19
 165              	.L18:
 166              		.loc 1 39 0 is_stmt 0 discriminator 1
 167 0158 6C389FE5 		ldr	r3, .L30
 168 015c 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 169 0160 020053E3 		cmp	r3, #2
 170 0164 4500001A 		bne	.L20
 171 0168 5C389FE5 		ldr	r3, .L30
 172 016c 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 173 0170 020053E3 		cmp	r3, #2
 174 0174 4100001A 		bne	.L20
 175 0178 4C389FE5 		ldr	r3, .L30
 176 017c 0730D3E5 		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 177 0180 020053E3 		cmp	r3, #2
 178 0184 3D00000A 		beq	.L20
  40:OLL.c         ****         {
  41:OLL.c         ****             drehen(-1);
 179              		.loc 1 41 0 is_stmt 1
 180 0188 0000E0E3 		mvn	r0, #0
 181 018c FEFFFFEB 		bl	drehen
 182              	.LVL18:
  42:OLL.c         ****             rs_dreh(-1, 90);
 183              		.loc 1 42 0
 184 0190 0000E0E3 		mvn	r0, #0
 185 0194 5A10A0E3 		mov	r1, #90
 186 0198 FEFFFFEB 		bl	rs_dreh
 187              	.LVL19:
  43:OLL.c         ****             fs_dreh(-1, 90);
 188              		.loc 1 43 0
 189 019c 0000E0E3 		mvn	r0, #0
 190 01a0 5A10A0E3 		mov	r1, #90
 191 01a4 FEFFFFEB 		bl	fs_dreh
 192              	.LVL20:
  44:OLL.c         ****             fs_dreh(-1, 90);
 193              		.loc 1 44 0
 194 01a8 0000E0E3 		mvn	r0, #0
 195 01ac 5A10A0E3 		mov	r1, #90
 196 01b0 FEFFFFEB 		bl	fs_dreh
 197              	.LVL21:
  45:OLL.c         ****             rs_dreh(1, 90);
 198              		.loc 1 45 0
 199 01b4 0100A0E3 		mov	r0, #1
 200 01b8 5A10A0E3 		mov	r1, #90
 201 01bc FEFFFFEB 		bl	rs_dreh
 202              	.LVL22:
  46:OLL.c         ****             ls_dreh(1, 90);
 203              		.loc 1 46 0
 204 01c0 0100A0E3 		mov	r0, #1
 205 01c4 5A10A0E3 		mov	r1, #90
 206 01c8 FEFFFFEB 		bl	ls_dreh
 207              	.LVL23:
  47:OLL.c         ****             fs_dreh(1, 90);
 208              		.loc 1 47 0
 209 01cc 0100A0E3 		mov	r0, #1
 210 01d0 5A10A0E3 		mov	r1, #90
 211 01d4 FEFFFFEB 		bl	fs_dreh
 212              	.LVL24:
  48:OLL.c         ****             change_topface(2);
 213              		.loc 1 48 0
 214 01d8 0200A0E3 		mov	r0, #2
 215 01dc FEFFFFEB 		bl	change_topface
 216              	.LVL25:
  49:OLL.c         ****         }
  50:OLL.c         ****         if ((color_data[0][1]==2)&&(color_data[0][3]==2)&&(color_data[0][5]!=2)&&(color_data[0][7]!
 217              		.loc 1 50 0
 218 01e0 E4379FE5 		ldr	r3, .L30
 219 01e4 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 220 01e8 020053E3 		cmp	r3, #2
 221 01ec 2300001A 		bne	.L20
 222              	.L19:
 223              		.loc 1 50 0 is_stmt 0 discriminator 1
 224 01f0 D4379FE5 		ldr	r3, .L30
 225 01f4 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 226 01f8 020053E3 		cmp	r3, #2
 227 01fc 4500001A 		bne	.L21
 228 0200 C4379FE5 		ldr	r3, .L30
 229 0204 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 230 0208 020053E3 		cmp	r3, #2
 231 020c 4100000A 		beq	.L21
 232 0210 B4379FE5 		ldr	r3, .L30
 233 0214 0730D3E5 		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 234 0218 020053E3 		cmp	r3, #2
 235 021c 3D00000A 		beq	.L21
  51:OLL.c         ****         {
  52:OLL.c         ****             rs_dreh(-1, 90);
 236              		.loc 1 52 0 is_stmt 1
 237 0220 0000E0E3 		mvn	r0, #0
 238 0224 5A10A0E3 		mov	r1, #90
 239 0228 FEFFFFEB 		bl	rs_dreh
 240              	.LVL26:
  53:OLL.c         ****             rs_dreh(-1, 90);
 241              		.loc 1 53 0
 242 022c 0000E0E3 		mvn	r0, #0
 243 0230 5A10A0E3 		mov	r1, #90
 244 0234 FEFFFFEB 		bl	rs_dreh
 245              	.LVL27:
  54:OLL.c         ****             fs_dreh(-1, 90);
 246              		.loc 1 54 0
 247 0238 0000E0E3 		mvn	r0, #0
 248 023c 5A10A0E3 		mov	r1, #90
 249 0240 FEFFFFEB 		bl	fs_dreh
 250              	.LVL28:
  55:OLL.c         ****             rs_dreh(1, 90);
 251              		.loc 1 55 0
 252 0244 0100A0E3 		mov	r0, #1
 253 0248 5A10A0E3 		mov	r1, #90
 254 024c FEFFFFEB 		bl	rs_dreh
 255              	.LVL29:
  56:OLL.c         ****             ls_dreh(1, 90);
 256              		.loc 1 56 0
 257 0250 0100A0E3 		mov	r0, #1
 258 0254 5A10A0E3 		mov	r1, #90
 259 0258 FEFFFFEB 		bl	ls_dreh
 260              	.LVL30:
  57:OLL.c         ****             bs_dreh(1, 90);
 261              		.loc 1 57 0
 262 025c 0100A0E3 		mov	r0, #1
 263 0260 5A10A0E3 		mov	r1, #90
 264 0264 FEFFFFEB 		bl	bs_dreh
 265              	.LVL31:
  58:OLL.c         ****             change_topface(2);
 266              		.loc 1 58 0
 267 0268 0200A0E3 		mov	r0, #2
 268 026c FEFFFFEB 		bl	change_topface
 269              	.LVL32:
  59:OLL.c         ****         }
  60:OLL.c         ****         if((color_data[0][1]!=2)&&(color_data[0][3]==2)&&(color_data[0][5]!=2)&&(color_data[0][7]==
 270              		.loc 1 60 0
 271 0270 54379FE5 		ldr	r3, .L30
 272 0274 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 273 0278 020053E3 		cmp	r3, #2
 274 027c 2500000A 		beq	.L21
 275              	.L20:
 276              		.loc 1 60 0 is_stmt 0 discriminator 1
 277 0280 44379FE5 		ldr	r3, .L30
 278 0284 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 279 0288 020053E3 		cmp	r3, #2
 280 028c 4700001A 		bne	.L22
 281 0290 34379FE5 		ldr	r3, .L30
 282 0294 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 283 0298 020053E3 		cmp	r3, #2
 284 029c 4300000A 		beq	.L22
 285 02a0 24379FE5 		ldr	r3, .L30
 286 02a4 0730D3E5 		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 287 02a8 020053E3 		cmp	r3, #2
 288 02ac 3F00001A 		bne	.L22
  61:OLL.c         ****         {
  62:OLL.c         ****             drehen(1);
 289              		.loc 1 62 0 is_stmt 1
 290 02b0 0100A0E3 		mov	r0, #1
 291 02b4 FEFFFFEB 		bl	drehen
 292              	.LVL33:
  63:OLL.c         ****             rs_dreh(-1, 90);
 293              		.loc 1 63 0
 294 02b8 0000E0E3 		mvn	r0, #0
 295 02bc 5A10A0E3 		mov	r1, #90
 296 02c0 FEFFFFEB 		bl	rs_dreh
 297              	.LVL34:
  64:OLL.c         ****             rs_dreh(-1, 90);
 298              		.loc 1 64 0
 299 02c4 0000E0E3 		mvn	r0, #0
 300 02c8 5A10A0E3 		mov	r1, #90
 301 02cc FEFFFFEB 		bl	rs_dreh
 302              	.LVL35:
  65:OLL.c         ****             fs_dreh(-1, 90);
 303              		.loc 1 65 0
 304 02d0 0000E0E3 		mvn	r0, #0
 305 02d4 5A10A0E3 		mov	r1, #90
 306 02d8 FEFFFFEB 		bl	fs_dreh
 307              	.LVL36:
  66:OLL.c         ****             rs_dreh(1, 90);
 308              		.loc 1 66 0
 309 02dc 0100A0E3 		mov	r0, #1
 310 02e0 5A10A0E3 		mov	r1, #90
 311 02e4 FEFFFFEB 		bl	rs_dreh
 312              	.LVL37:
  67:OLL.c         ****             ls_dreh(1, 90);
 313              		.loc 1 67 0
 314 02e8 0100A0E3 		mov	r0, #1
 315 02ec 5A10A0E3 		mov	r1, #90
 316 02f0 FEFFFFEB 		bl	ls_dreh
 317              	.LVL38:
  68:OLL.c         ****             bs_dreh(1, 90);
 318              		.loc 1 68 0
 319 02f4 0100A0E3 		mov	r0, #1
 320 02f8 5A10A0E3 		mov	r1, #90
 321 02fc FEFFFFEB 		bl	bs_dreh
 322              	.LVL39:
  69:OLL.c         ****             change_topface(2);
 323              		.loc 1 69 0
 324 0300 0200A0E3 		mov	r0, #2
 325 0304 FEFFFFEB 		bl	change_topface
 326              	.LVL40:
  70:OLL.c         ****         }
  71:OLL.c         ****         if((color_data[0][1]==2)&&(color_data[0][3]!=2)&&(color_data[0][5]==2)&&(color_data[0][7]!=
 327              		.loc 1 71 0
 328 0308 BC369FE5 		ldr	r3, .L30
 329 030c 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 330 0310 020053E3 		cmp	r3, #2
 331 0314 2500001A 		bne	.L22
 332              	.L21:
 333              		.loc 1 71 0 is_stmt 0 discriminator 1
 334 0318 AC369FE5 		ldr	r3, .L30
 335 031c 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 336 0320 020053E3 		cmp	r3, #2
 337 0324 4500000A 		beq	.L8
 338 0328 9C369FE5 		ldr	r3, .L30
 339 032c 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 340 0330 020053E3 		cmp	r3, #2
 341 0334 4100001A 		bne	.L8
 342 0338 8C369FE5 		ldr	r3, .L30
 343 033c 0730D3E5 		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 344 0340 020053E3 		cmp	r3, #2
 345 0344 3D00000A 		beq	.L8
  72:OLL.c         ****         {
  73:OLL.c         ****             drehen(-1);            
 346              		.loc 1 73 0 is_stmt 1
 347 0348 0000E0E3 		mvn	r0, #0
 348 034c FEFFFFEB 		bl	drehen
 349              	.LVL41:
  74:OLL.c         ****             rs_dreh(-1, 90);
 350              		.loc 1 74 0
 351 0350 0000E0E3 		mvn	r0, #0
 352 0354 5A10A0E3 		mov	r1, #90
 353 0358 FEFFFFEB 		bl	rs_dreh
 354              	.LVL42:
  75:OLL.c         ****             rs_dreh(-1, 90);
 355              		.loc 1 75 0
 356 035c 0000E0E3 		mvn	r0, #0
 357 0360 5A10A0E3 		mov	r1, #90
 358 0364 FEFFFFEB 		bl	rs_dreh
 359              	.LVL43:
  76:OLL.c         ****             fs_dreh(-1, 90);
 360              		.loc 1 76 0
 361 0368 0000E0E3 		mvn	r0, #0
 362 036c 5A10A0E3 		mov	r1, #90
 363 0370 FEFFFFEB 		bl	fs_dreh
 364              	.LVL44:
  77:OLL.c         ****             rs_dreh(1, 90);
 365              		.loc 1 77 0
 366 0374 0100A0E3 		mov	r0, #1
 367 0378 5A10A0E3 		mov	r1, #90
 368 037c FEFFFFEB 		bl	rs_dreh
 369              	.LVL45:
  78:OLL.c         ****             ls_dreh(1, 90);
 370              		.loc 1 78 0
 371 0380 0100A0E3 		mov	r0, #1
 372 0384 5A10A0E3 		mov	r1, #90
 373 0388 FEFFFFEB 		bl	ls_dreh
 374              	.LVL46:
  79:OLL.c         ****             bs_dreh(1, 90);
 375              		.loc 1 79 0
 376 038c 0100A0E3 		mov	r0, #1
 377 0390 5A10A0E3 		mov	r1, #90
 378 0394 FEFFFFEB 		bl	bs_dreh
 379              	.LVL47:
  80:OLL.c         ****             change_topface(2);
 380              		.loc 1 80 0
 381 0398 0200A0E3 		mov	r0, #2
 382 039c FEFFFFEB 		bl	change_topface
 383              	.LVL48:
  81:OLL.c         ****         }
  82:OLL.c         ****         if((color_data[0][1]!=2)&&(color_data[0][3]!=2)&&(color_data[0][5]==2)&&(color_data[0][7]==
 384              		.loc 1 82 0
 385 03a0 24369FE5 		ldr	r3, .L30
 386 03a4 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 387 03a8 020053E3 		cmp	r3, #2
 388 03ac 2300000A 		beq	.L8
 389              	.L22:
 390              		.loc 1 82 0 is_stmt 0 discriminator 1
 391 03b0 14369FE5 		ldr	r3, .L30
 392 03b4 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 393 03b8 020053E3 		cmp	r3, #2
 394 03bc 1F00000A 		beq	.L8
 395 03c0 04369FE5 		ldr	r3, .L30
 396 03c4 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 397 03c8 020053E3 		cmp	r3, #2
 398 03cc 1B00001A 		bne	.L8
 399 03d0 F4359FE5 		ldr	r3, .L30
 400 03d4 0730D3E5 		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 401 03d8 020053E3 		cmp	r3, #2
 402 03dc 1700001A 		bne	.L8
  83:OLL.c         ****         {
  84:OLL.c         ****             drehen(1);
 403              		.loc 1 84 0 is_stmt 1
 404 03e0 0100A0E3 		mov	r0, #1
 405 03e4 FEFFFFEB 		bl	drehen
 406              	.LVL49:
  85:OLL.c         ****             drehen(1);
 407              		.loc 1 85 0
 408 03e8 0100A0E3 		mov	r0, #1
 409 03ec FEFFFFEB 		bl	drehen
 410              	.LVL50:
  86:OLL.c         ****             rs_dreh(-1, 90);
 411              		.loc 1 86 0
 412 03f0 0000E0E3 		mvn	r0, #0
 413 03f4 5A10A0E3 		mov	r1, #90
 414 03f8 FEFFFFEB 		bl	rs_dreh
 415              	.LVL51:
  87:OLL.c         ****             rs_dreh(-1, 90);
 416              		.loc 1 87 0
 417 03fc 0000E0E3 		mvn	r0, #0
 418 0400 5A10A0E3 		mov	r1, #90
 419 0404 FEFFFFEB 		bl	rs_dreh
 420              	.LVL52:
  88:OLL.c         ****             fs_dreh(-1, 90);
 421              		.loc 1 88 0
 422 0408 0000E0E3 		mvn	r0, #0
 423 040c 5A10A0E3 		mov	r1, #90
 424 0410 FEFFFFEB 		bl	fs_dreh
 425              	.LVL53:
  89:OLL.c         ****             rs_dreh(1, 90);
 426              		.loc 1 89 0
 427 0414 0100A0E3 		mov	r0, #1
 428 0418 5A10A0E3 		mov	r1, #90
 429 041c FEFFFFEB 		bl	rs_dreh
 430              	.LVL54:
  90:OLL.c         ****             ls_dreh(1, 90);
 431              		.loc 1 90 0
 432 0420 0100A0E3 		mov	r0, #1
 433 0424 5A10A0E3 		mov	r1, #90
 434 0428 FEFFFFEB 		bl	ls_dreh
 435              	.LVL55:
  91:OLL.c         ****             bs_dreh(1, 90);
 436              		.loc 1 91 0
 437 042c 0100A0E3 		mov	r0, #1
 438 0430 5A10A0E3 		mov	r1, #90
 439 0434 FEFFFFEB 		bl	bs_dreh
 440              	.LVL56:
  92:OLL.c         ****             change_topface(2);
 441              		.loc 1 92 0
 442 0438 0200A0E3 		mov	r0, #2
 443 043c FEFFFFEB 		bl	change_topface
 444              	.LVL57:
 445              	.L8:
  93:OLL.c         ****         }
  94:OLL.c         ****     
  95:OLL.c         ****     wuerfel_print(1);
 446              		.loc 1 95 0
 447 0440 0100A0E3 		mov	r0, #1
 448 0444 FEFFFFEB 		bl	wuerfel_print
 449              	.LVL58:
  96:OLL.c         ****     
  97:OLL.c         ****     int color_kanten[]={1,5,3,4};
 450              		.loc 1 97 0
 451 0448 80359FE5 		ldr	r3, .L30+4
 452 044c 0F0093E8 		ldmia	r3, {r0, r1, r2, r3}
 453 0450 10C08DE2 		add	ip, sp, #16
 454 0454 0F000CE9 		stmdb	ip, {r0, r1, r2, r3}
 455              	.LVL59:
 456 0458 04404DE2 		sub	r4, sp, #4
 457 045c 0C808DE2 		add	r8, sp, #12
  98:OLL.c         ****     // durch Formular
  99:OLL.c         ****     int i;
 100:OLL.c         ****     for(i=0;i<=3;i++){
 101:OLL.c         ****         
 102:OLL.c         ****         change_topface(2);
 458              		.loc 1 102 0
 459 0460 0270A0E3 		mov	r7, #2
 103:OLL.c         ****         change_rightface(color_kanten[i]);
 104:OLL.c         ****         wuerfel_print(1);
 460              		.loc 1 104 0
 461 0464 0160A0E3 		mov	r6, #1
 105:OLL.c         ****         
 106:OLL.c         ****         if((color_data[0][1]==2)&&(color_data[0][3]==2)&&(color_data[0][5]==2)&&(color_data[0][7]==
 462              		.loc 1 106 0
 463 0468 5C559FE5 		ldr	r5, .L30
 464              	.LVL60:
 465              	.L17:
 102:OLL.c         ****         change_rightface(color_kanten[i]);
 466              		.loc 1 102 0
 467 046c 0700A0E1 		mov	r0, r7
 468 0470 FEFFFFEB 		bl	change_topface
 469              	.LVL61:
 103:OLL.c         ****         change_rightface(color_kanten[i]);
 470              		.loc 1 103 0
 471 0474 0400B4E5 		ldr	r0, [r4, #4]!
 472 0478 FEFFFFEB 		bl	change_rightface
 473              	.LVL62:
 104:OLL.c         ****         
 474              		.loc 1 104 0
 475 047c 0600A0E1 		mov	r0, r6
 476 0480 FEFFFFEB 		bl	wuerfel_print
 477              	.LVL63:
 478              		.loc 1 106 0
 479 0484 0130D5E5 		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 480 0488 020053E3 		cmp	r3, #2
 481 048c 3501001A 		bne	.L9
 482              		.loc 1 106 0 is_stmt 0 discriminator 1
 483 0490 0330D5E5 		ldrb	r3, [r5, #3]	@ zero_extendqisi2
 484 0494 020053E3 		cmp	r3, #2
 485 0498 3201001A 		bne	.L9
 486 049c 0530D5E5 		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 487 04a0 020053E3 		cmp	r3, #2
 488 04a4 3201001A 		bne	.L10
 489 04a8 0730D5E5 		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 490 04ac 020053E3 		cmp	r3, #2
 491 04b0 2F01001A 		bne	.L10
 492 04b4 0930D5E5 		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 493 04b8 020053E3 		cmp	r3, #2
 494 04bc 2C01001A 		bne	.L10
 495 04c0 0B30D5E5 		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 496 04c4 020053E3 		cmp	r3, #2
 497 04c8 2901001A 		bne	.L10
 498 04cc 2130D5E5 		ldrb	r3, [r5, #33]	@ zero_extendqisi2
 499 04d0 020053E3 		cmp	r3, #2
 500 04d4 2601001A 		bne	.L10
 501 04d8 2330D5E5 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 502 04dc 020053E3 		cmp	r3, #2
 503 04e0 2301001A 		bne	.L10
 107:OLL.c         ****         {
 108:OLL.c         ****             rs_dreh(1, 90);
 504              		.loc 1 108 0 is_stmt 1
 505 04e4 0100A0E3 		mov	r0, #1
 506 04e8 5A10A0E3 		mov	r1, #90
 507 04ec FEFFFFEB 		bl	rs_dreh
 508              	.LVL64:
 109:OLL.c         ****             rs_dreh(1, 90);
 509              		.loc 1 109 0
 510 04f0 0100A0E3 		mov	r0, #1
 511 04f4 5A10A0E3 		mov	r1, #90
 512 04f8 FEFFFFEB 		bl	rs_dreh
 513              	.LVL65:
 110:OLL.c         ****             ds_dreh(1, 90);
 514              		.loc 1 110 0
 515 04fc 0100A0E3 		mov	r0, #1
 516 0500 5A10A0E3 		mov	r1, #90
 517 0504 FEFFFFEB 		bl	ds_dreh
 518              	.LVL66:
 111:OLL.c         ****             ls_dreh(-1, 90);
 519              		.loc 1 111 0
 520 0508 0000E0E3 		mvn	r0, #0
 521 050c 5A10A0E3 		mov	r1, #90
 522 0510 FEFFFFEB 		bl	ls_dreh
 523              	.LVL67:
 112:OLL.c         ****             rs_dreh(-1, 90);
 524              		.loc 1 112 0
 525 0514 0000E0E3 		mvn	r0, #0
 526 0518 5A10A0E3 		mov	r1, #90
 527 051c FEFFFFEB 		bl	rs_dreh
 528              	.LVL68:
 113:OLL.c         ****             ls_dreh(1, 90);
 529              		.loc 1 113 0
 530 0520 0100A0E3 		mov	r0, #1
 531 0524 5A10A0E3 		mov	r1, #90
 532 0528 FEFFFFEB 		bl	ls_dreh
 533              	.LVL69:
 114:OLL.c         ****             rs_dreh(1, 90);
 534              		.loc 1 114 0
 535 052c 0100A0E3 		mov	r0, #1
 536 0530 5A10A0E3 		mov	r1, #90
 537 0534 FEFFFFEB 		bl	rs_dreh
 538              	.LVL70:
 115:OLL.c         ****             ls_dreh(-1, 90);
 539              		.loc 1 115 0
 540 0538 0000E0E3 		mvn	r0, #0
 541 053c 5A10A0E3 		mov	r1, #90
 542 0540 FEFFFFEB 		bl	ls_dreh
 543              	.LVL71:
 116:OLL.c         ****             rs_dreh(-1, 90);
 544              		.loc 1 116 0
 545 0544 0000E0E3 		mvn	r0, #0
 546 0548 5A10A0E3 		mov	r1, #90
 547 054c FEFFFFEB 		bl	rs_dreh
 548              	.LVL72:
 117:OLL.c         ****             ls_dreh(1, 90);
 549              		.loc 1 117 0
 550 0550 0100A0E3 		mov	r0, #1
 551 0554 5A10A0E3 		mov	r1, #90
 552 0558 FEFFFFEB 		bl	ls_dreh
 553              	.LVL73:
 118:OLL.c         ****             rs_dreh(-1, 90);
 554              		.loc 1 118 0
 555 055c 0000E0E3 		mvn	r0, #0
 556 0560 5A10A0E3 		mov	r1, #90
 557 0564 FEFFFFEB 		bl	rs_dreh
 558              	.LVL74:
 119:OLL.c         ****             ls_dreh(-1, 90);
 559              		.loc 1 119 0
 560 0568 0000E0E3 		mvn	r0, #0
 561 056c 5A10A0E3 		mov	r1, #90
 562 0570 FEFFFFEB 		bl	ls_dreh
 563              	.LVL75:
 120:OLL.c         ****             goto fertig;
 564              		.loc 1 120 0
 565 0574 110100EA 		b	.L29
 566              	.L23:
 121:OLL.c         ****         }
 122:OLL.c         ****         if ((color_data[0][1]==2)&&(color_data[0][3]==2)&&(color_data[0][5]==2)&&(color_data[0][7]=
 567              		.loc 1 122 0 discriminator 1
 568 0578 0730D5E5 		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 569 057c 020053E3 		cmp	r3, #2
 570 0580 FE00001A 		bne	.L12
 571 0584 2A30D5E5 		ldrb	r3, [r5, #42]	@ zero_extendqisi2
 572 0588 020053E3 		cmp	r3, #2
 573 058c FB00001A 		bne	.L12
 574 0590 2C30D5E5 		ldrb	r3, [r5, #44]	@ zero_extendqisi2
 575 0594 020053E3 		cmp	r3, #2
 576 0598 F800001A 		bne	.L12
 577 059c 2330D5E5 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 578 05a0 020053E3 		cmp	r3, #2
 579 05a4 F500001A 		bne	.L12
 580 05a8 0B30D5E5 		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 581 05ac 020053E3 		cmp	r3, #2
 582 05b0 F200001A 		bne	.L12
 123:OLL.c         ****         {
 124:OLL.c         ****             rs_dreh(1, 90);
 583              		.loc 1 124 0
 584 05b4 0100A0E3 		mov	r0, #1
 585 05b8 5A10A0E3 		mov	r1, #90
 586 05bc FEFFFFEB 		bl	rs_dreh
 587              	.LVL76:
 125:OLL.c         ****             rs_dreh(-1, 90);
 588              		.loc 1 125 0
 589 05c0 0000E0E3 		mvn	r0, #0
 590 05c4 5A10A0E3 		mov	r1, #90
 591 05c8 FEFFFFEB 		bl	rs_dreh
 592              	.LVL77:
 126:OLL.c         ****             ds_dreh(-1, 90);
 593              		.loc 1 126 0
 594 05cc 0000E0E3 		mvn	r0, #0
 595 05d0 5A10A0E3 		mov	r1, #90
 596 05d4 FEFFFFEB 		bl	ds_dreh
 597              	.LVL78:
 127:OLL.c         ****             ls_dreh(-1, 180);
 598              		.loc 1 127 0
 599 05d8 0000E0E3 		mvn	r0, #0
 600 05dc B410A0E3 		mov	r1, #180
 601 05e0 FEFFFFEB 		bl	ls_dreh
 602              	.LVL79:
 128:OLL.c         ****             rs_dreh(-1, 90);
 603              		.loc 1 128 0
 604 05e4 0000E0E3 		mvn	r0, #0
 605 05e8 5A10A0E3 		mov	r1, #90
 606 05ec FEFFFFEB 		bl	rs_dreh
 607              	.LVL80:
 129:OLL.c         ****             ls_dreh(1, 180);
 608              		.loc 1 129 0
 609 05f0 0100A0E3 		mov	r0, #1
 610 05f4 B410A0E3 		mov	r1, #180
 611 05f8 FEFFFFEB 		bl	ls_dreh
 612              	.LVL81:
 130:OLL.c         ****             rs_dreh(-1, 90);
 613              		.loc 1 130 0
 614 05fc 0000E0E3 		mvn	r0, #0
 615 0600 5A10A0E3 		mov	r1, #90
 616 0604 FEFFFFEB 		bl	rs_dreh
 617              	.LVL82:
 131:OLL.c         ****             ls_dreh(-1, 180);
 618              		.loc 1 131 0
 619 0608 0000E0E3 		mvn	r0, #0
 620 060c B410A0E3 		mov	r1, #180
 621 0610 FEFFFFEB 		bl	ls_dreh
 622              	.LVL83:
 132:OLL.c         ****             rs_dreh(1, 180);
 623              		.loc 1 132 0
 624 0614 0100A0E3 		mov	r0, #1
 625 0618 B410A0E3 		mov	r1, #180
 626 061c FEFFFFEB 		bl	rs_dreh
 627              	.LVL84:
 133:OLL.c         ****             ls_dreh(1, 90);
 628              		.loc 1 133 0
 629 0620 0100A0E3 		mov	r0, #1
 630 0624 5A10A0E3 		mov	r1, #90
 631 0628 FEFFFFEB 		bl	ls_dreh
 632              	.LVL85:
 134:OLL.c         ****             goto fertig;
 633              		.loc 1 134 0
 634 062c E30000EA 		b	.L29
 635              	.L24:
 135:OLL.c         ****         }
 136:OLL.c         ****         if ((color_data[0][1]==2)&&(color_data[0][3]==2)&&(color_data[0][5]==2)&&(color_data[0][7]=
 636              		.loc 1 136 0 discriminator 1
 637 0630 0730D5E5 		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 638 0634 020053E3 		cmp	r3, #2
 639 0638 D300001A 		bne	.L13
 640 063c 0630D5E5 		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 641 0640 020053E3 		cmp	r3, #2
 642 0644 D000001A 		bne	.L13
 643 0648 0830D5E5 		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 644 064c 020053E3 		cmp	r3, #2
 645 0650 CD00001A 		bne	.L13
 646 0654 2130D5E5 		ldrb	r3, [r5, #33]	@ zero_extendqisi2
 647 0658 020053E3 		cmp	r3, #2
 648 065c CA00001A 		bne	.L13
 649 0660 2330D5E5 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
 650 0664 020053E3 		cmp	r3, #2
 651 0668 C700001A 		bne	.L13
 137:OLL.c         ****         {
 138:OLL.c         ****             rs_dreh(1, 180);
 652              		.loc 1 138 0
 653 066c 0100A0E3 		mov	r0, #1
 654 0670 B410A0E3 		mov	r1, #180
 655 0674 FEFFFFEB 		bl	rs_dreh
 656              	.LVL86:
 139:OLL.c         ****             ls_dreh(-1, 90);
 657              		.loc 1 139 0
 658 0678 0000E0E3 		mvn	r0, #0
 659 067c 5A10A0E3 		mov	r1, #90
 660 0680 FEFFFFEB 		bl	ls_dreh
 661              	.LVL87:
 140:OLL.c         ****             rs_dreh(1, 90);
 662              		.loc 1 140 0
 663 0684 0100A0E3 		mov	r0, #1
 664 0688 5A10A0E3 		mov	r1, #90
 665 068c FEFFFFEB 		bl	rs_dreh
 666              	.LVL88:
 141:OLL.c         ****             rs_dreh(-1, 90);
 667              		.loc 1 141 0
 668 0690 0000E0E3 		mvn	r0, #0
 669 0694 5A10A0E3 		mov	r1, #90
 670 0698 FEFFFFEB 		bl	rs_dreh
 671              	.LVL89:
 142:OLL.c         ****             ds_dreh(-1, 90);
 672              		.loc 1 142 0
 673 069c 0000E0E3 		mvn	r0, #0
 674 06a0 5A10A0E3 		mov	r1, #90
 675 06a4 FEFFFFEB 		bl	ds_dreh
 676              	.LVL90:
 143:OLL.c         ****             ls_dreh(-1, 90);
 677              		.loc 1 143 0
 678 06a8 0000E0E3 		mvn	r0, #0
 679 06ac 5A10A0E3 		mov	r1, #90
 680 06b0 FEFFFFEB 		bl	ls_dreh
 681              	.LVL91:
 144:OLL.c         ****             ls_dreh(1, 90);
 682              		.loc 1 144 0
 683 06b4 0100A0E3 		mov	r0, #1
 684 06b8 5A10A0E3 		mov	r1, #90
 685 06bc FEFFFFEB 		bl	ls_dreh
 686              	.LVL92:
 145:OLL.c         ****             rs_dreh(1, 90);
 687              		.loc 1 145 0
 688 06c0 0100A0E3 		mov	r0, #1
 689 06c4 5A10A0E3 		mov	r1, #90
 690 06c8 FEFFFFEB 		bl	rs_dreh
 691              	.LVL93:
 146:OLL.c         ****             rs_dreh(-1, 90);
 692              		.loc 1 146 0
 693 06cc 0000E0E3 		mvn	r0, #0
 694 06d0 5A10A0E3 		mov	r1, #90
 695 06d4 FEFFFFEB 		bl	rs_dreh
 696              	.LVL94:
 147:OLL.c         ****             ds_dreh(-1, 90);
 697              		.loc 1 147 0
 698 06d8 0000E0E3 		mvn	r0, #0
 699 06dc 5A10A0E3 		mov	r1, #90
 700 06e0 FEFFFFEB 		bl	ds_dreh
 701              	.LVL95:
 148:OLL.c         ****             ls_dreh(1, 90);
 702              		.loc 1 148 0
 703 06e4 0100A0E3 		mov	r0, #1
 704 06e8 5A10A0E3 		mov	r1, #90
 705 06ec FEFFFFEB 		bl	ls_dreh
 706              	.LVL96:
 149:OLL.c         ****             goto fertig;
 707              		.loc 1 149 0
 708 06f0 B20000EA 		b	.L29
 709              	.L25:
 150:OLL.c         ****         }
 151:OLL.c         ****         if ((color_data[0][1]==2)&&(color_data[0][3]==2)&&(color_data[0][5]==2)&&(color_data[0][7]=
 710              		.loc 1 151 0 discriminator 1
 711 06f4 0730D5E5 		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 712 06f8 020053E3 		cmp	r3, #2
 713 06fc A500001A 		bne	.L14
 714 0700 0230D5E5 		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 715 0704 020053E3 		cmp	r3, #2
 716 0708 A200001A 		bne	.L14
 717 070c 0830D5E5 		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 718 0710 020053E3 		cmp	r3, #2
 719 0714 9F00001A 		bne	.L14
 720 0718 2130D5E5 		ldrb	r3, [r5, #33]	@ zero_extendqisi2
 721 071c 020053E3 		cmp	r3, #2
 722 0720 9C00001A 		bne	.L14
 723 0724 0930D5E5 		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 724 0728 020053E3 		cmp	r3, #2
 725 072c 9900001A 		bne	.L14
 152:OLL.c         ****         {
 153:OLL.c         ****             ls_dreh(1, 90);
 726              		.loc 1 153 0
 727 0730 0100A0E3 		mov	r0, #1
 728 0734 5A10A0E3 		mov	r1, #90
 729 0738 FEFFFFEB 		bl	ls_dreh
 730              	.LVL97:
 154:OLL.c         ****             fs_dreh(1, 90);
 731              		.loc 1 154 0
 732 073c 0100A0E3 		mov	r0, #1
 733 0740 5A10A0E3 		mov	r1, #90
 734 0744 FEFFFFEB 		bl	fs_dreh
 735              	.LVL98:
 155:OLL.c         ****             ls_dreh(-1, 90);
 736              		.loc 1 155 0
 737 0748 0000E0E3 		mvn	r0, #0
 738 074c 5A10A0E3 		mov	r1, #90
 739 0750 FEFFFFEB 		bl	ls_dreh
 740              	.LVL99:
 156:OLL.c         ****             rs_dreh(-1, 90);
 741              		.loc 1 156 0
 742 0754 0000E0E3 		mvn	r0, #0
 743 0758 5A10A0E3 		mov	r1, #90
 744 075c FEFFFFEB 		bl	rs_dreh
 745              	.LVL100:
 157:OLL.c         ****             rs_dreh(-1, 90);
 746              		.loc 1 157 0
 747 0760 0000E0E3 		mvn	r0, #0
 748 0764 5A10A0E3 		mov	r1, #90
 749 0768 FEFFFFEB 		bl	rs_dreh
 750              	.LVL101:
 158:OLL.c         ****             ls_dreh(1, 90); ///////////////////////
 751              		.loc 1 158 0
 752 076c 0100A0E3 		mov	r0, #1
 753 0770 5A10A0E3 		mov	r1, #90
 754 0774 FEFFFFEB 		bl	ls_dreh
 755              	.LVL102:
 159:OLL.c         ****             ls_dreh(1, 90);
 756              		.loc 1 159 0
 757 0778 0100A0E3 		mov	r0, #1
 758 077c 5A10A0E3 		mov	r1, #90
 759 0780 FEFFFFEB 		bl	ls_dreh
 760              	.LVL103:
 160:OLL.c         ****             rs_dreh(-1, 90);
 761              		.loc 1 160 0
 762 0784 0000E0E3 		mvn	r0, #0
 763 0788 5A10A0E3 		mov	r1, #90
 764 078c FEFFFFEB 		bl	rs_dreh
 765              	.LVL104:
 161:OLL.c         ****             goto fertig;
 766              		.loc 1 161 0
 767 0790 8A0000EA 		b	.L29
 768              	.L26:
 162:OLL.c         ****         }
 163:OLL.c         ****         if((color_data[0][1]==2)&&(color_data[0][3]==2)&&(color_data[0][5]==2)&&(color_data[0][7]==
 769              		.loc 1 163 0 discriminator 1
 770 0794 0730D5E5 		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 771 0798 020053E3 		cmp	r3, #2
 772 079c 8000001A 		bne	.L15
 773 07a0 0630D5E5 		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 774 07a4 020053E3 		cmp	r3, #2
 775 07a8 7D00001A 		bne	.L15
 776 07ac 0230D5E5 		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 777 07b0 020053E3 		cmp	r3, #2
 778 07b4 7A00001A 		bne	.L15
 779 07b8 2C30D5E5 		ldrb	r3, [r5, #44]	@ zero_extendqisi2
 780 07bc 020053E3 		cmp	r3, #2
 781 07c0 7700001A 		bne	.L15
 782 07c4 0B30D5E5 		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 783 07c8 020053E3 		cmp	r3, #2
 784 07cc 7400001A 		bne	.L15
 164:OLL.c         ****             //formular 25
 165:OLL.c         ****         {
 166:OLL.c         ****             fs_dreh(-1, 90);
 785              		.loc 1 166 0
 786 07d0 0000E0E3 		mvn	r0, #0
 787 07d4 5A10A0E3 		mov	r1, #90
 788 07d8 FEFFFFEB 		bl	fs_dreh
 789              	.LVL105:
 167:OLL.c         ****             bs_dreh(1, 90);
 790              		.loc 1 167 0
 791 07dc 0100A0E3 		mov	r0, #1
 792 07e0 5A10A0E3 		mov	r1, #90
 793 07e4 FEFFFFEB 		bl	bs_dreh
 794              	.LVL106:
 168:OLL.c         ****             rs_dreh(1, 90);
 795              		.loc 1 168 0
 796 07e8 0100A0E3 		mov	r0, #1
 797 07ec 5A10A0E3 		mov	r1, #90
 798 07f0 FEFFFFEB 		bl	rs_dreh
 799              	.LVL107:
 169:OLL.c         ****             rs_dreh(-1, 90);
 800              		.loc 1 169 0
 801 07f4 0000E0E3 		mvn	r0, #0
 802 07f8 5A10A0E3 		mov	r1, #90
 803 07fc FEFFFFEB 		bl	rs_dreh
 804              	.LVL108:
 170:OLL.c         ****             ls_dreh(-1, 90);
 805              		.loc 1 170 0
 806 0800 0000E0E3 		mvn	r0, #0
 807 0804 5A10A0E3 		mov	r1, #90
 808 0808 FEFFFFEB 		bl	ls_dreh
 809              	.LVL109:
 171:OLL.c         ****             ls_dreh(-1, 90);
 810              		.loc 1 171 0
 811 080c 0000E0E3 		mvn	r0, #0
 812 0810 5A10A0E3 		mov	r1, #90
 813 0814 FEFFFFEB 		bl	ls_dreh
 814              	.LVL110:
 172:OLL.c         ****             rs_dreh(1, 90);
 815              		.loc 1 172 0
 816 0818 0100A0E3 		mov	r0, #1
 817 081c 5A10A0E3 		mov	r1, #90
 818 0820 FEFFFFEB 		bl	rs_dreh
 819              	.LVL111:
 173:OLL.c         ****             rs_dreh(1, 90);
 820              		.loc 1 173 0
 821 0824 0100A0E3 		mov	r0, #1
 822 0828 5A10A0E3 		mov	r1, #90
 823 082c FEFFFFEB 		bl	rs_dreh
 824              	.LVL112:
 174:OLL.c         ****             goto fertig;
 825              		.loc 1 174 0
 826 0830 620000EA 		b	.L29
 827              	.L27:
 175:OLL.c         ****         }
 176:OLL.c         ****         if((color_data[0][1]==2)&&(color_data[0][3]==2)&&(color_data[0][5]==2)&&(color_data[0][7]==
 828              		.loc 1 176 0 discriminator 1
 829 0834 0730D5E5 		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 830 0838 020053E3 		cmp	r3, #2
 831 083c 5B00001A 		bne	.L16
 832 0840 0230D5E5 		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 833 0844 020053E3 		cmp	r3, #2
 834 0848 5800001A 		bne	.L16
 835 084c 2C30D5E5 		ldrb	r3, [r5, #44]	@ zero_extendqisi2
 836 0850 020053E3 		cmp	r3, #2
 837 0854 5500001A 		bne	.L16
 838 0858 0930D5E5 		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 839 085c 020053E3 		cmp	r3, #2
 840 0860 5200001A 		bne	.L16
 841 0864 3530D5E5 		ldrb	r3, [r5, #53]	@ zero_extendqisi2
 842 0868 020053E3 		cmp	r3, #2
 843 086c 4F00001A 		bne	.L16
 177:OLL.c         ****         {
 178:OLL.c         ****             
 179:OLL.c         ****             rs_dreh(1, 90);
 844              		.loc 1 179 0
 845 0870 0100A0E3 		mov	r0, #1
 846 0874 5A10A0E3 		mov	r1, #90
 847 0878 FEFFFFEB 		bl	rs_dreh
 848              	.LVL113:
 180:OLL.c         ****             rs_dreh(-1, 90);
 849              		.loc 1 180 0
 850 087c 0000E0E3 		mvn	r0, #0
 851 0880 5A10A0E3 		mov	r1, #90
 852 0884 FEFFFFEB 		bl	rs_dreh
 853              	.LVL114:
 181:OLL.c         ****             ds_dreh(-1, 90);
 854              		.loc 1 181 0
 855 0888 0000E0E3 		mvn	r0, #0
 856 088c 5A10A0E3 		mov	r1, #90
 857 0890 FEFFFFEB 		bl	ds_dreh
 858              	.LVL115:
 182:OLL.c         ****             ls_dreh(-1, 90);
 859              		.loc 1 182 0
 860 0894 0000E0E3 		mvn	r0, #0
 861 0898 5A10A0E3 		mov	r1, #90
 862 089c FEFFFFEB 		bl	ls_dreh
 863              	.LVL116:
 183:OLL.c         ****             rs_dreh(-1, 90);
 864              		.loc 1 183 0
 865 08a0 0000E0E3 		mvn	r0, #0
 866 08a4 5A10A0E3 		mov	r1, #90
 867 08a8 FEFFFFEB 		bl	rs_dreh
 868              	.LVL117:
 184:OLL.c         ****             ls_dreh(1, 90);
 869              		.loc 1 184 0
 870 08ac 0100A0E3 		mov	r0, #1
 871 08b0 5A10A0E3 		mov	r1, #90
 872 08b4 FEFFFFEB 		bl	ls_dreh
 873              	.LVL118:
 185:OLL.c         ****             rs_dreh(-1, 90);
 874              		.loc 1 185 0
 875 08b8 0000E0E3 		mvn	r0, #0
 876 08bc 5A10A0E3 		mov	r1, #90
 877 08c0 FEFFFFEB 		bl	rs_dreh
 878              	.LVL119:
 186:OLL.c         ****             ls_dreh(-1, 90);
 879              		.loc 1 186 0
 880 08c4 0000E0E3 		mvn	r0, #0
 881 08c8 5A10A0E3 		mov	r1, #90
 882 08cc FEFFFFEB 		bl	ls_dreh
 883              	.LVL120:
 187:OLL.c         ****             goto fertig;
 884              		.loc 1 187 0
 885 08d0 3A0000EA 		b	.L29
 886              	.L28:
 188:OLL.c         ****         }
 189:OLL.c         ****         if((color_data[0][1]==2)&&(color_data[0][3]==2)&&(color_data[0][5]==2)&&(color_data[0][7]==
 887              		.loc 1 189 0 discriminator 1
 888 08d4 0730D5E5 		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 889 08d8 020053E3 		cmp	r3, #2
 890 08dc 2100001A 		bne	.L9
 891 08e0 0830D5E5 		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 892 08e4 020053E3 		cmp	r3, #2
 893 08e8 1E00001A 		bne	.L9
 894 08ec 2A30D5E5 		ldrb	r3, [r5, #42]	@ zero_extendqisi2
 895 08f0 020053E3 		cmp	r3, #2
 896 08f4 1B00001A 		bne	.L9
 897 08f8 2130D5E5 		ldrb	r3, [r5, #33]	@ zero_extendqisi2
 898 08fc 020053E3 		cmp	r3, #2
 899 0900 1800001A 		bne	.L9
 900 0904 3330D5E5 		ldrb	r3, [r5, #51]	@ zero_extendqisi2
 901 0908 020053E3 		cmp	r3, #2
 902 090c 1500001A 		bne	.L9
 190:OLL.c         ****             //formular 27
 191:OLL.c         ****         {
 192:OLL.c         ****             
 193:OLL.c         ****             rs_dreh(-1, 90);
 903              		.loc 1 193 0
 904 0910 0000E0E3 		mvn	r0, #0
 905 0914 5A10A0E3 		mov	r1, #90
 906 0918 FEFFFFEB 		bl	rs_dreh
 907              	.LVL121:
 194:OLL.c         ****             rs_dreh(1, 180);
 908              		.loc 1 194 0
 909 091c 0100A0E3 		mov	r0, #1
 910 0920 B410A0E3 		mov	r1, #180
 911 0924 FEFFFFEB 		bl	rs_dreh
 912              	.LVL122:
 195:OLL.c         ****             ls_dreh(1, 90);
 913              		.loc 1 195 0
 914 0928 0100A0E3 		mov	r0, #1
 915 092c 5A10A0E3 		mov	r1, #90
 916 0930 FEFFFFEB 		bl	ls_dreh
 917              	.LVL123:
 196:OLL.c         ****             rs_dreh(1, 90);
 918              		.loc 1 196 0
 919 0934 0100A0E3 		mov	r0, #1
 920 0938 5A10A0E3 		mov	r1, #90
 921 093c FEFFFFEB 		bl	rs_dreh
 922              	.LVL124:
 197:OLL.c         ****             ls_dreh(-1, 90);
 923              		.loc 1 197 0
 924 0940 0000E0E3 		mvn	r0, #0
 925 0944 5A10A0E3 		mov	r1, #90
 926 0948 FEFFFFEB 		bl	ls_dreh
 927              	.LVL125:
 198:OLL.c         ****             rs_dreh(1, 90);
 928              		.loc 1 198 0
 929 094c 0100A0E3 		mov	r0, #1
 930 0950 5A10A0E3 		mov	r1, #90
 931 0954 FEFFFFEB 		bl	rs_dreh
 932              	.LVL126:
 199:OLL.c         ****             ls_dreh(1, 90);
 933              		.loc 1 199 0
 934 0958 0100A0E3 		mov	r0, #1
 935 095c 5A10A0E3 		mov	r1, #90
 936 0960 FEFFFFEB 		bl	ls_dreh
 937              	.LVL127:
 200:OLL.c         ****             goto fertig;
 938              		.loc 1 200 0
 939 0964 150000EA 		b	.L29
 940              	.L9:
 100:OLL.c         ****         
 941              		.loc 1 100 0
 942 0968 080054E1 		cmp	r4, r8
 943 096c BEFEFF1A 		bne	.L17
 944              	.L11:
 945 0970 120000EA 		b	.L29
 946              	.L10:
 122:OLL.c         ****         {
 947              		.loc 1 122 0
 948 0974 0530D5E5 		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 949 0978 020053E3 		cmp	r3, #2
 950 097c FDFEFF0A 		beq	.L23
 951              	.L12:
 136:OLL.c         ****         {
 952              		.loc 1 136 0
 953 0980 0530D5E5 		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 954 0984 020053E3 		cmp	r3, #2
 955 0988 28FFFF0A 		beq	.L24
 956              	.L13:
 151:OLL.c         ****         {
 957              		.loc 1 151 0
 958 098c 0530D5E5 		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 959 0990 020053E3 		cmp	r3, #2
 960 0994 56FFFF0A 		beq	.L25
 961              	.L14:
 163:OLL.c         ****             //formular 25
 962              		.loc 1 163 0
 963 0998 0530D5E5 		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 964 099c 020053E3 		cmp	r3, #2
 965 09a0 7BFFFF0A 		beq	.L26
 966              	.L15:
 176:OLL.c         ****         {
 967              		.loc 1 176 0
 968 09a4 0530D5E5 		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 969 09a8 020053E3 		cmp	r3, #2
 970 09ac A0FFFF0A 		beq	.L27
 971              	.L16:
 189:OLL.c         ****             //formular 27
 972              		.loc 1 189 0
 973 09b0 0530D5E5 		ldrb	r3, [r5, #5]	@ zero_extendqisi2
 974 09b4 020053E3 		cmp	r3, #2
 975 09b8 EAFFFF1A 		bne	.L9
 976 09bc C4FFFFEA 		b	.L28
 977              	.L29:
 201:OLL.c         ****         }
 202:OLL.c         ****     }
 203:OLL.c         ****        fertig:return 0;
 204:OLL.c         **** }
 978              		.loc 1 204 0
 979 09c0 0000A0E3 		mov	r0, #0
 980 09c4 10D08DE2 		add	sp, sp, #16
 981              		@ sp needed
 982 09c8 F081BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, pc}
 983              	.L31:
 984              		.align	2
 985              	.L30:
 986 09cc 00000000 		.word	color_data
 987 09d0 00000000 		.word	.LANCHOR0
 988              		.cfi_endproc
 989              	.LFE11:
 990              		.fnend
 992              		.section	.rodata
 993              		.align	2
 994              	.LANCHOR0 = . + 0
 995              	.LC0:
 996 0000 01000000 		.word	1
 997 0004 05000000 		.word	5
 998 0008 03000000 		.word	3
 999 000c 04000000 		.word	4
 1000              		.text
 1001              	.Letext0:
 1002              		.file 2 "/usr/local/carlson-minot/crosscompilers/lib/gcc/arm-none-linux-gnueabi/4.8.3/include/stdd
 1003              		.file 3 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 1004              		.file 4 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 1005              		.file 5 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 1006              		.file 6 "main.h"
 1007              		.file 7 "Side_dreh.h"
 1008              		.file 8 "print_mode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 OLL.c
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cchgM80U.s:16     .text:0000000000000000 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cchgM80U.s:19     .text:0000000000000000 OLL
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cchgM80U.s:986    .text:00000000000009cc $d
                       .ARM.exidx:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cchgM80U.s:993    .rodata:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
change_topface
change_rightface
wuerfel_print
rs_dreh
fs_dreh
ls_dreh
drehen
bs_dreh
ds_dreh
color_data
__aeabi_unwind_cpp_pr0
