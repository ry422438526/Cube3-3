   1              		.arch armv5te
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 2
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"Farbe_sen.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.align	2
  17              		.global	ColSen_init
  19              	ColSen_init:
  20              		.fnstart
  21              	.LFB11:
  22              		.file 1 "Farbe_sen.c"
   1:Farbe_sen.c   **** //
   2:Farbe_sen.c   **** //  Farbe_sen.c
   3:Farbe_sen.c   **** //  Cube3*3
   4:Farbe_sen.c   **** //
   5:Farbe_sen.c   **** //  Created by 杨春霞 on 12.11.15.
   6:Farbe_sen.c   **** //  Copyright © 2015 Chunxia Yang. All rights reserved.
   7:Farbe_sen.c   **** //
   8:Farbe_sen.c   **** 
   9:Farbe_sen.c   **** #include "Farbe_sen.h"
  10:Farbe_sen.c   **** #include <fcntl.h>
  11:Farbe_sen.c   **** #include <stdio.h>
  12:Farbe_sen.c   **** #include <sys/ioctl.h>
  13:Farbe_sen.c   **** #include <sys/mman.h>
  14:Farbe_sen.c   **** #ifdef __linux__
  15:Farbe_sen.c   **** #include "lms2012.h"
  16:Farbe_sen.c   **** #include <unistd.h>
  17:Farbe_sen.c   **** #endif
  18:Farbe_sen.c   **** #include "main.h"
  19:Farbe_sen.c   **** typedef enum
  20:Farbe_sen.c   **** {
  21:Farbe_sen.c   ****     WEISS=0,
  22:Farbe_sen.c   ****     BLAU=1,
  23:Farbe_sen.c   ****     GELB=2,
  24:Farbe_sen.c   ****     GRUEN=3,
  25:Farbe_sen.c   ****     ROT=4,
  26:Farbe_sen.c   ****     ORANGE=5
  27:Farbe_sen.c   **** }Farbe;
  28:Farbe_sen.c   **** 
  29:Farbe_sen.c   **** #ifdef __linux__
  30:Farbe_sen.c   ****  int  PORT=0x0;
  31:Farbe_sen.c   **** const DATA8 RGB_RAW=4;     //color mode
  32:Farbe_sen.c   **** const DATA8 COLOR_SENSOR_TYPE=29;
  33:Farbe_sen.c   **** const int MAX_SAMPLES =10;
  34:Farbe_sen.c   **** int file;
  35:Farbe_sen.c   **** UART *pColorSensor;
  36:Farbe_sen.c   **** DEVCON DevCon;   //Configuration parameters
  37:Farbe_sen.c   **** #endif
  38:Farbe_sen.c   **** 
  39:Farbe_sen.c   **** #ifdef __linux__
  40:Farbe_sen.c   **** int ColSen_init()
  41:Farbe_sen.c   **** {
  23              		.loc 1 41 0
  24              		.cfi_startproc
  25              		@ args = 0, pretend = 0, frame = 0
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27 0000 04E02DE5 		str	lr, [sp, #-4]!
  28              		.save {lr}
  29              		.cfi_def_cfa_offset 4
  30              		.cfi_offset 14, -4
  31              		.pad #12
  32 0004 0CD04DE2 		sub	sp, sp, #12
  33              		.cfi_def_cfa_offset 16
  42:Farbe_sen.c   **** 
  43:Farbe_sen.c   ****     if((file = open(UART_DEVICE_NAME, O_RDWR | O_SYNC)) == -1)
  34              		.loc 1 43 0
  35 0008 AC009FE5 		ldr	r0, .L5
  36 000c AC109FE5 		ldr	r1, .L5+4
  37 0010 FEFFFFEB 		bl	open
  38              	.LVL0:
  39 0014 A8309FE5 		ldr	r3, .L5+8
  40 0018 000083E5 		str	r0, [r3]
  41 001c 010070E3 		cmn	r0, #1
  42 0020 0300001A 		bne	.L2
  44:Farbe_sen.c   ****     {
  45:Farbe_sen.c   ****         printf("Failed to open device\n");
  43              		.loc 1 45 0
  44 0024 9C009FE5 		ldr	r0, .L5+12
  45 0028 FEFFFFEB 		bl	printf
  46              	.LVL1:
  46:Farbe_sen.c   ****         return -1;
  47              		.loc 1 46 0
  48 002c 0000E0E3 		mvn	r0, #0
  49 0030 1F0000EA 		b	.L3
  50              	.L2:
  47:Farbe_sen.c   ****     }
  48:Farbe_sen.c   ****     
  49:Farbe_sen.c   ****     pColorSensor =(UART*)mmap(0, sizeof(UART),PROT_READ | PROT_WRITE, MAP_FILE | MAP_SHARED,file,0)
  51              		.loc 1 49 0
  52 0034 00008DE5 		str	r0, [sp]
  53 0038 0000A0E3 		mov	r0, #0
  54 003c 04008DE5 		str	r0, [sp, #4]
  55 0040 84109FE5 		ldr	r1, .L5+16
  56 0044 0320A0E3 		mov	r2, #3
  57 0048 0130A0E3 		mov	r3, #1
  58 004c FEFFFFEB 		bl	mmap
  59              	.LVL2:
  60 0050 78309FE5 		ldr	r3, .L5+20
  61 0054 000083E5 		str	r0, [r3]
  50:Farbe_sen.c   ****     
  51:Farbe_sen.c   ****     if (pColorSensor == MAP_FAILED)
  62              		.loc 1 51 0
  63 0058 010070E3 		cmn	r0, #1
  64 005c 0300001A 		bne	.L4
  52:Farbe_sen.c   ****     {
  53:Farbe_sen.c   ****         printf("Failed to map Color Sensor device\n");
  65              		.loc 1 53 0
  66 0060 6C009FE5 		ldr	r0, .L5+24
  67 0064 FEFFFFEB 		bl	printf
  68              	.LVL3:
  54:Farbe_sen.c   ****         return -1;
  69              		.loc 1 54 0
  70 0068 0000E0E3 		mvn	r0, #0
  71 006c 100000EA 		b	.L3
  72              	.L4:
  55:Farbe_sen.c   ****     }
  56:Farbe_sen.c   ****     DevCon.Mode[PORT]=RGB_RAW;      //DeviceConnection
  73              		.loc 1 56 0
  74 0070 60309FE5 		ldr	r3, .L5+28
  75 0074 001093E5 		ldr	r1, [r3]
  76 0078 5C209FE5 		ldr	r2, .L5+32
  77 007c 013082E0 		add	r3, r2, r1
  78 0080 0400A0E3 		mov	r0, #4
  79 0084 0800C3E5 		strb	r0, [r3, #8]
  57:Farbe_sen.c   ****     DevCon.Connection[PORT]=CONN_INPUT_UART;   //Universal Asynchronous Receiver/Transmitter
  80              		.loc 1 57 0
  81 0088 7A00A0E3 		mov	r0, #122
  82 008c 0100C2E7 		strb	r0, [r2, r1]
  58:Farbe_sen.c   ****     DevCon.Type[PORT]=COLOR_SENSOR_TYPE;
  83              		.loc 1 58 0
  84 0090 1D10A0E3 		mov	r1, #29
  85 0094 0410C3E5 		strb	r1, [r3, #4]
  59:Farbe_sen.c   ****     ioctl(file,UART_SET_CONN,&DevCon);
  86              		.loc 1 59 0
  87 0098 24309FE5 		ldr	r3, .L5+8
  88 009c 000093E5 		ldr	r0, [r3]
  89 00a0 38109FE5 		ldr	r1, .L5+36
  90 00a4 FEFFFFEB 		bl	ioctl
  91              	.LVL4:
  60:Farbe_sen.c   ****     printf("Device is ready \n\r");
  92              		.loc 1 60 0
  93 00a8 34009FE5 		ldr	r0, .L5+40
  94 00ac FEFFFFEB 		bl	printf
  95              	.LVL5:
  61:Farbe_sen.c   ****     return 0;
  96              		.loc 1 61 0
  97 00b0 0000A0E3 		mov	r0, #0
  98              	.L3:
  62:Farbe_sen.c   **** }
  99              		.loc 1 62 0
 100 00b4 0CD08DE2 		add	sp, sp, #12
 101              		@ sp needed
 102 00b8 04F09DE4 		ldr	pc, [sp], #4
 103              	.L6:
 104              		.align	2
 105              	.L5:
 106 00bc 00000000 		.word	.LC0
 107 00c0 02101000 		.word	1052674
 108 00c4 00000000 		.word	file
 109 00c8 10000000 		.word	.LC1
 110 00cc F8A60000 		.word	42744
 111 00d0 00000000 		.word	pColorSensor
 112 00d4 28000000 		.word	.LC2
 113 00d8 00000000 		.word	.LANCHOR0
 114 00dc 00000000 		.word	DevCon
 115 00e0 00750CC0 		.word	-1072925440
 116 00e4 4C000000 		.word	.LC3
 117              		.cfi_endproc
 118              	.LFE11:
 119              		.fnend
 121              		.align	2
 122              		.global	ColSen_close
 124              	ColSen_close:
 125              		.fnstart
 126              	.LFB13:
  63:Farbe_sen.c   **** #endif
  64:Farbe_sen.c   **** 
  65:Farbe_sen.c   **** int ColSen_getData()   //Center:zenteral Position
  66:Farbe_sen.c   **** {
  67:Farbe_sen.c   **** #ifdef __linux__
  68:Farbe_sen.c   ****     int MAX_Werte=0;
  69:Farbe_sen.c   ****     float rot,gruen,blau,blank;
  70:Farbe_sen.c   ****     int Color_color =0;
  71:Farbe_sen.c   ****     int Color_data_r=0;
  72:Farbe_sen.c   ****     int Color_data_g=0;
  73:Farbe_sen.c   ****     int Color_data_b=0;
  74:Farbe_sen.c   ****     int Color_data_blank=0;
  75:Farbe_sen.c   ****     usleep(10000);
  76:Farbe_sen.c   ****     sleep(1);
  77:Farbe_sen.c   ****     Color_data_r=(unsigned char)pColorSensor->Raw[PORT][0][0]+(unsigned char)(pColorSensor->Raw[POR
  78:Farbe_sen.c   ****     Color_data_g=(unsigned char)pColorSensor->Raw[PORT][0][2]+(unsigned char)(pColorSensor->Raw[POR
  79:Farbe_sen.c   ****     Color_data_b=(unsigned char)pColorSensor->Raw[PORT][0][4]+(unsigned char)(pColorSensor->Raw[POR
  80:Farbe_sen.c   ****     Color_data_blank=(unsigned int)pColorSensor->Raw[PORT][0][6]+(unsigned int)(pColorSensor->Raw[P
  81:Farbe_sen.c   ****     usleep(100000);
  82:Farbe_sen.c   ****     Color_color=Color_col(Color_data_r*1.0,Color_data_g*1.0,Color_data_b*1.0);
  83:Farbe_sen.c   ****     printf("color_data is (%5d, %5d, %5d, %5d)",Color_data_r,Color_data_g,Color_data_b,Color_data_b
  84:Farbe_sen.c   ****     //MAX_Werte=MAX_RGB(MAX_RGB(Color_data_r, Color_data_g),Color_data_b);
  85:Farbe_sen.c   ****     /*rot   =(Color_data_r*1.0)/MAX_Werte;
  86:Farbe_sen.c   ****     gruen =(Color_data_g*1.0)/MAX_Werte;
  87:Farbe_sen.c   ****     blau  =(Color_data_b*1.0)/MAX_Werte;
  88:Farbe_sen.c   ****     Color_color=Color_col(rot,gruen,blau);*/
  89:Farbe_sen.c   **** 
  90:Farbe_sen.c   **** #if 1
  91:Farbe_sen.c   ****     switch(Color_color){
  92:Farbe_sen.c   ****         case 0:
  93:Farbe_sen.c   ****             printf("\033[1;30m   %d\033[0m",Color_color);
  94:Farbe_sen.c   ****             break;
  95:Farbe_sen.c   ****             
  96:Farbe_sen.c   ****         case 1:
  97:Farbe_sen.c   ****             printf("\033[1;34m   %d\033[0m",Color_color);
  98:Farbe_sen.c   ****             break;
  99:Farbe_sen.c   ****             
 100:Farbe_sen.c   ****         case 2:
 101:Farbe_sen.c   ****             printf("\033[1;33m   %d\033[0m",Color_color);
 102:Farbe_sen.c   ****             break;
 103:Farbe_sen.c   ****             
 104:Farbe_sen.c   ****         case 3:
 105:Farbe_sen.c   ****             printf("\033[1;32m   %d\033[0m",Color_color);
 106:Farbe_sen.c   ****             break;
 107:Farbe_sen.c   ****             
 108:Farbe_sen.c   ****         case 4:
 109:Farbe_sen.c   ****             printf("\033[1;31m   %d\033[0m",Color_color);
 110:Farbe_sen.c   ****             break;
 111:Farbe_sen.c   ****             
 112:Farbe_sen.c   ****         case 5:
 113:Farbe_sen.c   ****             printf("\033[1;35m   %d\033[0m",Color_color);
 114:Farbe_sen.c   ****             break;
 115:Farbe_sen.c   ****                     
 116:Farbe_sen.c   ****         default:
 117:Farbe_sen.c   ****             printf(" x ");
 118:Farbe_sen.c   ****             break;
 119:Farbe_sen.c   ****     }
 120:Farbe_sen.c   **** #endif
 121:Farbe_sen.c   ****     printf("\n\r");
 122:Farbe_sen.c   **** //    sleep(1);
 123:Farbe_sen.c   ****     return Color_color;
 124:Farbe_sen.c   ****     // senden daten zu PC
 125:Farbe_sen.c   **** #endif
 126:Farbe_sen.c   ****     
 127:Farbe_sen.c   **** #ifndef __linux__
 128:Farbe_sen.c   ****     return 0;
 129:Farbe_sen.c   **** #endif
 130:Farbe_sen.c   **** }
 131:Farbe_sen.c   **** 
 132:Farbe_sen.c   **** 
 133:Farbe_sen.c   **** int ColSen_close()
 134:Farbe_sen.c   **** {
 127              		.loc 1 134 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131 00e8 08402DE9 		stmfd	sp!, {r3, lr}
 132              		.save {r3, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 3, -8
 135              		.cfi_offset 14, -4
 135:Farbe_sen.c   ****     printf("Close the Color Sensor");
 136              		.loc 1 135 0
 137 00ec 14009FE5 		ldr	r0, .L8
 138 00f0 FEFFFFEB 		bl	printf
 139              	.LVL6:
 136:Farbe_sen.c   **** #ifdef __linux__
 137:Farbe_sen.c   ****     close(file);
 140              		.loc 1 137 0
 141 00f4 10309FE5 		ldr	r3, .L8+4
 142 00f8 000093E5 		ldr	r0, [r3]
 143 00fc FEFFFFEB 		bl	close
 144              	.LVL7:
 138:Farbe_sen.c   **** #endif
 139:Farbe_sen.c   ****     return 0;
 140:Farbe_sen.c   **** }
 145              		.loc 1 140 0
 146 0100 0000A0E3 		mov	r0, #0
 147 0104 0880BDE8 		ldmfd	sp!, {r3, pc}
 148              	.L9:
 149              		.align	2
 150              	.L8:
 151 0108 60000000 		.word	.LC4
 152 010c 00000000 		.word	file
 153              		.cfi_endproc
 154              	.LFE13:
 155              		.fnend
 157              		.global	__aeabi_fcmpge
 158              		.global	__aeabi_f2d
 159              		.global	__aeabi_dmul
 160              		.global	__aeabi_dcmpgt
 161              		.global	__aeabi_dcmplt
 162              		.global	__aeabi_fcmpgt
 163              		.global	__aeabi_fcmple
 164              		.global	__aeabi_fmul
 165              		.global	__aeabi_fadd
 166              		.global	__aeabi_fcmplt
 167              		.global	__aeabi_ddiv
 168              		.align	2
 169              		.global	Color_col
 171              	Color_col:
 172              		.fnstart
 173              	.LFB14:
 141:Farbe_sen.c   **** 
 142:Farbe_sen.c   **** FARBE Color_col(float rot, float gruen,float blau)
 143:Farbe_sen.c   **** {
 174              		.loc 1 143 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 16
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              	.LVL8:
 179 0110 F0472DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 180              		.save {r4, r5, r6, r7, r8, r9, r10, lr}
 181              		.cfi_def_cfa_offset 32
 182              		.cfi_offset 4, -32
 183              		.cfi_offset 5, -28
 184              		.cfi_offset 6, -24
 185              		.cfi_offset 7, -20
 186              		.cfi_offset 8, -16
 187              		.cfi_offset 9, -12
 188              		.cfi_offset 10, -8
 189              		.cfi_offset 14, -4
 190              		.pad #16
 191 0114 10D04DE2 		sub	sp, sp, #16
 192              		.cfi_def_cfa_offset 48
 193 0118 00A0A0E1 		mov	r10, r0
 194 011c 0180A0E1 		mov	r8, r1
 195 0120 0290A0E1 		mov	r9, r2
 196              	.LVL9:
 144:Farbe_sen.c   ****     int Farbe=-1;
 145:Farbe_sen.c   ****     
 146:Farbe_sen.c   ****     if ((rot>=20)||(gruen>=20)||(blau>=20)){
 197              		.loc 1 146 0
 198 0124 24149FE5 		ldr	r1, .L69
 199              	.LVL10:
 200 0128 FEFFFFEB 		bl	__aeabi_fcmpge
 201              	.LVL11:
 202 012c 000050E3 		cmp	r0, #0
 203 0130 0900001A 		bne	.L11
 204              		.loc 1 146 0 is_stmt 0 discriminator 1
 205 0134 0800A0E1 		mov	r0, r8
 206 0138 10149FE5 		ldr	r1, .L69
 207 013c FEFFFFEB 		bl	__aeabi_fcmpge
 208              	.LVL12:
 209 0140 000050E3 		cmp	r0, #0
 210 0144 0400001A 		bne	.L11
 211 0148 0900A0E1 		mov	r0, r9
 212 014c FC139FE5 		ldr	r1, .L69
 213 0150 FEFFFFEB 		bl	__aeabi_fcmpge
 214              	.LVL13:
 215 0154 000050E3 		cmp	r0, #0
 216 0158 F700000A 		beq	.L67
 217              	.L11:
 147:Farbe_sen.c   ****         if ((rot>blau*1.35)&&(gruen>blau*1.35))
 218              		.loc 1 147 0 is_stmt 1
 219 015c 0A00A0E1 		mov	r0, r10
 220 0160 FEFFFFEB 		bl	__aeabi_f2d
 221              	.LVL14:
 222 0164 0040A0E1 		mov	r4, r0
 223 0168 0150A0E1 		mov	r5, r1
 224 016c 0900A0E1 		mov	r0, r9
 225 0170 FEFFFFEB 		bl	__aeabi_f2d
 226              	.LVL15:
 227 0174 F800CDE1 		strd	r0, [sp, #8]
 228 0178 D4239FE5 		ldr	r2, .L69+4
 229 017c D4339FE5 		ldr	r3, .L69+8
 230 0180 FEFFFFEB 		bl	__aeabi_dmul
 231              	.LVL16:
 232 0184 0060A0E1 		mov	r6, r0
 233 0188 0170A0E1 		mov	r7, r1
 234 018c 0400A0E1 		mov	r0, r4
 235 0190 0510A0E1 		mov	r1, r5
 236 0194 0620A0E1 		mov	r2, r6
 237 0198 0730A0E1 		mov	r3, r7
 238 019c FEFFFFEB 		bl	__aeabi_dcmpgt
 239              	.LVL17:
 240 01a0 000050E3 		cmp	r0, #0
 241 01a4 2A00000A 		beq	.L14
 242              		.loc 1 147 0 is_stmt 0 discriminator 1
 243 01a8 0800A0E1 		mov	r0, r8
 244 01ac FEFFFFEB 		bl	__aeabi_f2d
 245              	.LVL18:
 246 01b0 F000CDE1 		strd	r0, [sp]
 247 01b4 0600A0E1 		mov	r0, r6
 248 01b8 0710A0E1 		mov	r1, r7
 249 01bc D020CDE1 		ldrd	r2, [sp]
 250 01c0 FEFFFFEB 		bl	__aeabi_dcmplt
 251              	.LVL19:
 252 01c4 000050E3 		cmp	r0, #0
 253 01c8 2100000A 		beq	.L14
 148:Farbe_sen.c   ****         {
 149:Farbe_sen.c   ****             if (((rot>gruen)&&(rot<gruen*1.2))||((gruen>=rot)&&(gruen<rot*1.2))){     //original we
 254              		.loc 1 149 0 is_stmt 1
 255 01cc 0A00A0E1 		mov	r0, r10
 256 01d0 0810A0E1 		mov	r1, r8
 257 01d4 FEFFFFEB 		bl	__aeabi_fcmpgt
 258              	.LVL20:
 259 01d8 000050E3 		cmp	r0, #0
 260 01dc 0B00000A 		beq	.L17
 261              		.loc 1 149 0 is_stmt 0 discriminator 1
 262 01e0 D000CDE1 		ldrd	r0, [sp]
 263 01e4 70239FE5 		ldr	r2, .L69+12
 264 01e8 70339FE5 		ldr	r3, .L69+16
 265 01ec FEFFFFEB 		bl	__aeabi_dmul
 266              	.LVL21:
 267 01f0 0020A0E1 		mov	r2, r0
 268 01f4 0130A0E1 		mov	r3, r1
 269 01f8 0400A0E1 		mov	r0, r4
 270 01fc 0510A0E1 		mov	r1, r5
 271 0200 FEFFFFEB 		bl	__aeabi_dcmplt
 272              	.LVL22:
 273 0204 000050E3 		cmp	r0, #0
 150:Farbe_sen.c   ****             Farbe= WEISS;
 274              		.loc 1 150 0 is_stmt 1 discriminator 1
 275 0208 0000A013 		movne	r0, #0
 149:Farbe_sen.c   ****             Farbe= WEISS;
 276              		.loc 1 149 0 discriminator 1
 277 020c CD00001A 		bne	.L12
 278              	.L17:
 149:Farbe_sen.c   ****             Farbe= WEISS;
 279              		.loc 1 149 0 is_stmt 0 discriminator 2
 280 0210 0A00A0E1 		mov	r0, r10
 281 0214 0810A0E1 		mov	r1, r8
 282 0218 FEFFFFEB 		bl	__aeabi_fcmple
 283              	.LVL23:
 284 021c 000050E3 		cmp	r0, #0
 285 0220 0B00000A 		beq	.L14
 149:Farbe_sen.c   ****             Farbe= WEISS;
 286              		.loc 1 149 0 discriminator 1
 287 0224 0400A0E1 		mov	r0, r4
 288 0228 0510A0E1 		mov	r1, r5
 289 022c 28239FE5 		ldr	r2, .L69+12
 290 0230 28339FE5 		ldr	r3, .L69+16
 291 0234 FEFFFFEB 		bl	__aeabi_dmul
 292              	.LVL24:
 293 0238 0020A0E1 		mov	r2, r0
 294 023c 0130A0E1 		mov	r3, r1
 295 0240 D000CDE1 		ldrd	r0, [sp]
 296 0244 FEFFFFEB 		bl	__aeabi_dcmplt
 297              	.LVL25:
 298 0248 000050E3 		cmp	r0, #0
 299              		.loc 1 150 0 is_stmt 1 discriminator 1
 300 024c 0000A013 		movne	r0, #0
 149:Farbe_sen.c   ****             Farbe= WEISS;
 301              		.loc 1 149 0 discriminator 1
 302 0250 BC00001A 		bne	.L12
 303              	.L14:
 151:Farbe_sen.c   ****             goto fertig;
 152:Farbe_sen.c   ****                 
 153:Farbe_sen.c   ****             }
 154:Farbe_sen.c   ****         }
 155:Farbe_sen.c   ****         if ((rot>2.5*gruen)&&(rot>4*blau)&&(gruen>2*blau)&&(blau>10)){  //original grune>2*blue   1
 304              		.loc 1 155 0
 305 0254 0800A0E1 		mov	r0, r8
 306 0258 FEFFFFEB 		bl	__aeabi_f2d
 307              	.LVL26:
 308 025c F000CDE1 		strd	r0, [sp]
 309 0260 0020A0E3 		mov	r2, #0
 310 0264 F8329FE5 		ldr	r3, .L69+20
 311 0268 FEFFFFEB 		bl	__aeabi_dmul
 312              	.LVL27:
 313 026c 0020A0E1 		mov	r2, r0
 314 0270 0130A0E1 		mov	r3, r1
 315 0274 0400A0E1 		mov	r0, r4
 316 0278 0510A0E1 		mov	r1, r5
 317 027c FEFFFFEB 		bl	__aeabi_dcmpgt
 318              	.LVL28:
 319 0280 000050E3 		cmp	r0, #0
 320 0284 1500000A 		beq	.L20
 321              		.loc 1 155 0 is_stmt 0 discriminator 1
 322 0288 0900A0E1 		mov	r0, r9
 323 028c D4129FE5 		ldr	r1, .L69+24
 324 0290 FEFFFFEB 		bl	__aeabi_fmul
 325              	.LVL29:
 326 0294 0010A0E1 		mov	r1, r0
 327 0298 0A00A0E1 		mov	r0, r10
 328 029c FEFFFFEB 		bl	__aeabi_fcmpgt
 329              	.LVL30:
 330 02a0 000050E3 		cmp	r0, #0
 331 02a4 0D00000A 		beq	.L20
 332 02a8 0900A0E1 		mov	r0, r9
 333 02ac 0910A0E1 		mov	r1, r9
 334 02b0 FEFFFFEB 		bl	__aeabi_fadd
 335              	.LVL31:
 336 02b4 0010A0E1 		mov	r1, r0
 337 02b8 0800A0E1 		mov	r0, r8
 338 02bc FEFFFFEB 		bl	__aeabi_fcmpgt
 339              	.LVL32:
 340 02c0 000050E3 		cmp	r0, #0
 341 02c4 0500000A 		beq	.L20
 342 02c8 0900A0E1 		mov	r0, r9
 343 02cc 98129FE5 		ldr	r1, .L69+28
 344 02d0 FEFFFFEB 		bl	__aeabi_fcmpgt
 345              	.LVL33:
 346 02d4 000050E3 		cmp	r0, #0
 156:Farbe_sen.c   ****             Farbe=  ORANGE;
 347              		.loc 1 156 0 is_stmt 1 discriminator 1
 348 02d8 0500A013 		movne	r0, #5
 155:Farbe_sen.c   ****             Farbe=  ORANGE;
 349              		.loc 1 155 0 discriminator 1
 350 02dc 9900001A 		bne	.L12
 351              	.L20:
 157:Farbe_sen.c   ****             goto fertig;
 158:Farbe_sen.c   ****         }
 159:Farbe_sen.c   ****         if ((rot>2*gruen)&&(rot>3*blau)) {
 352              		.loc 1 159 0
 353 02e0 0800A0E1 		mov	r0, r8
 354 02e4 0810A0E1 		mov	r1, r8
 355 02e8 FEFFFFEB 		bl	__aeabi_fadd
 356              	.LVL34:
 357 02ec 0060A0E1 		mov	r6, r0
 358 02f0 0A00A0E1 		mov	r0, r10
 359 02f4 0610A0E1 		mov	r1, r6
 360 02f8 FEFFFFEB 		bl	__aeabi_fcmpgt
 361              	.LVL35:
 362 02fc 000050E3 		cmp	r0, #0
 363 0300 0800000A 		beq	.L24
 364              		.loc 1 159 0 is_stmt 0 discriminator 1
 365 0304 0900A0E1 		mov	r0, r9
 366 0308 60129FE5 		ldr	r1, .L69+32
 367 030c FEFFFFEB 		bl	__aeabi_fmul
 368              	.LVL36:
 369 0310 0010A0E1 		mov	r1, r0
 370 0314 0A00A0E1 		mov	r0, r10
 371 0318 FEFFFFEB 		bl	__aeabi_fcmpgt
 372              	.LVL37:
 373 031c 000050E3 		cmp	r0, #0
 160:Farbe_sen.c   ****             Farbe=  ROT;
 374              		.loc 1 160 0 is_stmt 1 discriminator 1
 375 0320 0400A013 		movne	r0, #4
 159:Farbe_sen.c   ****             Farbe=  ROT;
 376              		.loc 1 159 0 discriminator 1
 377 0324 8700001A 		bne	.L12
 378              	.L24:
 161:Farbe_sen.c   ****             goto fertig;
 162:Farbe_sen.c   ****             }
 163:Farbe_sen.c   ****         if ((gruen>=2*rot)&&(gruen>=2*blau)) {
 379              		.loc 1 163 0
 380 0328 0A00A0E1 		mov	r0, r10
 381 032c 0A10A0E1 		mov	r1, r10
 382 0330 FEFFFFEB 		bl	__aeabi_fadd
 383              	.LVL38:
 384 0334 0010A0E1 		mov	r1, r0
 385 0338 0800A0E1 		mov	r0, r8
 386 033c FEFFFFEB 		bl	__aeabi_fcmpge
 387              	.LVL39:
 388 0340 000050E3 		cmp	r0, #0
 389 0344 0800000A 		beq	.L26
 390              		.loc 1 163 0 is_stmt 0 discriminator 1
 391 0348 0900A0E1 		mov	r0, r9
 392 034c 0910A0E1 		mov	r1, r9
 393 0350 FEFFFFEB 		bl	__aeabi_fadd
 394              	.LVL40:
 395 0354 0010A0E1 		mov	r1, r0
 396 0358 0800A0E1 		mov	r0, r8
 397 035c FEFFFFEB 		bl	__aeabi_fcmpge
 398              	.LVL41:
 399 0360 000050E3 		cmp	r0, #0
 164:Farbe_sen.c   ****             Farbe=  GRUEN;
 400              		.loc 1 164 0 is_stmt 1 discriminator 1
 401 0364 0300A013 		movne	r0, #3
 163:Farbe_sen.c   ****             Farbe=  GRUEN;
 402              		.loc 1 163 0 discriminator 1
 403 0368 7600001A 		bne	.L12
 404              	.L26:
 165:Farbe_sen.c   ****             goto fertig;
 166:Farbe_sen.c   ****             }
 167:Farbe_sen.c   ****         if (((blau>gruen)&&(blau<2*gruen)&&(blau>1.5*rot)&&(blau<2.5*rot))||((gruen>=blau)&&(gruen<
 405              		.loc 1 167 0
 406 036c 0800A0E1 		mov	r0, r8
 407 0370 0910A0E1 		mov	r1, r9
 408 0374 FEFFFFEB 		bl	__aeabi_fcmplt
 409              	.LVL42:
 410 0378 000050E3 		cmp	r0, #0
 411 037c 1B00000A 		beq	.L28
 412              		.loc 1 167 0 is_stmt 0 discriminator 1
 413 0380 0900A0E1 		mov	r0, r9
 414 0384 0610A0E1 		mov	r1, r6
 415 0388 FEFFFFEB 		bl	__aeabi_fcmplt
 416              	.LVL43:
 417 038c 000050E3 		cmp	r0, #0
 418 0390 1600000A 		beq	.L28
 419 0394 0400A0E1 		mov	r0, r4
 420 0398 0510A0E1 		mov	r1, r5
 421 039c 0020A0E3 		mov	r2, #0
 422 03a0 CC319FE5 		ldr	r3, .L69+36
 423 03a4 FEFFFFEB 		bl	__aeabi_dmul
 424              	.LVL44:
 425 03a8 0020A0E1 		mov	r2, r0
 426 03ac 0130A0E1 		mov	r3, r1
 427 03b0 D800CDE1 		ldrd	r0, [sp, #8]
 428 03b4 FEFFFFEB 		bl	__aeabi_dcmpgt
 429              	.LVL45:
 430 03b8 000050E3 		cmp	r0, #0
 431 03bc 0B00000A 		beq	.L28
 432 03c0 0400A0E1 		mov	r0, r4
 433 03c4 0510A0E1 		mov	r1, r5
 434 03c8 0020A0E3 		mov	r2, #0
 435 03cc 90319FE5 		ldr	r3, .L69+20
 436 03d0 FEFFFFEB 		bl	__aeabi_dmul
 437              	.LVL46:
 438 03d4 0020A0E1 		mov	r2, r0
 439 03d8 0130A0E1 		mov	r3, r1
 440 03dc D800CDE1 		ldrd	r0, [sp, #8]
 441 03e0 FEFFFFEB 		bl	__aeabi_dcmplt
 442              	.LVL47:
 443 03e4 000050E3 		cmp	r0, #0
 168:Farbe_sen.c   ****             Farbe=  BLAU;
 444              		.loc 1 168 0 is_stmt 1 discriminator 1
 445 03e8 0100A013 		movne	r0, #1
 167:Farbe_sen.c   ****             Farbe=  BLAU;
 446              		.loc 1 167 0 discriminator 1
 447 03ec 5500001A 		bne	.L12
 448              	.L28:
 167:Farbe_sen.c   ****             Farbe=  BLAU;
 449              		.loc 1 167 0 is_stmt 0 discriminator 2
 450 03f0 0800A0E1 		mov	r0, r8
 451 03f4 0910A0E1 		mov	r1, r9
 452 03f8 FEFFFFEB 		bl	__aeabi_fcmpge
 453              	.LVL48:
 454 03fc 000050E3 		cmp	r0, #0
 455 0400 1E00000A 		beq	.L32
 167:Farbe_sen.c   ****             Farbe=  BLAU;
 456              		.loc 1 167 0 discriminator 1
 457 0404 0900A0E1 		mov	r0, r9
 458 0408 0910A0E1 		mov	r1, r9
 459 040c FEFFFFEB 		bl	__aeabi_fadd
 460              	.LVL49:
 461 0410 0010A0E1 		mov	r1, r0
 462 0414 0800A0E1 		mov	r0, r8
 463 0418 FEFFFFEB 		bl	__aeabi_fcmplt
 464              	.LVL50:
 465 041c 000050E3 		cmp	r0, #0
 466 0420 1600000A 		beq	.L32
 467 0424 0400A0E1 		mov	r0, r4
 468 0428 0510A0E1 		mov	r1, r5
 469 042c 0020A0E3 		mov	r2, #0
 470 0430 3C319FE5 		ldr	r3, .L69+36
 471 0434 FEFFFFEB 		bl	__aeabi_dmul
 472              	.LVL51:
 473 0438 0020A0E1 		mov	r2, r0
 474 043c 0130A0E1 		mov	r3, r1
 475 0440 D000CDE1 		ldrd	r0, [sp]
 476 0444 FEFFFFEB 		bl	__aeabi_dcmpgt
 477              	.LVL52:
 478 0448 000050E3 		cmp	r0, #0
 479 044c 0B00000A 		beq	.L32
 480 0450 0400A0E1 		mov	r0, r4
 481 0454 0510A0E1 		mov	r1, r5
 482 0458 0020A0E3 		mov	r2, #0
 483 045c 00319FE5 		ldr	r3, .L69+20
 484 0460 FEFFFFEB 		bl	__aeabi_dmul
 485              	.LVL53:
 486 0464 0020A0E1 		mov	r2, r0
 487 0468 0130A0E1 		mov	r3, r1
 488 046c D000CDE1 		ldrd	r0, [sp]
 489 0470 FEFFFFEB 		bl	__aeabi_dcmplt
 490              	.LVL54:
 491 0474 000050E3 		cmp	r0, #0
 492              		.loc 1 168 0 is_stmt 1 discriminator 1
 493 0478 0100A013 		movne	r0, #1
 167:Farbe_sen.c   ****             Farbe=  BLAU;
 494              		.loc 1 167 0 discriminator 1
 495 047c 3100001A 		bne	.L12
 496              	.L32:
 169:Farbe_sen.c   ****             goto fertig;
 170:Farbe_sen.c   ****         }
 171:Farbe_sen.c   ****         if(((rot>gruen/0.75)&&(rot<gruen/0.55))||((rot>blau/0.25)&&(rot<blau/0.15))){
 497              		.loc 1 171 0
 498 0480 D000CDE1 		ldrd	r0, [sp]
 499 0484 0020A0E3 		mov	r2, #0
 500 0488 E8309FE5 		ldr	r3, .L69+40
 501 048c FEFFFFEB 		bl	__aeabi_ddiv
 502              	.LVL55:
 503 0490 0020A0E1 		mov	r2, r0
 504 0494 0130A0E1 		mov	r3, r1
 505 0498 0400A0E1 		mov	r0, r4
 506 049c 0510A0E1 		mov	r1, r5
 507 04a0 FEFFFFEB 		bl	__aeabi_dcmpgt
 508              	.LVL56:
 509 04a4 000050E3 		cmp	r0, #0
 510 04a8 0B00000A 		beq	.L36
 511              		.loc 1 171 0 is_stmt 0 discriminator 1
 512 04ac D000CDE1 		ldrd	r0, [sp]
 513 04b0 9C209FE5 		ldr	r2, .L69+4
 514 04b4 C0309FE5 		ldr	r3, .L69+44
 515 04b8 FEFFFFEB 		bl	__aeabi_ddiv
 516              	.LVL57:
 517 04bc 0020A0E1 		mov	r2, r0
 518 04c0 0130A0E1 		mov	r3, r1
 519 04c4 0400A0E1 		mov	r0, r4
 520 04c8 0510A0E1 		mov	r1, r5
 521 04cc FEFFFFEB 		bl	__aeabi_dcmplt
 522              	.LVL58:
 523 04d0 000050E3 		cmp	r0, #0
 172:Farbe_sen.c   ****             Farbe=  GELB;
 524              		.loc 1 172 0 is_stmt 1 discriminator 1
 525 04d4 0200A013 		movne	r0, #2
 171:Farbe_sen.c   ****             Farbe=  GELB;
 526              		.loc 1 171 0 discriminator 1
 527 04d8 1A00001A 		bne	.L12
 528              	.L36:
 171:Farbe_sen.c   ****             Farbe=  GELB;
 529              		.loc 1 171 0 is_stmt 0 discriminator 2
 530 04dc D800CDE1 		ldrd	r0, [sp, #8]
 531 04e0 0020A0E3 		mov	r2, #0
 532 04e4 94309FE5 		ldr	r3, .L69+48
 533 04e8 FEFFFFEB 		bl	__aeabi_dmul
 534              	.LVL59:
 535 04ec 0020A0E1 		mov	r2, r0
 536 04f0 0130A0E1 		mov	r3, r1
 537 04f4 0400A0E1 		mov	r0, r4
 538 04f8 0510A0E1 		mov	r1, r5
 539 04fc FEFFFFEB 		bl	__aeabi_dcmpgt
 540              	.LVL60:
 541 0500 000050E3 		cmp	r0, #0
 542 0504 0E00000A 		beq	.L68
 171:Farbe_sen.c   ****             Farbe=  GELB;
 543              		.loc 1 171 0 discriminator 1
 544 0508 D800CDE1 		ldrd	r0, [sp, #8]
 545 050c 48209FE5 		ldr	r2, .L69+12
 546 0510 6C309FE5 		ldr	r3, .L69+52
 547 0514 FEFFFFEB 		bl	__aeabi_ddiv
 548              	.LVL61:
 549 0518 0020A0E1 		mov	r2, r0
 550 051c 0130A0E1 		mov	r3, r1
 551 0520 0400A0E1 		mov	r0, r4
 552 0524 0510A0E1 		mov	r1, r5
 553 0528 FEFFFFEB 		bl	__aeabi_dcmplt
 554              	.LVL62:
 555 052c 000050E3 		cmp	r0, #0
 144:Farbe_sen.c   ****     
 556              		.loc 1 144 0 is_stmt 1 discriminator 1
 557 0530 0200A013 		movne	r0, #2
 558 0534 0000E003 		mvneq	r0, #0
 559 0538 020000EA 		b	.L12
 560              	.L67:
 144:Farbe_sen.c   ****     
 561              		.loc 1 144 0 is_stmt 0
 562 053c 0000E0E3 		mvn	r0, #0
 563 0540 000000EA 		b	.L12
 564              	.L68:
 565 0544 0000E0E3 		mvn	r0, #0
 566              	.L12:
 567              	.LVL63:
 173:Farbe_sen.c   ****             goto fertig;
 174:Farbe_sen.c   ****         }
 175:Farbe_sen.c   ****     }
 176:Farbe_sen.c   ****     fertig:return Farbe;
 177:Farbe_sen.c   **** }
 568              		.loc 1 177 0 is_stmt 1
 569 0548 10D08DE2 		add	sp, sp, #16
 570              		@ sp needed
 571 054c F087BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 572              	.LVL64:
 573              	.L70:
 574              		.align	2
 575              	.L69:
 576 0550 0000A041 		.word	1101004800
 577 0554 9A999999 		.word	-1717986918
 578 0558 9999F53F 		.word	1073060249
 579 055c 33333333 		.word	858993459
 580 0560 3333F33F 		.word	1072902963
 581 0564 00000440 		.word	1074003968
 582 0568 00008040 		.word	1082130432
 583 056c 00002041 		.word	1092616192
 584 0570 00004040 		.word	1077936128
 585 0574 0000F83F 		.word	1073217536
 586 0578 0000E83F 		.word	1072168960
 587 057c 9999E13F 		.word	1071749529
 588 0580 00001040 		.word	1074790400
 589 0584 3333C33F 		.word	1069757235
 590              		.cfi_endproc
 591              	.LFE14:
 592              		.fnend
 594              		.global	__aeabi_i2d
 595              		.global	__aeabi_d2f
 596              		.align	2
 597              		.global	ColSen_getData
 599              	ColSen_getData:
 600              		.fnstart
 601              	.LFB12:
  66:Farbe_sen.c   **** #ifdef __linux__
 602              		.loc 1 66 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606 0588 F0432DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, lr}
 607              		.save {r4, r5, r6, r7, r8, r9, lr}
 608              		.cfi_def_cfa_offset 28
 609              		.cfi_offset 4, -28
 610              		.cfi_offset 5, -24
 611              		.cfi_offset 6, -20
 612              		.cfi_offset 7, -16
 613              		.cfi_offset 8, -12
 614              		.cfi_offset 9, -8
 615              		.cfi_offset 14, -4
 616              		.pad #12
 617 058c 0CD04DE2 		sub	sp, sp, #12
 618              		.cfi_def_cfa_offset 40
 619              	.LVL65:
  75:Farbe_sen.c   ****     sleep(1);
 620              		.loc 1 75 0
 621 0590 4C019FE5 		ldr	r0, .L81
 622 0594 FEFFFFEB 		bl	usleep
 623              	.LVL66:
  76:Farbe_sen.c   ****     Color_data_r=(unsigned char)pColorSensor->Raw[PORT][0][0]+(unsigned char)(pColorSensor->Raw[POR
 624              		.loc 1 76 0
 625 0598 0100A0E3 		mov	r0, #1
 626 059c FEFFFFEB 		bl	sleep
 627              	.LVL67:
  77:Farbe_sen.c   ****     Color_data_g=(unsigned char)pColorSensor->Raw[PORT][0][2]+(unsigned char)(pColorSensor->Raw[POR
 628              		.loc 1 77 0
 629 05a0 40319FE5 		ldr	r3, .L81+4
 630 05a4 003093E5 		ldr	r3, [r3]
 631 05a8 3C219FE5 		ldr	r2, .L81+8
 632 05ac 002092E5 		ldr	r2, [r2]
 633 05b0 96CDA0E3 		mov	ip, #9600
 634 05b4 923C2CE0 		mla	ip, r2, ip, r3
 635 05b8 30319FE5 		ldr	r3, .L81+12
 636 05bc 0370DCE7 		ldrb	r7, [ip, r3]	@ zero_extendqisi2
 637              	.LVL68:
  78:Farbe_sen.c   ****     Color_data_b=(unsigned char)pColorSensor->Raw[PORT][0][4]+(unsigned char)(pColorSensor->Raw[POR
 638              		.loc 1 78 0
 639 05c0 023083E2 		add	r3, r3, #2
 640 05c4 0360DCE7 		ldrb	r6, [ip, r3]	@ zero_extendqisi2
 641              	.LVL69:
  79:Farbe_sen.c   ****     Color_data_blank=(unsigned int)pColorSensor->Raw[PORT][0][6]+(unsigned int)(pColorSensor->Raw[P
 642              		.loc 1 79 0
 643 05c8 023083E2 		add	r3, r3, #2
 644 05cc 0350DCE7 		ldrb	r5, [ip, r3]	@ zero_extendqisi2
 645              	.LVL70:
  80:Farbe_sen.c   ****     usleep(100000);
 646              		.loc 1 80 0
 647 05d0 033083E2 		add	r3, r3, #3
 648 05d4 D3809CE1 		ldrsb	r8, [ip, r3]
 649 05d8 013043E2 		sub	r3, r3, #1
 650 05dc D3309CE1 		ldrsb	r3, [ip, r3]
 651 05e0 088483E0 		add	r8, r3, r8, asl #8
 652              	.LVL71:
  81:Farbe_sen.c   ****     Color_color=Color_col(Color_data_r*1.0,Color_data_g*1.0,Color_data_b*1.0);
 653              		.loc 1 81 0
 654 05e4 08019FE5 		ldr	r0, .L81+16
 655 05e8 FEFFFFEB 		bl	usleep
 656              	.LVL72:
  82:Farbe_sen.c   ****     printf("color_data is (%5d, %5d, %5d, %5d)",Color_data_r,Color_data_g,Color_data_b,Color_data_b
 657              		.loc 1 82 0
 658 05ec 0700A0E1 		mov	r0, r7
 659 05f0 FEFFFFEB 		bl	__aeabi_i2d
 660              	.LVL73:
 661 05f4 FEFFFFEB 		bl	__aeabi_d2f
 662              	.LVL74:
 663 05f8 0090A0E1 		mov	r9, r0
 664 05fc 0600A0E1 		mov	r0, r6
 665 0600 FEFFFFEB 		bl	__aeabi_i2d
 666              	.LVL75:
 667 0604 FEFFFFEB 		bl	__aeabi_d2f
 668              	.LVL76:
 669 0608 0040A0E1 		mov	r4, r0
 670 060c 0500A0E1 		mov	r0, r5
 671 0610 FEFFFFEB 		bl	__aeabi_i2d
 672              	.LVL77:
 673 0614 FEFFFFEB 		bl	__aeabi_d2f
 674              	.LVL78:
 675 0618 0020A0E1 		mov	r2, r0
 676 061c 0900A0E1 		mov	r0, r9
 677 0620 0410A0E1 		mov	r1, r4
 678 0624 FEFFFFEB 		bl	Color_col
 679              	.LVL79:
 680 0628 0040A0E1 		mov	r4, r0
 681              	.LVL80:
  83:Farbe_sen.c   ****     //MAX_Werte=MAX_RGB(MAX_RGB(Color_data_r, Color_data_g),Color_data_b);
 682              		.loc 1 83 0
 683 062c 00808DE5 		str	r8, [sp]
 684 0630 C0009FE5 		ldr	r0, .L81+20
 685              	.LVL81:
 686 0634 0710A0E1 		mov	r1, r7
 687 0638 0620A0E1 		mov	r2, r6
 688 063c 0530A0E1 		mov	r3, r5
 689 0640 FEFFFFEB 		bl	printf
 690              	.LVL82:
  91:Farbe_sen.c   ****         case 0:
 691              		.loc 1 91 0
 692 0644 050054E3 		cmp	r4, #5
 693 0648 04F19F97 		ldrls	pc, [pc, r4, asl #2]
 694 064c 1D0000EA 		b	.L72
 695              	.L74:
 696 0650 68060000 		.word	.L73
 697 0654 78060000 		.word	.L75
 698 0658 88060000 		.word	.L76
 699 065c 98060000 		.word	.L77
 700 0660 A8060000 		.word	.L78
 701 0664 B8060000 		.word	.L79
 702              	.L73:
  93:Farbe_sen.c   ****             break;
 703              		.loc 1 93 0
 704 0668 8C009FE5 		ldr	r0, .L81+24
 705 066c 0010A0E3 		mov	r1, #0
 706 0670 FEFFFFEB 		bl	printf
 707              	.LVL83:
  94:Farbe_sen.c   ****             
 708              		.loc 1 94 0
 709 0674 150000EA 		b	.L80
 710              	.L75:
  97:Farbe_sen.c   ****             break;
 711              		.loc 1 97 0
 712 0678 80009FE5 		ldr	r0, .L81+28
 713 067c 0110A0E3 		mov	r1, #1
 714 0680 FEFFFFEB 		bl	printf
 715              	.LVL84:
  98:Farbe_sen.c   ****             
 716              		.loc 1 98 0
 717 0684 110000EA 		b	.L80
 718              	.L76:
 101:Farbe_sen.c   ****             break;
 719              		.loc 1 101 0
 720 0688 74009FE5 		ldr	r0, .L81+32
 721 068c 0210A0E3 		mov	r1, #2
 722 0690 FEFFFFEB 		bl	printf
 723              	.LVL85:
 102:Farbe_sen.c   ****             
 724              		.loc 1 102 0
 725 0694 0D0000EA 		b	.L80
 726              	.L77:
 105:Farbe_sen.c   ****             break;
 727              		.loc 1 105 0
 728 0698 68009FE5 		ldr	r0, .L81+36
 729 069c 0310A0E3 		mov	r1, #3
 730 06a0 FEFFFFEB 		bl	printf
 731              	.LVL86:
 106:Farbe_sen.c   ****             
 732              		.loc 1 106 0
 733 06a4 090000EA 		b	.L80
 734              	.L78:
 109:Farbe_sen.c   ****             break;
 735              		.loc 1 109 0
 736 06a8 5C009FE5 		ldr	r0, .L81+40
 737 06ac 0410A0E3 		mov	r1, #4
 738 06b0 FEFFFFEB 		bl	printf
 739              	.LVL87:
 110:Farbe_sen.c   ****             
 740              		.loc 1 110 0
 741 06b4 050000EA 		b	.L80
 742              	.L79:
 113:Farbe_sen.c   ****             break;
 743              		.loc 1 113 0
 744 06b8 50009FE5 		ldr	r0, .L81+44
 745 06bc 0510A0E3 		mov	r1, #5
 746 06c0 FEFFFFEB 		bl	printf
 747              	.LVL88:
 114:Farbe_sen.c   ****                     
 748              		.loc 1 114 0
 749 06c4 010000EA 		b	.L80
 750              	.L72:
 117:Farbe_sen.c   ****             break;
 751              		.loc 1 117 0
 752 06c8 44009FE5 		ldr	r0, .L81+48
 753 06cc FEFFFFEB 		bl	printf
 754              	.LVL89:
 755              	.L80:
 121:Farbe_sen.c   **** //    sleep(1);
 756              		.loc 1 121 0
 757 06d0 40009FE5 		ldr	r0, .L81+52
 758 06d4 FEFFFFEB 		bl	printf
 759              	.LVL90:
 130:Farbe_sen.c   **** 
 760              		.loc 1 130 0
 761 06d8 0400A0E1 		mov	r0, r4
 762 06dc 0CD08DE2 		add	sp, sp, #12
 763              		@ sp needed
 764 06e0 F083BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, pc}
 765              	.LVL91:
 766              	.L82:
 767              		.align	2
 768              	.L81:
 769 06e4 10270000 		.word	10000
 770 06e8 00000000 		.word	pColorSensor
 771 06ec 00000000 		.word	.LANCHOR0
 772 06f0 60100000 		.word	4192
 773 06f4 A0860100 		.word	100000
 774 06f8 78000000 		.word	.LC5
 775 06fc 9C000000 		.word	.LC6
 776 0700 B0000000 		.word	.LC7
 777 0704 C4000000 		.word	.LC8
 778 0708 D8000000 		.word	.LC9
 779 070c EC000000 		.word	.LC10
 780 0710 00010000 		.word	.LC11
 781 0714 14010000 		.word	.LC12
 782 0718 18010000 		.word	.LC13
 783              		.cfi_endproc
 784              	.LFE12:
 785              		.fnend
 787              		.comm	DevCon,12,4
 788              		.comm	pColorSensor,4,4
 789              		.comm	file,4,4
 790              		.global	MAX_SAMPLES
 791              		.global	COLOR_SENSOR_TYPE
 792              		.global	RGB_RAW
 793              		.global	PORT
 794              		.section	.rodata
 795              		.align	2
 798              	MAX_SAMPLES:
 799 0000 0A000000 		.word	10
 802              	COLOR_SENSOR_TYPE:
 803 0004 1D       		.byte	29
 806              	RGB_RAW:
 807 0005 04       		.byte	4
 808 0006 0000     		.section	.rodata.str1.4,"aMS",%progbits,1
 809              		.align	2
 810              	.LC0:
 811 0000 2F646576 		.ascii	"/dev/lms_uart\000"
 811      2F6C6D73 
 811      5F756172 
 811      7400
 812 000e 0000     		.space	2
 813              	.LC1:
 814 0010 4661696C 		.ascii	"Failed to open device\012\000"
 814      65642074 
 814      6F206F70 
 814      656E2064 
 814      65766963 
 815 0027 00       		.space	1
 816              	.LC2:
 817 0028 4661696C 		.ascii	"Failed to map Color Sensor device\012\000"
 817      65642074 
 817      6F206D61 
 817      7020436F 
 817      6C6F7220 
 818 004b 00       		.space	1
 819              	.LC3:
 820 004c 44657669 		.ascii	"Device is ready \012\015\000"
 820      63652069 
 820      73207265 
 820      61647920 
 820      0A0D00
 821 005f 00       		.space	1
 822              	.LC4:
 823 0060 436C6F73 		.ascii	"Close the Color Sensor\000"
 823      65207468 
 823      6520436F 
 823      6C6F7220 
 823      53656E73 
 824 0077 00       		.space	1
 825              	.LC5:
 826 0078 636F6C6F 		.ascii	"color_data is (%5d, %5d, %5d, %5d)\000"
 826      725F6461 
 826      74612069 
 826      73202825 
 826      35642C20 
 827 009b 00       		.space	1
 828              	.LC6:
 829 009c 1B5B313B 		.ascii	"\033[1;30m   %d\033[0m\000"
 829      33306D20 
 829      20202564 
 829      1B5B306D 
 829      00
 830 00ad 000000   		.space	3
 831              	.LC7:
 832 00b0 1B5B313B 		.ascii	"\033[1;34m   %d\033[0m\000"
 832      33346D20 
 832      20202564 
 832      1B5B306D 
 832      00
 833 00c1 000000   		.space	3
 834              	.LC8:
 835 00c4 1B5B313B 		.ascii	"\033[1;33m   %d\033[0m\000"
 835      33336D20 
 835      20202564 
 835      1B5B306D 
 835      00
 836 00d5 000000   		.space	3
 837              	.LC9:
 838 00d8 1B5B313B 		.ascii	"\033[1;32m   %d\033[0m\000"
 838      33326D20 
 838      20202564 
 838      1B5B306D 
 838      00
 839 00e9 000000   		.space	3
 840              	.LC10:
 841 00ec 1B5B313B 		.ascii	"\033[1;31m   %d\033[0m\000"
 841      33316D20 
 841      20202564 
 841      1B5B306D 
 841      00
 842 00fd 000000   		.space	3
 843              	.LC11:
 844 0100 1B5B313B 		.ascii	"\033[1;35m   %d\033[0m\000"
 844      33356D20 
 844      20202564 
 844      1B5B306D 
 844      00
 845 0111 000000   		.space	3
 846              	.LC12:
 847 0114 20782000 		.ascii	" x \000"
 848              	.LC13:
 849 0118 0A0D00   		.ascii	"\012\015\000"
 850 011b 00       		.bss
 851              		.align	2
 852              	.LANCHOR0 = . + 0
 855              	PORT:
 856 0000 00000000 		.space	4
 857              		.text
 858              	.Letext0:
 859              		.file 2 "/usr/local/carlson-minot/crosscompilers/lib/gcc/arm-none-linux-gnueabi/4.8.3/include/stdd
 860              		.file 3 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 861              		.file 4 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 862              		.file 5 "Farbe_sen.h"
 863              		.file 6 "lmstypes.h"
 864              		.file 7 "bytecodes.h"
 865              		.file 8 "lms2012.h"
 866              		.file 9 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 867              		.file 10 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
 868              		.file 11 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
 869              		.file 12 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
 870              		.file 13 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Farbe_sen.c
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:16     .text:0000000000000000 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:19     .text:0000000000000000 ColSen_init
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:106    .text:00000000000000bc $d
                            *COM*:0000000000000004 file
                            *COM*:0000000000000004 pColorSensor
                            *COM*:000000000000000c DevCon
                       .ARM.exidx:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:121    .text:00000000000000e8 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:124    .text:00000000000000e8 ColSen_close
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:151    .text:0000000000000108 $d
                       .ARM.extab:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:168    .text:0000000000000110 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:171    .text:0000000000000110 Color_col
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:576    .text:0000000000000550 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:596    .text:0000000000000588 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:599    .text:0000000000000588 ColSen_getData
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:696    .text:0000000000000650 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:704    .text:0000000000000668 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:769    .text:00000000000006e4 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:798    .rodata:0000000000000000 MAX_SAMPLES
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:802    .rodata:0000000000000004 COLOR_SENSOR_TYPE
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:806    .rodata:0000000000000005 RGB_RAW
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:855    .bss:0000000000000000 PORT
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:795    .rodata:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:809    .rodata.str1.4:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc5q4sks.s:851    .bss:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
open
printf
mmap
ioctl
__aeabi_unwind_cpp_pr0
close
__aeabi_unwind_cpp_pr1
__aeabi_fcmpge
__aeabi_f2d
__aeabi_dmul
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_fcmpgt
__aeabi_fcmple
__aeabi_fmul
__aeabi_fadd
__aeabi_fcmplt
__aeabi_ddiv
__aeabi_i2d
__aeabi_d2f
usleep
sleep
