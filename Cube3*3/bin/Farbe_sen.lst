   1              		.arch armv5te
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 2
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"Farbe_sen.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.align	2
  17              		.global	ColSen_init
  19              	ColSen_init:
  20              		.fnstart
  21              	.LFB11:
  22              		.file 1 "Farbe_sen.c"
   1:Farbe_sen.c   **** //
   2:Farbe_sen.c   **** //  Farbe_sen.c
   3:Farbe_sen.c   **** //  Cube3*3
   4:Farbe_sen.c   **** //
   5:Farbe_sen.c   **** //  Created by 杨春霞 on 12.11.15.
   6:Farbe_sen.c   **** //  Copyright © 2015 Chunxia Yang. All rights reserved.
   7:Farbe_sen.c   **** //
   8:Farbe_sen.c   **** 
   9:Farbe_sen.c   **** #include "Farbe_sen.h"
  10:Farbe_sen.c   **** #include <fcntl.h>
  11:Farbe_sen.c   **** #include <stdio.h>
  12:Farbe_sen.c   **** #include <sys/ioctl.h>
  13:Farbe_sen.c   **** #include <sys/mman.h>
  14:Farbe_sen.c   **** #ifdef __linux__
  15:Farbe_sen.c   **** #include "lms2012.h"
  16:Farbe_sen.c   **** #include <unistd.h>
  17:Farbe_sen.c   **** #endif
  18:Farbe_sen.c   **** #include "main.h"
  19:Farbe_sen.c   **** typedef enum
  20:Farbe_sen.c   **** {
  21:Farbe_sen.c   ****     WEISS=0,
  22:Farbe_sen.c   ****     BLAU=1,
  23:Farbe_sen.c   ****     GELB=2,
  24:Farbe_sen.c   ****     GRUEN=3,
  25:Farbe_sen.c   ****     ROT=4,
  26:Farbe_sen.c   ****     ORANGE=5
  27:Farbe_sen.c   **** }Farbe;
  28:Farbe_sen.c   **** 
  29:Farbe_sen.c   **** #ifdef __linux__
  30:Farbe_sen.c   ****  int  PORT=0x0;
  31:Farbe_sen.c   **** const DATA8 RGB_RAW=4;     //color mode
  32:Farbe_sen.c   **** const DATA8 COLOR_SENSOR_TYPE=29;
  33:Farbe_sen.c   **** const int MAX_SAMPLES =10;
  34:Farbe_sen.c   **** int file;
  35:Farbe_sen.c   **** UART *pColorSensor;
  36:Farbe_sen.c   **** DEVCON DevCon;   //Configuration parameters
  37:Farbe_sen.c   **** #endif
  38:Farbe_sen.c   **** 
  39:Farbe_sen.c   **** #ifdef __linux__
  40:Farbe_sen.c   **** int ColSen_init()
  41:Farbe_sen.c   **** {
  23              		.loc 1 41 0
  24              		.cfi_startproc
  25              		@ args = 0, pretend = 0, frame = 0
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27 0000 04E02DE5 		str	lr, [sp, #-4]!
  28              		.save {lr}
  29              		.cfi_def_cfa_offset 4
  30              		.cfi_offset 14, -4
  31              		.pad #12
  32 0004 0CD04DE2 		sub	sp, sp, #12
  33              		.cfi_def_cfa_offset 16
  42:Farbe_sen.c   **** 
  43:Farbe_sen.c   ****     if((file = open(UART_DEVICE_NAME, O_RDWR | O_SYNC)) == -1)
  34              		.loc 1 43 0
  35 0008 AC009FE5 		ldr	r0, .L5
  36 000c AC109FE5 		ldr	r1, .L5+4
  37 0010 FEFFFFEB 		bl	open
  38              	.LVL0:
  39 0014 A8309FE5 		ldr	r3, .L5+8
  40 0018 000083E5 		str	r0, [r3]
  41 001c 010070E3 		cmn	r0, #1
  42 0020 0300001A 		bne	.L2
  44:Farbe_sen.c   ****     {
  45:Farbe_sen.c   ****         printf("Failed to open device\n");
  43              		.loc 1 45 0
  44 0024 9C009FE5 		ldr	r0, .L5+12
  45 0028 FEFFFFEB 		bl	printf
  46              	.LVL1:
  46:Farbe_sen.c   ****         return -1;
  47              		.loc 1 46 0
  48 002c 0000E0E3 		mvn	r0, #0
  49 0030 1F0000EA 		b	.L3
  50              	.L2:
  47:Farbe_sen.c   ****     }
  48:Farbe_sen.c   ****     
  49:Farbe_sen.c   ****     pColorSensor =(UART*)mmap(0, sizeof(UART),PROT_READ | PROT_WRITE, MAP_FILE | MAP_SHARED,file,0)
  51              		.loc 1 49 0
  52 0034 00008DE5 		str	r0, [sp]
  53 0038 0000A0E3 		mov	r0, #0
  54 003c 04008DE5 		str	r0, [sp, #4]
  55 0040 84109FE5 		ldr	r1, .L5+16
  56 0044 0320A0E3 		mov	r2, #3
  57 0048 0130A0E3 		mov	r3, #1
  58 004c FEFFFFEB 		bl	mmap
  59              	.LVL2:
  60 0050 78309FE5 		ldr	r3, .L5+20
  61 0054 000083E5 		str	r0, [r3]
  50:Farbe_sen.c   ****     
  51:Farbe_sen.c   ****     if (pColorSensor == MAP_FAILED)
  62              		.loc 1 51 0
  63 0058 010070E3 		cmn	r0, #1
  64 005c 0300001A 		bne	.L4
  52:Farbe_sen.c   ****     {
  53:Farbe_sen.c   ****         printf("Failed to map Color Sensor device\n");
  65              		.loc 1 53 0
  66 0060 6C009FE5 		ldr	r0, .L5+24
  67 0064 FEFFFFEB 		bl	printf
  68              	.LVL3:
  54:Farbe_sen.c   ****         return -1;
  69              		.loc 1 54 0
  70 0068 0000E0E3 		mvn	r0, #0
  71 006c 100000EA 		b	.L3
  72              	.L4:
  55:Farbe_sen.c   ****     }
  56:Farbe_sen.c   ****     DevCon.Mode[PORT]=RGB_RAW;      //DeviceConnection
  73              		.loc 1 56 0
  74 0070 60309FE5 		ldr	r3, .L5+28
  75 0074 001093E5 		ldr	r1, [r3]
  76 0078 5C209FE5 		ldr	r2, .L5+32
  77 007c 013082E0 		add	r3, r2, r1
  78 0080 0400A0E3 		mov	r0, #4
  79 0084 0800C3E5 		strb	r0, [r3, #8]
  57:Farbe_sen.c   ****     DevCon.Connection[PORT]=CONN_INPUT_UART;   //Universal Asynchronous Receiver/Transmitter
  80              		.loc 1 57 0
  81 0088 7A00A0E3 		mov	r0, #122
  82 008c 0100C2E7 		strb	r0, [r2, r1]
  58:Farbe_sen.c   ****     DevCon.Type[PORT]=COLOR_SENSOR_TYPE;
  83              		.loc 1 58 0
  84 0090 1D10A0E3 		mov	r1, #29
  85 0094 0410C3E5 		strb	r1, [r3, #4]
  59:Farbe_sen.c   ****     ioctl(file,UART_SET_CONN,&DevCon);
  86              		.loc 1 59 0
  87 0098 24309FE5 		ldr	r3, .L5+8
  88 009c 000093E5 		ldr	r0, [r3]
  89 00a0 38109FE5 		ldr	r1, .L5+36
  90 00a4 FEFFFFEB 		bl	ioctl
  91              	.LVL4:
  60:Farbe_sen.c   ****     printf("Device is ready \n\r");
  92              		.loc 1 60 0
  93 00a8 34009FE5 		ldr	r0, .L5+40
  94 00ac FEFFFFEB 		bl	printf
  95              	.LVL5:
  61:Farbe_sen.c   ****     return 0;
  96              		.loc 1 61 0
  97 00b0 0000A0E3 		mov	r0, #0
  98              	.L3:
  62:Farbe_sen.c   **** }
  99              		.loc 1 62 0
 100 00b4 0CD08DE2 		add	sp, sp, #12
 101              		@ sp needed
 102 00b8 04F09DE4 		ldr	pc, [sp], #4
 103              	.L6:
 104              		.align	2
 105              	.L5:
 106 00bc 00000000 		.word	.LC0
 107 00c0 02101000 		.word	1052674
 108 00c4 00000000 		.word	file
 109 00c8 10000000 		.word	.LC1
 110 00cc F8A60000 		.word	42744
 111 00d0 00000000 		.word	pColorSensor
 112 00d4 28000000 		.word	.LC2
 113 00d8 00000000 		.word	.LANCHOR0
 114 00dc 00000000 		.word	DevCon
 115 00e0 00750CC0 		.word	-1072925440
 116 00e4 4C000000 		.word	.LC3
 117              		.cfi_endproc
 118              	.LFE11:
 119              		.fnend
 121              		.align	2
 122              		.global	ColSen_close
 124              	ColSen_close:
 125              		.fnstart
 126              	.LFB13:
  63:Farbe_sen.c   **** #endif
  64:Farbe_sen.c   **** 
  65:Farbe_sen.c   **** int ColSen_getData()   //Center:zenteral Position
  66:Farbe_sen.c   **** {
  67:Farbe_sen.c   **** #ifdef __linux__
  68:Farbe_sen.c   ****     int Color_color =0;
  69:Farbe_sen.c   ****     int Color_data_r=0;
  70:Farbe_sen.c   ****     int Color_data_g=0;
  71:Farbe_sen.c   ****     int Color_data_b=0;
  72:Farbe_sen.c   ****     int Color_data_blank=0;
  73:Farbe_sen.c   ****     usleep(10000);
  74:Farbe_sen.c   ****     sleep(1);
  75:Farbe_sen.c   ****     Color_data_r=(unsigned char)pColorSensor->Raw[PORT][0][0]+(unsigned char)(pColorSensor->Raw[POR
  76:Farbe_sen.c   ****     Color_data_g=(unsigned char)pColorSensor->Raw[PORT][0][2]+(unsigned char)(pColorSensor->Raw[POR
  77:Farbe_sen.c   ****     Color_data_b=(unsigned char)pColorSensor->Raw[PORT][0][4]+(unsigned char)(pColorSensor->Raw[POR
  78:Farbe_sen.c   ****     Color_data_blank=(unsigned int)pColorSensor->Raw[PORT][0][6]+(unsigned int)(pColorSensor->Raw[P
  79:Farbe_sen.c   ****     usleep(100000);
  80:Farbe_sen.c   ****     Color_color=Color_col(Color_data_r*1.0,Color_data_g*1.0,Color_data_b*1.0);
  81:Farbe_sen.c   ****     printf("color_data is (%5d, %5d, %5d, %5d)",Color_data_r,Color_data_g,Color_data_b,Color_data_b
  82:Farbe_sen.c   **** 
  83:Farbe_sen.c   **** #if 1
  84:Farbe_sen.c   ****     switch(Color_color){
  85:Farbe_sen.c   ****         case 0:
  86:Farbe_sen.c   ****             printf("\033[1;30m   %d\033[0m",Color_color);
  87:Farbe_sen.c   ****             break;
  88:Farbe_sen.c   ****             
  89:Farbe_sen.c   ****         case 1:
  90:Farbe_sen.c   ****             printf("\033[1;34m   %d\033[0m",Color_color);
  91:Farbe_sen.c   ****             break;
  92:Farbe_sen.c   ****             
  93:Farbe_sen.c   ****         case 2:
  94:Farbe_sen.c   ****             printf("\033[1;33m   %d\033[0m",Color_color);
  95:Farbe_sen.c   ****             break;
  96:Farbe_sen.c   ****             
  97:Farbe_sen.c   ****         case 3:
  98:Farbe_sen.c   ****             printf("\033[1;32m   %d\033[0m",Color_color);
  99:Farbe_sen.c   ****             break;
 100:Farbe_sen.c   ****             
 101:Farbe_sen.c   ****         case 4:
 102:Farbe_sen.c   ****             printf("\033[1;31m   %d\033[0m",Color_color);
 103:Farbe_sen.c   ****             break;
 104:Farbe_sen.c   ****             
 105:Farbe_sen.c   ****         case 5:
 106:Farbe_sen.c   ****             printf("\033[1;35m   %d\033[0m",Color_color);
 107:Farbe_sen.c   ****             break;
 108:Farbe_sen.c   ****                     
 109:Farbe_sen.c   ****         default:
 110:Farbe_sen.c   ****             printf(" x ");
 111:Farbe_sen.c   ****             break;
 112:Farbe_sen.c   ****     }
 113:Farbe_sen.c   **** #endif
 114:Farbe_sen.c   ****     printf("\n\r");
 115:Farbe_sen.c   ****     return Color_color;
 116:Farbe_sen.c   **** #endif
 117:Farbe_sen.c   ****     
 118:Farbe_sen.c   **** #ifndef __linux__
 119:Farbe_sen.c   ****     return 0;
 120:Farbe_sen.c   **** #endif
 121:Farbe_sen.c   **** }
 122:Farbe_sen.c   **** 
 123:Farbe_sen.c   **** 
 124:Farbe_sen.c   **** int ColSen_close()
 125:Farbe_sen.c   **** {
 127              		.loc 1 125 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131 00e8 08402DE9 		stmfd	sp!, {r3, lr}
 132              		.save {r3, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 3, -8
 135              		.cfi_offset 14, -4
 126:Farbe_sen.c   ****     printf("Close the Color Sensor");
 136              		.loc 1 126 0
 137 00ec 14009FE5 		ldr	r0, .L8
 138 00f0 FEFFFFEB 		bl	printf
 139              	.LVL6:
 127:Farbe_sen.c   **** #ifdef __linux__
 128:Farbe_sen.c   ****     close(file);
 140              		.loc 1 128 0
 141 00f4 10309FE5 		ldr	r3, .L8+4
 142 00f8 000093E5 		ldr	r0, [r3]
 143 00fc FEFFFFEB 		bl	close
 144              	.LVL7:
 129:Farbe_sen.c   **** #endif
 130:Farbe_sen.c   ****     return 0;
 131:Farbe_sen.c   **** }
 145              		.loc 1 131 0
 146 0100 0000A0E3 		mov	r0, #0
 147 0104 0880BDE8 		ldmfd	sp!, {r3, pc}
 148              	.L9:
 149              		.align	2
 150              	.L8:
 151 0108 60000000 		.word	.LC4
 152 010c 00000000 		.word	file
 153              		.cfi_endproc
 154              	.LFE13:
 155              		.fnend
 157              		.global	__aeabi_fcmpge
 158              		.global	__aeabi_f2d
 159              		.global	__aeabi_dmul
 160              		.global	__aeabi_dcmpgt
 161              		.global	__aeabi_dcmplt
 162              		.global	__aeabi_fcmpgt
 163              		.global	__aeabi_fcmple
 164              		.global	__aeabi_fmul
 165              		.global	__aeabi_fadd
 166              		.global	__aeabi_fcmplt
 167              		.global	__aeabi_ddiv
 168              		.align	2
 169              		.global	Color_col
 171              	Color_col:
 172              		.fnstart
 173              	.LFB14:
 132:Farbe_sen.c   **** 
 133:Farbe_sen.c   **** FARBE Color_col(float rot, float gruen,float blau)
 134:Farbe_sen.c   **** {
 174              		.loc 1 134 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 16
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              	.LVL8:
 179 0110 F0472DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 180              		.save {r4, r5, r6, r7, r8, r9, r10, lr}
 181              		.cfi_def_cfa_offset 32
 182              		.cfi_offset 4, -32
 183              		.cfi_offset 5, -28
 184              		.cfi_offset 6, -24
 185              		.cfi_offset 7, -20
 186              		.cfi_offset 8, -16
 187              		.cfi_offset 9, -12
 188              		.cfi_offset 10, -8
 189              		.cfi_offset 14, -4
 190              		.pad #16
 191 0114 10D04DE2 		sub	sp, sp, #16
 192              		.cfi_def_cfa_offset 48
 193 0118 0090A0E1 		mov	r9, r0
 194 011c 0180A0E1 		mov	r8, r1
 195 0120 02A0A0E1 		mov	r10, r2
 196              	.LVL9:
 135:Farbe_sen.c   ****     int Farbe=-1;
 136:Farbe_sen.c   ****     
 137:Farbe_sen.c   ****     if ((rot>=20)||(gruen>=20)||(blau>=20)){
 197              		.loc 1 137 0
 198 0124 2C149FE5 		ldr	r1, .L69
 199              	.LVL10:
 200 0128 FEFFFFEB 		bl	__aeabi_fcmpge
 201              	.LVL11:
 202 012c 000050E3 		cmp	r0, #0
 203 0130 0900001A 		bne	.L11
 204              		.loc 1 137 0 is_stmt 0 discriminator 1
 205 0134 0800A0E1 		mov	r0, r8
 206 0138 18149FE5 		ldr	r1, .L69
 207 013c FEFFFFEB 		bl	__aeabi_fcmpge
 208              	.LVL12:
 209 0140 000050E3 		cmp	r0, #0
 210 0144 0400001A 		bne	.L11
 211 0148 0A00A0E1 		mov	r0, r10
 212 014c 04149FE5 		ldr	r1, .L69
 213 0150 FEFFFFEB 		bl	__aeabi_fcmpge
 214              	.LVL13:
 215 0154 000050E3 		cmp	r0, #0
 216 0158 F900000A 		beq	.L67
 217              	.L11:
 138:Farbe_sen.c   ****         if ((rot>blau*1.35)&&(gruen>blau*1.35))
 218              		.loc 1 138 0 is_stmt 1
 219 015c 0900A0E1 		mov	r0, r9
 220 0160 FEFFFFEB 		bl	__aeabi_f2d
 221              	.LVL14:
 222 0164 0040A0E1 		mov	r4, r0
 223 0168 0150A0E1 		mov	r5, r1
 224 016c 0A00A0E1 		mov	r0, r10
 225 0170 FEFFFFEB 		bl	__aeabi_f2d
 226              	.LVL15:
 227 0174 F800CDE1 		strd	r0, [sp, #8]
 228 0178 DC239FE5 		ldr	r2, .L69+4
 229 017c DC339FE5 		ldr	r3, .L69+8
 230 0180 FEFFFFEB 		bl	__aeabi_dmul
 231              	.LVL16:
 232 0184 0060A0E1 		mov	r6, r0
 233 0188 0170A0E1 		mov	r7, r1
 234 018c 0400A0E1 		mov	r0, r4
 235 0190 0510A0E1 		mov	r1, r5
 236 0194 0620A0E1 		mov	r2, r6
 237 0198 0730A0E1 		mov	r3, r7
 238 019c FEFFFFEB 		bl	__aeabi_dcmpgt
 239              	.LVL17:
 240 01a0 000050E3 		cmp	r0, #0
 241 01a4 2A00000A 		beq	.L14
 242              		.loc 1 138 0 is_stmt 0 discriminator 1
 243 01a8 0800A0E1 		mov	r0, r8
 244 01ac FEFFFFEB 		bl	__aeabi_f2d
 245              	.LVL18:
 246 01b0 F000CDE1 		strd	r0, [sp]
 247 01b4 0600A0E1 		mov	r0, r6
 248 01b8 0710A0E1 		mov	r1, r7
 249 01bc D020CDE1 		ldrd	r2, [sp]
 250 01c0 FEFFFFEB 		bl	__aeabi_dcmplt
 251              	.LVL19:
 252 01c4 000050E3 		cmp	r0, #0
 253 01c8 2100000A 		beq	.L14
 139:Farbe_sen.c   ****         {
 140:Farbe_sen.c   ****             if (((rot>gruen)&&(rot<gruen*1.1))||((gruen>=rot)&&(gruen<rot*1.1))){     //original we
 254              		.loc 1 140 0 is_stmt 1
 255 01cc 0900A0E1 		mov	r0, r9
 256 01d0 0810A0E1 		mov	r1, r8
 257 01d4 FEFFFFEB 		bl	__aeabi_fcmpgt
 258              	.LVL20:
 259 01d8 000050E3 		cmp	r0, #0
 260 01dc 0B00000A 		beq	.L17
 261              		.loc 1 140 0 is_stmt 0 discriminator 1
 262 01e0 D000CDE1 		ldrd	r0, [sp]
 263 01e4 70239FE5 		ldr	r2, .L69+4
 264 01e8 74339FE5 		ldr	r3, .L69+12
 265 01ec FEFFFFEB 		bl	__aeabi_dmul
 266              	.LVL21:
 267 01f0 0020A0E1 		mov	r2, r0
 268 01f4 0130A0E1 		mov	r3, r1
 269 01f8 0400A0E1 		mov	r0, r4
 270 01fc 0510A0E1 		mov	r1, r5
 271 0200 FEFFFFEB 		bl	__aeabi_dcmplt
 272              	.LVL22:
 273 0204 000050E3 		cmp	r0, #0
 141:Farbe_sen.c   ****             Farbe= WEISS;
 274              		.loc 1 141 0 is_stmt 1 discriminator 1
 275 0208 0000A013 		movne	r0, #0
 140:Farbe_sen.c   ****             Farbe= WEISS;
 276              		.loc 1 140 0 discriminator 1
 277 020c CF00001A 		bne	.L12
 278              	.L17:
 140:Farbe_sen.c   ****             Farbe= WEISS;
 279              		.loc 1 140 0 is_stmt 0 discriminator 2
 280 0210 0900A0E1 		mov	r0, r9
 281 0214 0810A0E1 		mov	r1, r8
 282 0218 FEFFFFEB 		bl	__aeabi_fcmple
 283              	.LVL23:
 284 021c 000050E3 		cmp	r0, #0
 285 0220 0B00000A 		beq	.L14
 140:Farbe_sen.c   ****             Farbe= WEISS;
 286              		.loc 1 140 0 discriminator 1
 287 0224 0400A0E1 		mov	r0, r4
 288 0228 0510A0E1 		mov	r1, r5
 289 022c 28239FE5 		ldr	r2, .L69+4
 290 0230 2C339FE5 		ldr	r3, .L69+12
 291 0234 FEFFFFEB 		bl	__aeabi_dmul
 292              	.LVL24:
 293 0238 0020A0E1 		mov	r2, r0
 294 023c 0130A0E1 		mov	r3, r1
 295 0240 D000CDE1 		ldrd	r0, [sp]
 296 0244 FEFFFFEB 		bl	__aeabi_dcmplt
 297              	.LVL25:
 298 0248 000050E3 		cmp	r0, #0
 299              		.loc 1 141 0 is_stmt 1 discriminator 1
 300 024c 0000A013 		movne	r0, #0
 140:Farbe_sen.c   ****             Farbe= WEISS;
 301              		.loc 1 140 0 discriminator 1
 302 0250 BE00001A 		bne	.L12
 303              	.L14:
 142:Farbe_sen.c   ****             goto fertig;
 143:Farbe_sen.c   ****                 
 144:Farbe_sen.c   ****             }
 145:Farbe_sen.c   ****         }
 146:Farbe_sen.c   ****         if ((rot>2.5*gruen)&&(rot>4*blau)&&(gruen>2.1*blau)&&(blau>=10)){  //original grune>2.1*blu
 304              		.loc 1 146 0
 305 0254 0800A0E1 		mov	r0, r8
 306 0258 FEFFFFEB 		bl	__aeabi_f2d
 307              	.LVL26:
 308 025c F000CDE1 		strd	r0, [sp]
 309 0260 0020A0E3 		mov	r2, #0
 310 0264 FC329FE5 		ldr	r3, .L69+16
 311 0268 FEFFFFEB 		bl	__aeabi_dmul
 312              	.LVL27:
 313 026c 0020A0E1 		mov	r2, r0
 314 0270 0130A0E1 		mov	r3, r1
 315 0274 0400A0E1 		mov	r0, r4
 316 0278 0510A0E1 		mov	r1, r5
 317 027c FEFFFFEB 		bl	__aeabi_dcmpgt
 318              	.LVL28:
 319 0280 000050E3 		cmp	r0, #0
 320 0284 1700000A 		beq	.L20
 321              		.loc 1 146 0 is_stmt 0 discriminator 1
 322 0288 0A00A0E1 		mov	r0, r10
 323 028c D8129FE5 		ldr	r1, .L69+20
 324 0290 FEFFFFEB 		bl	__aeabi_fmul
 325              	.LVL29:
 326 0294 0010A0E1 		mov	r1, r0
 327 0298 0900A0E1 		mov	r0, r9
 328 029c FEFFFFEB 		bl	__aeabi_fcmpgt
 329              	.LVL30:
 330 02a0 000050E3 		cmp	r0, #0
 331 02a4 0F00000A 		beq	.L20
 332 02a8 D800CDE1 		ldrd	r0, [sp, #8]
 333 02ac BC229FE5 		ldr	r2, .L69+24
 334 02b0 BC329FE5 		ldr	r3, .L69+28
 335 02b4 FEFFFFEB 		bl	__aeabi_dmul
 336              	.LVL31:
 337 02b8 0020A0E1 		mov	r2, r0
 338 02bc 0130A0E1 		mov	r3, r1
 339 02c0 D000CDE1 		ldrd	r0, [sp]
 340 02c4 FEFFFFEB 		bl	__aeabi_dcmpgt
 341              	.LVL32:
 342 02c8 000050E3 		cmp	r0, #0
 343 02cc 0500000A 		beq	.L20
 344 02d0 0A00A0E1 		mov	r0, r10
 345 02d4 9C129FE5 		ldr	r1, .L69+32
 346 02d8 FEFFFFEB 		bl	__aeabi_fcmpge
 347              	.LVL33:
 348 02dc 000050E3 		cmp	r0, #0
 147:Farbe_sen.c   ****             Farbe=  ORANGE;
 349              		.loc 1 147 0 is_stmt 1 discriminator 1
 350 02e0 0500A013 		movne	r0, #5
 146:Farbe_sen.c   ****             Farbe=  ORANGE;
 351              		.loc 1 146 0 discriminator 1
 352 02e4 9900001A 		bne	.L12
 353              	.L20:
 148:Farbe_sen.c   ****             goto fertig;
 149:Farbe_sen.c   ****         }
 150:Farbe_sen.c   ****         if ((rot>2*gruen)&&(rot>3*blau)) {
 354              		.loc 1 150 0
 355 02e8 0800A0E1 		mov	r0, r8
 356 02ec 0810A0E1 		mov	r1, r8
 357 02f0 FEFFFFEB 		bl	__aeabi_fadd
 358              	.LVL34:
 359 02f4 0060A0E1 		mov	r6, r0
 360 02f8 0900A0E1 		mov	r0, r9
 361 02fc 0610A0E1 		mov	r1, r6
 362 0300 FEFFFFEB 		bl	__aeabi_fcmpgt
 363              	.LVL35:
 364 0304 000050E3 		cmp	r0, #0
 365 0308 0800000A 		beq	.L24
 366              		.loc 1 150 0 is_stmt 0 discriminator 1
 367 030c 0A00A0E1 		mov	r0, r10
 368 0310 64129FE5 		ldr	r1, .L69+36
 369 0314 FEFFFFEB 		bl	__aeabi_fmul
 370              	.LVL36:
 371 0318 0010A0E1 		mov	r1, r0
 372 031c 0900A0E1 		mov	r0, r9
 373 0320 FEFFFFEB 		bl	__aeabi_fcmpgt
 374              	.LVL37:
 375 0324 000050E3 		cmp	r0, #0
 151:Farbe_sen.c   ****             Farbe=  ROT;
 376              		.loc 1 151 0 is_stmt 1 discriminator 1
 377 0328 0400A013 		movne	r0, #4
 150:Farbe_sen.c   ****             Farbe=  ROT;
 378              		.loc 1 150 0 discriminator 1
 379 032c 8700001A 		bne	.L12
 380              	.L24:
 152:Farbe_sen.c   ****             goto fertig;
 153:Farbe_sen.c   ****             }
 154:Farbe_sen.c   ****         if ((gruen>=2*rot)&&(gruen>=2*blau)) {
 381              		.loc 1 154 0
 382 0330 0900A0E1 		mov	r0, r9
 383 0334 0910A0E1 		mov	r1, r9
 384 0338 FEFFFFEB 		bl	__aeabi_fadd
 385              	.LVL38:
 386 033c 0010A0E1 		mov	r1, r0
 387 0340 0800A0E1 		mov	r0, r8
 388 0344 FEFFFFEB 		bl	__aeabi_fcmpge
 389              	.LVL39:
 390 0348 000050E3 		cmp	r0, #0
 391 034c 0800000A 		beq	.L26
 392              		.loc 1 154 0 is_stmt 0 discriminator 1
 393 0350 0A00A0E1 		mov	r0, r10
 394 0354 0A10A0E1 		mov	r1, r10
 395 0358 FEFFFFEB 		bl	__aeabi_fadd
 396              	.LVL40:
 397 035c 0010A0E1 		mov	r1, r0
 398 0360 0800A0E1 		mov	r0, r8
 399 0364 FEFFFFEB 		bl	__aeabi_fcmpge
 400              	.LVL41:
 401 0368 000050E3 		cmp	r0, #0
 155:Farbe_sen.c   ****             Farbe=  GRUEN;
 402              		.loc 1 155 0 is_stmt 1 discriminator 1
 403 036c 0300A013 		movne	r0, #3
 154:Farbe_sen.c   ****             Farbe=  GRUEN;
 404              		.loc 1 154 0 discriminator 1
 405 0370 7600001A 		bne	.L12
 406              	.L26:
 156:Farbe_sen.c   ****             goto fertig;
 157:Farbe_sen.c   ****             }
 158:Farbe_sen.c   ****         if (((blau>gruen)&&(blau<2*gruen)&&(blau>1.5*rot)&&(blau<2.5*rot))||((gruen>=blau)&&(gruen<
 407              		.loc 1 158 0
 408 0374 0800A0E1 		mov	r0, r8
 409 0378 0A10A0E1 		mov	r1, r10
 410 037c FEFFFFEB 		bl	__aeabi_fcmplt
 411              	.LVL42:
 412 0380 000050E3 		cmp	r0, #0
 413 0384 1B00000A 		beq	.L28
 414              		.loc 1 158 0 is_stmt 0 discriminator 1
 415 0388 0A00A0E1 		mov	r0, r10
 416 038c 0610A0E1 		mov	r1, r6
 417 0390 FEFFFFEB 		bl	__aeabi_fcmplt
 418              	.LVL43:
 419 0394 000050E3 		cmp	r0, #0
 420 0398 1600000A 		beq	.L28
 421 039c 0400A0E1 		mov	r0, r4
 422 03a0 0510A0E1 		mov	r1, r5
 423 03a4 0020A0E3 		mov	r2, #0
 424 03a8 D0319FE5 		ldr	r3, .L69+40
 425 03ac FEFFFFEB 		bl	__aeabi_dmul
 426              	.LVL44:
 427 03b0 0020A0E1 		mov	r2, r0
 428 03b4 0130A0E1 		mov	r3, r1
 429 03b8 D800CDE1 		ldrd	r0, [sp, #8]
 430 03bc FEFFFFEB 		bl	__aeabi_dcmpgt
 431              	.LVL45:
 432 03c0 000050E3 		cmp	r0, #0
 433 03c4 0B00000A 		beq	.L28
 434 03c8 0400A0E1 		mov	r0, r4
 435 03cc 0510A0E1 		mov	r1, r5
 436 03d0 0020A0E3 		mov	r2, #0
 437 03d4 8C319FE5 		ldr	r3, .L69+16
 438 03d8 FEFFFFEB 		bl	__aeabi_dmul
 439              	.LVL46:
 440 03dc 0020A0E1 		mov	r2, r0
 441 03e0 0130A0E1 		mov	r3, r1
 442 03e4 D800CDE1 		ldrd	r0, [sp, #8]
 443 03e8 FEFFFFEB 		bl	__aeabi_dcmplt
 444              	.LVL47:
 445 03ec 000050E3 		cmp	r0, #0
 159:Farbe_sen.c   ****             Farbe=  BLAU;
 446              		.loc 1 159 0 is_stmt 1 discriminator 1
 447 03f0 0100A013 		movne	r0, #1
 158:Farbe_sen.c   ****             Farbe=  BLAU;
 448              		.loc 1 158 0 discriminator 1
 449 03f4 5500001A 		bne	.L12
 450              	.L28:
 158:Farbe_sen.c   ****             Farbe=  BLAU;
 451              		.loc 1 158 0 is_stmt 0 discriminator 2
 452 03f8 0800A0E1 		mov	r0, r8
 453 03fc 0A10A0E1 		mov	r1, r10
 454 0400 FEFFFFEB 		bl	__aeabi_fcmpge
 455              	.LVL48:
 456 0404 000050E3 		cmp	r0, #0
 457 0408 1E00000A 		beq	.L32
 158:Farbe_sen.c   ****             Farbe=  BLAU;
 458              		.loc 1 158 0 discriminator 1
 459 040c 0A00A0E1 		mov	r0, r10
 460 0410 0A10A0E1 		mov	r1, r10
 461 0414 FEFFFFEB 		bl	__aeabi_fadd
 462              	.LVL49:
 463 0418 0010A0E1 		mov	r1, r0
 464 041c 0800A0E1 		mov	r0, r8
 465 0420 FEFFFFEB 		bl	__aeabi_fcmplt
 466              	.LVL50:
 467 0424 000050E3 		cmp	r0, #0
 468 0428 1600000A 		beq	.L32
 469 042c 0400A0E1 		mov	r0, r4
 470 0430 0510A0E1 		mov	r1, r5
 471 0434 0020A0E3 		mov	r2, #0
 472 0438 40319FE5 		ldr	r3, .L69+40
 473 043c FEFFFFEB 		bl	__aeabi_dmul
 474              	.LVL51:
 475 0440 0020A0E1 		mov	r2, r0
 476 0444 0130A0E1 		mov	r3, r1
 477 0448 D000CDE1 		ldrd	r0, [sp]
 478 044c FEFFFFEB 		bl	__aeabi_dcmpgt
 479              	.LVL52:
 480 0450 000050E3 		cmp	r0, #0
 481 0454 0B00000A 		beq	.L32
 482 0458 0400A0E1 		mov	r0, r4
 483 045c 0510A0E1 		mov	r1, r5
 484 0460 0020A0E3 		mov	r2, #0
 485 0464 FC309FE5 		ldr	r3, .L69+16
 486 0468 FEFFFFEB 		bl	__aeabi_dmul
 487              	.LVL53:
 488 046c 0020A0E1 		mov	r2, r0
 489 0470 0130A0E1 		mov	r3, r1
 490 0474 D000CDE1 		ldrd	r0, [sp]
 491 0478 FEFFFFEB 		bl	__aeabi_dcmplt
 492              	.LVL54:
 493 047c 000050E3 		cmp	r0, #0
 494              		.loc 1 159 0 is_stmt 1 discriminator 1
 495 0480 0100A013 		movne	r0, #1
 158:Farbe_sen.c   ****             Farbe=  BLAU;
 496              		.loc 1 158 0 discriminator 1
 497 0484 3100001A 		bne	.L12
 498              	.L32:
 160:Farbe_sen.c   ****             goto fertig;
 161:Farbe_sen.c   ****         }
 162:Farbe_sen.c   ****         if(((rot>gruen/0.75)&&(rot<gruen/0.55))||((rot>blau/0.25)&&(rot<blau/0.15))){
 499              		.loc 1 162 0
 500 0488 D000CDE1 		ldrd	r0, [sp]
 501 048c 0020A0E3 		mov	r2, #0
 502 0490 EC309FE5 		ldr	r3, .L69+44
 503 0494 FEFFFFEB 		bl	__aeabi_ddiv
 504              	.LVL55:
 505 0498 0020A0E1 		mov	r2, r0
 506 049c 0130A0E1 		mov	r3, r1
 507 04a0 0400A0E1 		mov	r0, r4
 508 04a4 0510A0E1 		mov	r1, r5
 509 04a8 FEFFFFEB 		bl	__aeabi_dcmpgt
 510              	.LVL56:
 511 04ac 000050E3 		cmp	r0, #0
 512 04b0 0B00000A 		beq	.L36
 513              		.loc 1 162 0 is_stmt 0 discriminator 1
 514 04b4 D000CDE1 		ldrd	r0, [sp]
 515 04b8 9C209FE5 		ldr	r2, .L69+4
 516 04bc C4309FE5 		ldr	r3, .L69+48
 517 04c0 FEFFFFEB 		bl	__aeabi_ddiv
 518              	.LVL57:
 519 04c4 0020A0E1 		mov	r2, r0
 520 04c8 0130A0E1 		mov	r3, r1
 521 04cc 0400A0E1 		mov	r0, r4
 522 04d0 0510A0E1 		mov	r1, r5
 523 04d4 FEFFFFEB 		bl	__aeabi_dcmplt
 524              	.LVL58:
 525 04d8 000050E3 		cmp	r0, #0
 163:Farbe_sen.c   ****             Farbe=  GELB;
 526              		.loc 1 163 0 is_stmt 1 discriminator 1
 527 04dc 0200A013 		movne	r0, #2
 162:Farbe_sen.c   ****             Farbe=  GELB;
 528              		.loc 1 162 0 discriminator 1
 529 04e0 1A00001A 		bne	.L12
 530              	.L36:
 162:Farbe_sen.c   ****             Farbe=  GELB;
 531              		.loc 1 162 0 is_stmt 0 discriminator 2
 532 04e4 D800CDE1 		ldrd	r0, [sp, #8]
 533 04e8 0020A0E3 		mov	r2, #0
 534 04ec 98309FE5 		ldr	r3, .L69+52
 535 04f0 FEFFFFEB 		bl	__aeabi_dmul
 536              	.LVL59:
 537 04f4 0020A0E1 		mov	r2, r0
 538 04f8 0130A0E1 		mov	r3, r1
 539 04fc 0400A0E1 		mov	r0, r4
 540 0500 0510A0E1 		mov	r1, r5
 541 0504 FEFFFFEB 		bl	__aeabi_dcmpgt
 542              	.LVL60:
 543 0508 000050E3 		cmp	r0, #0
 544 050c 0E00000A 		beq	.L68
 162:Farbe_sen.c   ****             Farbe=  GELB;
 545              		.loc 1 162 0 discriminator 1
 546 0510 D800CDE1 		ldrd	r0, [sp, #8]
 547 0514 74209FE5 		ldr	r2, .L69+56
 548 0518 74309FE5 		ldr	r3, .L69+60
 549 051c FEFFFFEB 		bl	__aeabi_ddiv
 550              	.LVL61:
 551 0520 0020A0E1 		mov	r2, r0
 552 0524 0130A0E1 		mov	r3, r1
 553 0528 0400A0E1 		mov	r0, r4
 554 052c 0510A0E1 		mov	r1, r5
 555 0530 FEFFFFEB 		bl	__aeabi_dcmplt
 556              	.LVL62:
 557 0534 000050E3 		cmp	r0, #0
 135:Farbe_sen.c   ****     
 558              		.loc 1 135 0 is_stmt 1 discriminator 1
 559 0538 0200A013 		movne	r0, #2
 560 053c 0000E003 		mvneq	r0, #0
 561 0540 020000EA 		b	.L12
 562              	.L67:
 135:Farbe_sen.c   ****     
 563              		.loc 1 135 0 is_stmt 0
 564 0544 0000E0E3 		mvn	r0, #0
 565 0548 000000EA 		b	.L12
 566              	.L68:
 567 054c 0000E0E3 		mvn	r0, #0
 568              	.L12:
 569              	.LVL63:
 164:Farbe_sen.c   ****             goto fertig;
 165:Farbe_sen.c   ****         }
 166:Farbe_sen.c   ****     }
 167:Farbe_sen.c   ****     fertig:return Farbe;
 168:Farbe_sen.c   **** }...
 570              		.loc 1 168 0 is_stmt 1
 571 0550 10D08DE2 		add	sp, sp, #16
 572              		@ sp needed
 573 0554 F087BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 574              	.LVL64:
 575              	.L70:
 576              		.align	2
 577              	.L69:
 578 0558 0000A041 		.word	1101004800
 579 055c 9A999999 		.word	-1717986918
 580 0560 9999F53F 		.word	1073060249
 581 0564 9999F13F 		.word	1072798105
 582 0568 00000440 		.word	1074003968
 583 056c 00008040 		.word	1082130432
 584 0570 CDCCCCCC 		.word	-858993459
 585 0574 CCCC0040 		.word	1073794252
 586 0578 00002041 		.word	1092616192
 587 057c 00004040 		.word	1077936128
 588 0580 0000F83F 		.word	1073217536
 589 0584 0000E83F 		.word	1072168960
 590 0588 9999E13F 		.word	1071749529
 591 058c 00001040 		.word	1074790400
 592 0590 33333333 		.word	858993459
 593 0594 3333C33F 		.word	1069757235
 594              		.cfi_endproc
 595              	.LFE14:
 596              		.fnend
 598              		.global	__aeabi_i2d
 599              		.global	__aeabi_d2f
 600              		.align	2
 601              		.global	ColSen_getData
 603              	ColSen_getData:
 604              		.fnstart
 605              	.LFB12:
  66:Farbe_sen.c   **** {
 606              		.loc 1 66 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610 0598 F0432DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, lr}
 611              		.save {r4, r5, r6, r7, r8, r9, lr}
 612              		.cfi_def_cfa_offset 28
 613              		.cfi_offset 4, -28
 614              		.cfi_offset 5, -24
 615              		.cfi_offset 6, -20
 616              		.cfi_offset 7, -16
 617              		.cfi_offset 8, -12
 618              		.cfi_offset 9, -8
 619              		.cfi_offset 14, -4
 620              		.pad #12
 621 059c 0CD04DE2 		sub	sp, sp, #12
 622              		.cfi_def_cfa_offset 40
 623              	.LVL65:
  73:Farbe_sen.c   ****     usleep(10000);
 624              		.loc 1 73 0
 625 05a0 4C019FE5 		ldr	r0, .L81
 626 05a4 FEFFFFEB 		bl	usleep
 627              	.LVL66:
  74:Farbe_sen.c   ****     sleep(1);
 628              		.loc 1 74 0
 629 05a8 0100A0E3 		mov	r0, #1
 630 05ac FEFFFFEB 		bl	sleep
 631              	.LVL67:
  75:Farbe_sen.c   ****     Color_data_r=(unsigned char)pColorSensor->Raw[PORT][0][0]+(unsigned char)(pColorSensor->Raw[POR
 632              		.loc 1 75 0
 633 05b0 40319FE5 		ldr	r3, .L81+4
 634 05b4 003093E5 		ldr	r3, [r3]
 635 05b8 3C219FE5 		ldr	r2, .L81+8
 636 05bc 002092E5 		ldr	r2, [r2]
 637 05c0 96CDA0E3 		mov	ip, #9600
 638 05c4 923C2CE0 		mla	ip, r2, ip, r3
 639 05c8 30319FE5 		ldr	r3, .L81+12
 640 05cc 0370DCE7 		ldrb	r7, [ip, r3]	@ zero_extendqisi2
 641              	.LVL68:
  76:Farbe_sen.c   ****     Color_data_g=(unsigned char)pColorSensor->Raw[PORT][0][2]+(unsigned char)(pColorSensor->Raw[POR
 642              		.loc 1 76 0
 643 05d0 023083E2 		add	r3, r3, #2
 644 05d4 0360DCE7 		ldrb	r6, [ip, r3]	@ zero_extendqisi2
 645              	.LVL69:
  77:Farbe_sen.c   ****     Color_data_b=(unsigned char)pColorSensor->Raw[PORT][0][4]+(unsigned char)(pColorSensor->Raw[POR
 646              		.loc 1 77 0
 647 05d8 023083E2 		add	r3, r3, #2
 648 05dc 0350DCE7 		ldrb	r5, [ip, r3]	@ zero_extendqisi2
 649              	.LVL70:
  78:Farbe_sen.c   ****     Color_data_blank=(unsigned int)pColorSensor->Raw[PORT][0][6]+(unsigned int)(pColorSensor->Raw[P
 650              		.loc 1 78 0
 651 05e0 033083E2 		add	r3, r3, #3
 652 05e4 D3809CE1 		ldrsb	r8, [ip, r3]
 653 05e8 013043E2 		sub	r3, r3, #1
 654 05ec D3309CE1 		ldrsb	r3, [ip, r3]
 655 05f0 088483E0 		add	r8, r3, r8, asl #8
 656              	.LVL71:
  79:Farbe_sen.c   ****     usleep(100000);
 657              		.loc 1 79 0
 658 05f4 08019FE5 		ldr	r0, .L81+16
 659 05f8 FEFFFFEB 		bl	usleep
 660              	.LVL72:
  80:Farbe_sen.c   ****     Color_color=Color_col(Color_data_r*1.0,Color_data_g*1.0,Color_data_b*1.0);
 661              		.loc 1 80 0
 662 05fc 0700A0E1 		mov	r0, r7
 663 0600 FEFFFFEB 		bl	__aeabi_i2d
 664              	.LVL73:
 665 0604 FEFFFFEB 		bl	__aeabi_d2f
 666              	.LVL74:
 667 0608 0090A0E1 		mov	r9, r0
 668 060c 0600A0E1 		mov	r0, r6
 669 0610 FEFFFFEB 		bl	__aeabi_i2d
 670              	.LVL75:
 671 0614 FEFFFFEB 		bl	__aeabi_d2f
 672              	.LVL76:
 673 0618 0040A0E1 		mov	r4, r0
 674 061c 0500A0E1 		mov	r0, r5
 675 0620 FEFFFFEB 		bl	__aeabi_i2d
 676              	.LVL77:
 677 0624 FEFFFFEB 		bl	__aeabi_d2f
 678              	.LVL78:
 679 0628 0020A0E1 		mov	r2, r0
 680 062c 0900A0E1 		mov	r0, r9
 681 0630 0410A0E1 		mov	r1, r4
 682 0634 FEFFFFEB 		bl	Color_col
 683              	.LVL79:
 684 0638 0040A0E1 		mov	r4, r0
 685              	.LVL80:
  81:Farbe_sen.c   ****     printf("color_data is (%5d, %5d, %5d, %5d)",Color_data_r,Color_data_g,Color_data_b,Color_data_b
 686              		.loc 1 81 0
 687 063c 00808DE5 		str	r8, [sp]
 688 0640 C0009FE5 		ldr	r0, .L81+20
 689              	.LVL81:
 690 0644 0710A0E1 		mov	r1, r7
 691 0648 0620A0E1 		mov	r2, r6
 692 064c 0530A0E1 		mov	r3, r5
 693 0650 FEFFFFEB 		bl	printf
 694              	.LVL82:
  84:Farbe_sen.c   ****     switch(Color_color){
 695              		.loc 1 84 0
 696 0654 050054E3 		cmp	r4, #5
 697 0658 04F19F97 		ldrls	pc, [pc, r4, asl #2]
 698 065c 1D0000EA 		b	.L72
 699              	.L74:
 700 0660 78060000 		.word	.L73
 701 0664 88060000 		.word	.L75
 702 0668 98060000 		.word	.L76
 703 066c A8060000 		.word	.L77
 704 0670 B8060000 		.word	.L78
 705 0674 C8060000 		.word	.L79
 706              	.L73:
  86:Farbe_sen.c   ****             printf("\033[1;30m   %d\033[0m",Color_color);
 707              		.loc 1 86 0
 708 0678 8C009FE5 		ldr	r0, .L81+24
 709 067c 0010A0E3 		mov	r1, #0
 710 0680 FEFFFFEB 		bl	printf
 711              	.LVL83:
  87:Farbe_sen.c   ****             break;
 712              		.loc 1 87 0
 713 0684 150000EA 		b	.L80
 714              	.L75:
  90:Farbe_sen.c   ****             printf("\033[1;34m   %d\033[0m",Color_color);
 715              		.loc 1 90 0
 716 0688 80009FE5 		ldr	r0, .L81+28
 717 068c 0110A0E3 		mov	r1, #1
 718 0690 FEFFFFEB 		bl	printf
 719              	.LVL84:
  91:Farbe_sen.c   ****             break;
 720              		.loc 1 91 0
 721 0694 110000EA 		b	.L80
 722              	.L76:
  94:Farbe_sen.c   ****             printf("\033[1;33m   %d\033[0m",Color_color);
 723              		.loc 1 94 0
 724 0698 74009FE5 		ldr	r0, .L81+32
 725 069c 0210A0E3 		mov	r1, #2
 726 06a0 FEFFFFEB 		bl	printf
 727              	.LVL85:
  95:Farbe_sen.c   ****             break;
 728              		.loc 1 95 0
 729 06a4 0D0000EA 		b	.L80
 730              	.L77:
  98:Farbe_sen.c   ****             printf("\033[1;32m   %d\033[0m",Color_color);
 731              		.loc 1 98 0
 732 06a8 68009FE5 		ldr	r0, .L81+36
 733 06ac 0310A0E3 		mov	r1, #3
 734 06b0 FEFFFFEB 		bl	printf
 735              	.LVL86:
  99:Farbe_sen.c   ****             break;
 736              		.loc 1 99 0
 737 06b4 090000EA 		b	.L80
 738              	.L78:
 102:Farbe_sen.c   ****             printf("\033[1;31m   %d\033[0m",Color_color);
 739              		.loc 1 102 0
 740 06b8 5C009FE5 		ldr	r0, .L81+40
 741 06bc 0410A0E3 		mov	r1, #4
 742 06c0 FEFFFFEB 		bl	printf
 743              	.LVL87:
 103:Farbe_sen.c   ****             break;
 744              		.loc 1 103 0
 745 06c4 050000EA 		b	.L80
 746              	.L79:
 106:Farbe_sen.c   ****             printf("\033[1;35m   %d\033[0m",Color_color);
 747              		.loc 1 106 0
 748 06c8 50009FE5 		ldr	r0, .L81+44
 749 06cc 0510A0E3 		mov	r1, #5
 750 06d0 FEFFFFEB 		bl	printf
 751              	.LVL88:
 107:Farbe_sen.c   ****             break;
 752              		.loc 1 107 0
 753 06d4 010000EA 		b	.L80
 754              	.L72:
 110:Farbe_sen.c   ****             printf(" x ");
 755              		.loc 1 110 0
 756 06d8 44009FE5 		ldr	r0, .L81+48
 757 06dc FEFFFFEB 		bl	printf
 758              	.LVL89:
 759              	.L80:
 114:Farbe_sen.c   ****     printf("\n\r");
 760              		.loc 1 114 0
 761 06e0 40009FE5 		ldr	r0, .L81+52
 762 06e4 FEFFFFEB 		bl	printf
 763              	.LVL90:
 121:Farbe_sen.c   **** }
 764              		.loc 1 121 0
 765 06e8 0400A0E1 		mov	r0, r4
 766 06ec 0CD08DE2 		add	sp, sp, #12
 767              		@ sp needed
 768 06f0 F083BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, pc}
 769              	.LVL91:
 770              	.L82:
 771              		.align	2
 772              	.L81:
 773 06f4 10270000 		.word	10000
 774 06f8 00000000 		.word	pColorSensor
 775 06fc 00000000 		.word	.LANCHOR0
 776 0700 60100000 		.word	4192
 777 0704 A0860100 		.word	100000
 778 0708 78000000 		.word	.LC5
 779 070c 9C000000 		.word	.LC6
 780 0710 B0000000 		.word	.LC7
 781 0714 C4000000 		.word	.LC8
 782 0718 D8000000 		.word	.LC9
 783 071c EC000000 		.word	.LC10
 784 0720 00010000 		.word	.LC11
 785 0724 14010000 		.word	.LC12
 786 0728 18010000 		.word	.LC13
 787              		.cfi_endproc
 788              	.LFE12:
 789              		.fnend
 791              		.comm	DevCon,12,4
 792              		.comm	pColorSensor,4,4
 793              		.comm	file,4,4
 794              		.global	MAX_SAMPLES
 795              		.global	COLOR_SENSOR_TYPE
 796              		.global	RGB_RAW
 797              		.global	PORT
 798              		.section	.rodata
 799              		.align	2
 802              	MAX_SAMPLES:
 803 0000 0A000000 		.word	10
 806              	COLOR_SENSOR_TYPE:
 807 0004 1D       		.byte	29
 810              	RGB_RAW:
 811 0005 04       		.byte	4
 812 0006 0000     		.section	.rodata.str1.4,"aMS",%progbits,1
 813              		.align	2
 814              	.LC0:
 815 0000 2F646576 		.ascii	"/dev/lms_uart\000"
 815      2F6C6D73 
 815      5F756172 
 815      7400
 816 000e 0000     		.space	2
 817              	.LC1:
 818 0010 4661696C 		.ascii	"Failed to open device\012\000"
 818      65642074 
 818      6F206F70 
 818      656E2064 
 818      65766963 
 819 0027 00       		.space	1
 820              	.LC2:
 821 0028 4661696C 		.ascii	"Failed to map Color Sensor device\012\000"
 821      65642074 
 821      6F206D61 
 821      7020436F 
 821      6C6F7220 
 822 004b 00       		.space	1
 823              	.LC3:
 824 004c 44657669 		.ascii	"Device is ready \012\015\000"
 824      63652069 
 824      73207265 
 824      61647920 
 824      0A0D00
 825 005f 00       		.space	1
 826              	.LC4:
 827 0060 436C6F73 		.ascii	"Close the Color Sensor\000"
 827      65207468 
 827      6520436F 
 827      6C6F7220 
 827      53656E73 
 828 0077 00       		.space	1
 829              	.LC5:
 830 0078 636F6C6F 		.ascii	"color_data is (%5d, %5d, %5d, %5d)\000"
 830      725F6461 
 830      74612069 
 830      73202825 
 830      35642C20 
 831 009b 00       		.space	1
 832              	.LC6:
 833 009c 1B5B313B 		.ascii	"\033[1;30m   %d\033[0m\000"
 833      33306D20 
 833      20202564 
 833      1B5B306D 
 833      00
 834 00ad 000000   		.space	3
 835              	.LC7:
 836 00b0 1B5B313B 		.ascii	"\033[1;34m   %d\033[0m\000"
 836      33346D20 
 836      20202564 
 836      1B5B306D 
 836      00
 837 00c1 000000   		.space	3
 838              	.LC8:
 839 00c4 1B5B313B 		.ascii	"\033[1;33m   %d\033[0m\000"
 839      33336D20 
 839      20202564 
 839      1B5B306D 
 839      00
 840 00d5 000000   		.space	3
 841              	.LC9:
 842 00d8 1B5B313B 		.ascii	"\033[1;32m   %d\033[0m\000"
 842      33326D20 
 842      20202564 
 842      1B5B306D 
 842      00
 843 00e9 000000   		.space	3
 844              	.LC10:
 845 00ec 1B5B313B 		.ascii	"\033[1;31m   %d\033[0m\000"
 845      33316D20 
 845      20202564 
 845      1B5B306D 
 845      00
 846 00fd 000000   		.space	3
 847              	.LC11:
 848 0100 1B5B313B 		.ascii	"\033[1;35m   %d\033[0m\000"
 848      33356D20 
 848      20202564 
 848      1B5B306D 
 848      00
 849 0111 000000   		.space	3
 850              	.LC12:
 851 0114 20782000 		.ascii	" x \000"
 852              	.LC13:
 853 0118 0A0D00   		.ascii	"\012\015\000"
 854 011b 00       		.bss
 855              		.align	2
 856              	.LANCHOR0 = . + 0
 859              	PORT:
 860 0000 00000000 		.space	4
 861              		.text
 862              	.Letext0:
 863              		.file 2 "/usr/local/carlson-minot/crosscompilers/lib/gcc/arm-none-linux-gnueabi/4.8.3/include/stdd
 864              		.file 3 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 865              		.file 4 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 866              		.file 5 "Farbe_sen.h"
 867              		.file 6 "lmstypes.h"
 868              		.file 7 "bytecodes.h"
 869              		.file 8 "lms2012.h"
 870              		.file 9 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 871              		.file 10 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
 872              		.file 11 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
 873              		.file 12 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
 874              		.file 13 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Farbe_sen.c
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:16     .text:0000000000000000 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:19     .text:0000000000000000 ColSen_init
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:106    .text:00000000000000bc $d
                            *COM*:0000000000000004 file
                            *COM*:0000000000000004 pColorSensor
                            *COM*:000000000000000c DevCon
                       .ARM.exidx:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:121    .text:00000000000000e8 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:124    .text:00000000000000e8 ColSen_close
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:151    .text:0000000000000108 $d
                       .ARM.extab:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:168    .text:0000000000000110 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:171    .text:0000000000000110 Color_col
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:578    .text:0000000000000558 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:600    .text:0000000000000598 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:603    .text:0000000000000598 ColSen_getData
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:700    .text:0000000000000660 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:708    .text:0000000000000678 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:773    .text:00000000000006f4 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:802    .rodata:0000000000000000 MAX_SAMPLES
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:806    .rodata:0000000000000004 COLOR_SENSOR_TYPE
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:810    .rodata:0000000000000005 RGB_RAW
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:859    .bss:0000000000000000 PORT
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:799    .rodata:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:813    .rodata.str1.4:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//ccSv9laQ.s:855    .bss:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
open
printf
mmap
ioctl
__aeabi_unwind_cpp_pr0
close
__aeabi_unwind_cpp_pr1
__aeabi_fcmpge
__aeabi_f2d
__aeabi_dmul
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_fcmpgt
__aeabi_fcmple
__aeabi_fmul
__aeabi_fadd
__aeabi_fcmplt
__aeabi_ddiv
__aeabi_i2d
__aeabi_d2f
usleep
sleep
