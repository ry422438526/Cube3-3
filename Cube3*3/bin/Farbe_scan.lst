   1              		.arch armv5te
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 2
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"Farbe_scan.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.align	2
  17              		.global	farbe_scan
  19              	farbe_scan:
  20              		.fnstart
  21              	.LFB11:
  22              		.file 1 "Farbe_scan.c"
   1:Farbe_scan.c  **** //
   2:Farbe_scan.c  **** //  Farbe_scan.c
   3:Farbe_scan.c  **** //  Cube3*3
   4:Farbe_scan.c  **** //
   5:Farbe_scan.c  **** //  Created by 杨春霞 on 12.11.15.
   6:Farbe_scan.c  **** //  Copyright © 2015 Chunxia Yang. All rights reserved.
   7:Farbe_scan.c  **** //
   8:Farbe_scan.c  **** 
   9:Farbe_scan.c  **** #include <fcntl.h>
  10:Farbe_scan.c  **** #include <stdio.h>
  11:Farbe_scan.c  **** #include <sys/ioctl.h>
  12:Farbe_scan.c  **** #include <sys/mman.h>
  13:Farbe_scan.c  **** #ifdef __linux__
  14:Farbe_scan.c  **** #include "lms2012.h"
  15:Farbe_scan.c  **** #include <unistd.h>
  16:Farbe_scan.c  **** #include "Farbe_scan.h"
  17:Farbe_scan.c  **** #include "Farbe_motor.h"
  18:Farbe_scan.c  **** #include "Farbe_sen.h"
  19:Farbe_scan.c  **** #include "Arm_motor.h"
  20:Farbe_scan.c  **** #include "Dreh_motor.h"
  21:Farbe_scan.c  **** #endif
  22:Farbe_scan.c  **** #include "main.h"
  23:Farbe_scan.c  **** 
  24:Farbe_scan.c  **** const char Color_position[6][9]=
  25:Farbe_scan.c  **** {
  26:Farbe_scan.c  ****     {4,2,1,0,3,6,7,8,5},
  27:Farbe_scan.c  ****     {4,0,3,6,7,8,5,2,1},
  28:Farbe_scan.c  ****     {4,6,7,8,5,2,1,0,3},
  29:Farbe_scan.c  ****     {4,6,5,2,1,0,3,6,7},
  30:Farbe_scan.c  ****     {4,6,7,8,5,2,1,0,3},
  31:Farbe_scan.c  ****     {4,2,1,0,3,6,7,8,5}
  32:Farbe_scan.c  **** };
  33:Farbe_scan.c  **** int Center[]={0,5,2,3,4,1};
  34:Farbe_scan.c  **** 
  35:Farbe_scan.c  **** int farbe_scan()
  36:Farbe_scan.c  **** {
  23              		.loc 1 36 0
  24              		.cfi_startproc
  25              		@ args = 0, pretend = 0, frame = 8
  26              		@ frame_needed = 0, uses_anonymous_args = 0
  27 0000 F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, r10, fp, lr}
  28              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
  29              		.cfi_def_cfa_offset 36
  30              		.cfi_offset 4, -36
  31              		.cfi_offset 5, -32
  32              		.cfi_offset 6, -28
  33              		.cfi_offset 7, -24
  34              		.cfi_offset 8, -20
  35              		.cfi_offset 9, -16
  36              		.cfi_offset 10, -12
  37              		.cfi_offset 11, -8
  38              		.cfi_offset 14, -4
  39              		.pad #12
  40 0004 0CD04DE2 		sub	sp, sp, #12
  41              		.cfi_def_cfa_offset 48
  37:Farbe_scan.c  **** #ifdef __linux__
  38:Farbe_scan.c  ****     int i;
  39:Farbe_scan.c  ****     //int i,j;
  40:Farbe_scan.c  ****     arm_setpos(4);
  42              		.loc 1 40 0
  43 0008 0400A0E3 		mov	r0, #4
  44 000c FEFFFFEB 		bl	arm_setpos
  45              	.LVL0:
  46 0010 0040A0E3 		mov	r4, #0
  41:Farbe_scan.c  ****     for (i=0; i<=2; i++)
  42:Farbe_scan.c  ****     {
  43:Farbe_scan.c  ****         Farbe_setpos(1);
  44:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][0]]=ColSen_getData();
  47              		.loc 1 44 0
  48 0014 1C749FE5 		ldr	r7, .L6
  49 0018 1C649FE5 		ldr	r6, .L6+4
  50 001c 1C549FE5 		ldr	r5, .L6+8
  45:Farbe_scan.c  ****         DrehTel_dreh();
  46:Farbe_scan.c  ****         Farbe_setpos(5);
  51              		.loc 1 46 0
  52 0020 0590A0E3 		mov	r9, #5
  53              	.LVL1:
  54              	.L3:
  43:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][0]]=ColSen_getData();
  55              		.loc 1 43 0 discriminator 2
  56 0024 0100A0E3 		mov	r0, #1
  57 0028 FEFFFFEB 		bl	Farbe_setpos
  58              	.LVL2:
  44:Farbe_scan.c  ****         DrehTel_dreh();
  59              		.loc 1 44 0 discriminator 2
  60 002c 078094E7 		ldr	r8, [r4, r7]
  61 0030 888188E0 		add	r8, r8, r8, asl #3
  62 0034 08A0D6E7 		ldrb	r10, [r6, r8]	@ zero_extendqisi2
  63 0038 FEFFFFEB 		bl	ColSen_getData
  64              	.LVL3:
  65 003c 0A8088E0 		add	r8, r8, r10
  66 0040 0800C5E7 		strb	r0, [r5, r8]
  45:Farbe_scan.c  ****         DrehTel_dreh();
  67              		.loc 1 45 0 discriminator 2
  68 0044 FEFFFFEB 		bl	DrehTel_dreh
  69              	.LVL4:
  70              		.loc 1 46 0 discriminator 2
  71 0048 0900A0E1 		mov	r0, r9
  72 004c FEFFFFEB 		bl	Farbe_setpos
  73              	.LVL5:
  47:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][1]]=ColSen_getData();
  74              		.loc 1 47 0 discriminator 2
  75 0050 078094E7 		ldr	r8, [r4, r7]
  76 0054 888188E0 		add	r8, r8, r8, asl #3
  77 0058 083086E0 		add	r3, r6, r8
  78 005c 01A0D3E5 		ldrb	r10, [r3, #1]	@ zero_extendqisi2
  79 0060 FEFFFFEB 		bl	ColSen_getData
  80              	.LVL6:
  81 0064 0A8088E0 		add	r8, r8, r10
  82 0068 0800C5E7 		strb	r0, [r5, r8]
  48:Farbe_scan.c  ****         DrehTel_dreh();
  83              		.loc 1 48 0 discriminator 2
  84 006c FEFFFFEB 		bl	DrehTel_dreh
  85              	.LVL7:
  49:Farbe_scan.c  ****         Farbe_setpos(2);
  86              		.loc 1 49 0 discriminator 2
  87 0070 0200A0E3 		mov	r0, #2
  88 0074 FEFFFFEB 		bl	Farbe_setpos
  89              	.LVL8:
  50:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][2]]=ColSen_getData();
  90              		.loc 1 50 0 discriminator 2
  91 0078 078094E7 		ldr	r8, [r4, r7]
  92 007c 02A0A0E3 		mov	r10, #2
  93 0080 888188E0 		add	r8, r8, r8, asl #3
  94 0084 083086E0 		add	r3, r6, r8
  95 0088 02B0D3E5 		ldrb	fp, [r3, #2]	@ zero_extendqisi2
  96 008c FEFFFFEB 		bl	ColSen_getData
  97              	.LVL9:
  98 0090 0B8088E0 		add	r8, r8, fp
  99 0094 0800C5E7 		strb	r0, [r5, r8]
  51:Farbe_scan.c  ****         DrehTel_dreh();
 100              		.loc 1 51 0 discriminator 2
 101 0098 FEFFFFEB 		bl	DrehTel_dreh
 102              	.LVL10:
  52:Farbe_scan.c  ****         Farbe_setpos(4);
 103              		.loc 1 52 0 discriminator 2
 104 009c 0400A0E3 		mov	r0, #4
 105 00a0 FEFFFFEB 		bl	Farbe_setpos
 106              	.LVL11:
  53:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][3]]=ColSen_getData();
 107              		.loc 1 53 0 discriminator 2
 108 00a4 07B094E7 		ldr	fp, [r4, r7]
 109 00a8 0380A0E3 		mov	r8, #3
 110 00ac 8BB18BE0 		add	fp, fp, fp, asl #3
 111 00b0 0B3086E0 		add	r3, r6, fp
 112 00b4 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 113 00b8 04308DE5 		str	r3, [sp, #4]
 114 00bc FEFFFFEB 		bl	ColSen_getData
 115              	.LVL12:
 116 00c0 04309DE5 		ldr	r3, [sp, #4]
 117 00c4 03B08BE0 		add	fp, fp, r3
 118 00c8 0B00C5E7 		strb	r0, [r5, fp]
  54:Farbe_scan.c  ****         DrehTel_dreh();
 119              		.loc 1 54 0 discriminator 2
 120 00cc FEFFFFEB 		bl	DrehTel_dreh
 121              	.LVL13:
  55:Farbe_scan.c  ****         Farbe_setpos(2);
 122              		.loc 1 55 0 discriminator 2
 123 00d0 0A00A0E1 		mov	r0, r10
 124 00d4 FEFFFFEB 		bl	Farbe_setpos
 125              	.LVL14:
  56:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][4]]=ColSen_getData();
 126              		.loc 1 56 0 discriminator 2
 127 00d8 07B094E7 		ldr	fp, [r4, r7]
 128 00dc 8BB18BE0 		add	fp, fp, fp, asl #3
 129 00e0 0B3086E0 		add	r3, r6, fp
 130 00e4 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 131 00e8 04308DE5 		str	r3, [sp, #4]
 132 00ec FEFFFFEB 		bl	ColSen_getData
 133              	.LVL15:
 134 00f0 04309DE5 		ldr	r3, [sp, #4]
 135 00f4 03B08BE0 		add	fp, fp, r3
 136 00f8 0B00C5E7 		strb	r0, [r5, fp]
  57:Farbe_scan.c  ****         DrehTel_dreh();
 137              		.loc 1 57 0 discriminator 2
 138 00fc FEFFFFEB 		bl	DrehTel_dreh
 139              	.LVL16:
  58:Farbe_scan.c  ****         Farbe_setpos(5);
 140              		.loc 1 58 0 discriminator 2
 141 0100 0900A0E1 		mov	r0, r9
 142 0104 FEFFFFEB 		bl	Farbe_setpos
 143              	.LVL17:
  59:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][5]]=ColSen_getData();
 144              		.loc 1 59 0 discriminator 2
 145 0108 07B094E7 		ldr	fp, [r4, r7]
 146 010c 8BB18BE0 		add	fp, fp, fp, asl #3
 147 0110 0B3086E0 		add	r3, r6, fp
 148 0114 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 149 0118 04308DE5 		str	r3, [sp, #4]
 150 011c FEFFFFEB 		bl	ColSen_getData
 151              	.LVL18:
 152 0120 04309DE5 		ldr	r3, [sp, #4]
 153 0124 03B08BE0 		add	fp, fp, r3
 154 0128 0B00C5E7 		strb	r0, [r5, fp]
  60:Farbe_scan.c  ****         DrehTel_dreh();
 155              		.loc 1 60 0 discriminator 2
 156 012c FEFFFFEB 		bl	DrehTel_dreh
 157              	.LVL19:
  61:Farbe_scan.c  ****         Farbe_setpos(3);
 158              		.loc 1 61 0 discriminator 2
 159 0130 0800A0E1 		mov	r0, r8
 160 0134 FEFFFFEB 		bl	Farbe_setpos
 161              	.LVL20:
  62:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][6]]=ColSen_getData();
 162              		.loc 1 62 0 discriminator 2
 163 0138 07B094E7 		ldr	fp, [r4, r7]
 164 013c 8BB18BE0 		add	fp, fp, fp, asl #3
 165 0140 0B3086E0 		add	r3, r6, fp
 166 0144 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 167 0148 04308DE5 		str	r3, [sp, #4]
 168 014c FEFFFFEB 		bl	ColSen_getData
 169              	.LVL21:
 170 0150 04309DE5 		ldr	r3, [sp, #4]
 171 0154 03B08BE0 		add	fp, fp, r3
 172 0158 0B00C5E7 		strb	r0, [r5, fp]
  63:Farbe_scan.c  ****         DrehTel_dreh();
 173              		.loc 1 63 0 discriminator 2
 174 015c FEFFFFEB 		bl	DrehTel_dreh
 175              	.LVL22:
  64:Farbe_scan.c  ****         Farbe_setpos(5);
 176              		.loc 1 64 0 discriminator 2
 177 0160 0900A0E1 		mov	r0, r9
 178 0164 FEFFFFEB 		bl	Farbe_setpos
 179              	.LVL23:
  65:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][7]]=ColSen_getData();
 180              		.loc 1 65 0 discriminator 2
 181 0168 07B094E7 		ldr	fp, [r4, r7]
 182 016c 8BB18BE0 		add	fp, fp, fp, asl #3
 183 0170 0B3086E0 		add	r3, r6, fp
 184 0174 0730D3E5 		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 185 0178 04308DE5 		str	r3, [sp, #4]
 186 017c FEFFFFEB 		bl	ColSen_getData
 187              	.LVL24:
 188 0180 04309DE5 		ldr	r3, [sp, #4]
 189 0184 03B08BE0 		add	fp, fp, r3
 190 0188 0B00C5E7 		strb	r0, [r5, fp]
  66:Farbe_scan.c  ****         DrehTel_dreh();
 191              		.loc 1 66 0 discriminator 2
 192 018c FEFFFFEB 		bl	DrehTel_dreh
 193              	.LVL25:
  67:Farbe_scan.c  ****         Farbe_setpos(3);
 194              		.loc 1 67 0 discriminator 2
 195 0190 0800A0E1 		mov	r0, r8
 196 0194 FEFFFFEB 		bl	Farbe_setpos
 197              	.LVL26:
  68:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][8]]=ColSen_getData();
 198              		.loc 1 68 0 discriminator 2
 199 0198 07B094E7 		ldr	fp, [r4, r7]
 200 019c 8BB18BE0 		add	fp, fp, fp, asl #3
 201 01a0 0B3086E0 		add	r3, r6, fp
 202 01a4 0830D3E5 		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 203 01a8 04308DE5 		str	r3, [sp, #4]
 204 01ac FEFFFFEB 		bl	ColSen_getData
 205              	.LVL27:
 206 01b0 04309DE5 		ldr	r3, [sp, #4]
 207 01b4 03B08BE0 		add	fp, fp, r3
 208 01b8 0B00C5E7 		strb	r0, [r5, fp]
  69:Farbe_scan.c  ****         /*for(j=1;j<=7;j++)
  70:Farbe_scan.c  ****         {
  71:Farbe_scan.c  ****             if (j%2 != 0){
  72:Farbe_scan.c  ****                 usleep(1000);
  73:Farbe_scan.c  ****                 Farbe_setpos(2);
  74:Farbe_scan.c  ****                 usleep(100000);
  75:Farbe_scan.c  ****                 color_data[Center[i]][(int)Color_position[Center[i]][j]]=ColSen_getData();
  76:Farbe_scan.c  ****                 usleep(10000);
  77:Farbe_scan.c  ****                 DrehTel_dreh();
  78:Farbe_scan.c  ****                 sleep(1);
  79:Farbe_scan.c  ****             }
  80:Farbe_scan.c  ****             else
  81:Farbe_scan.c  ****             {
  82:Farbe_scan.c  ****                 usleep(1000);
  83:Farbe_scan.c  ****                 Farbe_setpos(3);
  84:Farbe_scan.c  ****                 usleep(100000);
  85:Farbe_scan.c  ****                 color_data[Center[i]][(int)Color_position[Center[i]][j]]=ColSen_getData();
  86:Farbe_scan.c  ****                 usleep(10000);
  87:Farbe_scan.c  ****                 DrehTel_dreh();
  88:Farbe_scan.c  ****                 sleep(1);
  89:Farbe_scan.c  ****             }
  90:Farbe_scan.c  ****         }*/
  91:Farbe_scan.c  ****         Farbe_setpos(6);
 209              		.loc 1 91 0 discriminator 2
 210 01bc 0600A0E3 		mov	r0, #6
 211 01c0 FEFFFFEB 		bl	Farbe_setpos
 212              	.LVL28:
  92:Farbe_scan.c  ****         usleep(10000);
 213              		.loc 1 92 0 discriminator 2
 214 01c4 78029FE5 		ldr	r0, .L6+12
 215 01c8 FEFFFFEB 		bl	usleep
 216              	.LVL29:
  93:Farbe_scan.c  ****         arm_setpos(3);
 217              		.loc 1 93 0 discriminator 2
 218 01cc 0800A0E1 		mov	r0, r8
 219 01d0 FEFFFFEB 		bl	arm_setpos
 220              	.LVL30:
  94:Farbe_scan.c  ****         arm_setpos(2);
 221              		.loc 1 94 0 discriminator 2
 222 01d4 0A00A0E1 		mov	r0, r10
 223 01d8 FEFFFFEB 		bl	arm_setpos
 224              	.LVL31:
  95:Farbe_scan.c  ****         arm_setpos(4);
 225              		.loc 1 95 0 discriminator 2
 226 01dc 0400A0E3 		mov	r0, #4
 227 01e0 FEFFFFEB 		bl	arm_setpos
 228              	.LVL32:
 229 01e4 044084E2 		add	r4, r4, #4
  41:Farbe_scan.c  ****     {
 230              		.loc 1 41 0 discriminator 2
 231 01e8 0C0054E3 		cmp	r4, #12
 232 01ec 8CFFFF1A 		bne	.L3
  96:Farbe_scan.c  ****     }
  97:Farbe_scan.c  ****     
  98:Farbe_scan.c  ****     usleep(100000);
 233              		.loc 1 98 0
 234 01f0 50429FE5 		ldr	r4, .L6+16
 235 01f4 0400A0E1 		mov	r0, r4
 236 01f8 FEFFFFEB 		bl	usleep
 237              	.LVL33:
  99:Farbe_scan.c  ****     DrehTel_setpos(1);
 238              		.loc 1 99 0
 239 01fc 0100A0E3 		mov	r0, #1
 240 0200 FEFFFFEB 		bl	DrehTel_setpos
 241              	.LVL34:
 100:Farbe_scan.c  ****     usleep(100000);
 242              		.loc 1 100 0
 243 0204 0400A0E1 		mov	r0, r4
 244 0208 FEFFFFEB 		bl	usleep
 245              	.LVL35:
 101:Farbe_scan.c  ****     arm_setpos(3);
 246              		.loc 1 101 0
 247 020c 0800A0E1 		mov	r0, r8
 248 0210 FEFFFFEB 		bl	arm_setpos
 249              	.LVL36:
 102:Farbe_scan.c  ****     arm_setpos(2);
 250              		.loc 1 102 0
 251 0214 0A00A0E1 		mov	r0, r10
 252 0218 FEFFFFEB 		bl	arm_setpos
 253              	.LVL37:
 103:Farbe_scan.c  ****     arm_setpos(4);
 254              		.loc 1 103 0
 255 021c 0400A0E3 		mov	r0, #4
 256 0220 FEFFFFEB 		bl	arm_setpos
 257              	.LVL38:
 104:Farbe_scan.c  ****     usleep(100000);
 258              		.loc 1 104 0
 259 0224 0400A0E1 		mov	r0, r4
 260 0228 FEFFFFEB 		bl	usleep
 261              	.LVL39:
 105:Farbe_scan.c  ****     DrehTel_setpos(3);
 262              		.loc 1 105 0
 263 022c 0800A0E1 		mov	r0, r8
 264 0230 FEFFFFEB 		bl	DrehTel_setpos
 265              	.LVL40:
 106:Farbe_scan.c  ****     arm_setpos(3);
 266              		.loc 1 106 0
 267 0234 0800A0E1 		mov	r0, r8
 268 0238 FEFFFFEB 		bl	arm_setpos
 269              	.LVL41:
 107:Farbe_scan.c  ****     arm_setpos(4);
 270              		.loc 1 107 0
 271 023c 0400A0E3 		mov	r0, #4
 272 0240 FEFFFFEB 		bl	arm_setpos
 273              	.LVL42:
 274 0244 EC419FE5 		ldr	r4, .L6
 108:Farbe_scan.c  ****     
 109:Farbe_scan.c  ****     for (i=3; i<=5; i++) {
 275              		.loc 1 109 0
 276 0248 08A0A0E1 		mov	r10, r8
 110:Farbe_scan.c  ****         Farbe_setpos(1);
 111:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][0]]=ColSen_getData();
 277              		.loc 1 111 0
 278 024c E8619FE5 		ldr	r6, .L6+4
 279 0250 E8519FE5 		ldr	r5, .L6+8
 112:Farbe_scan.c  ****         DrehTel_dreh();
 113:Farbe_scan.c  ****         Farbe_setpos(5);
 280              		.loc 1 113 0
 281 0254 0590A0E3 		mov	r9, #5
 114:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][1]]=ColSen_getData();
 115:Farbe_scan.c  ****         DrehTel_dreh();
 116:Farbe_scan.c  ****         Farbe_setpos(2);
 282              		.loc 1 116 0
 283 0258 0280A0E3 		mov	r8, #2
 284              	.LVL43:
 285              	.L5:
 110:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][0]]=ColSen_getData();
 286              		.loc 1 110 0 discriminator 2
 287 025c 0100A0E3 		mov	r0, #1
 288 0260 FEFFFFEB 		bl	Farbe_setpos
 289              	.LVL44:
 111:Farbe_scan.c  ****         DrehTel_dreh();
 290              		.loc 1 111 0 discriminator 2
 291 0264 0C7094E5 		ldr	r7, [r4, #12]
 292 0268 877187E0 		add	r7, r7, r7, asl #3
 293 026c 07B0D6E7 		ldrb	fp, [r6, r7]	@ zero_extendqisi2
 294 0270 FEFFFFEB 		bl	ColSen_getData
 295              	.LVL45:
 296 0274 0B7087E0 		add	r7, r7, fp
 297 0278 0700C5E7 		strb	r0, [r5, r7]
 112:Farbe_scan.c  ****         Farbe_setpos(5);
 298              		.loc 1 112 0 discriminator 2
 299 027c FEFFFFEB 		bl	DrehTel_dreh
 300              	.LVL46:
 113:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][1]]=ColSen_getData();
 301              		.loc 1 113 0 discriminator 2
 302 0280 0900A0E1 		mov	r0, r9
 303 0284 FEFFFFEB 		bl	Farbe_setpos
 304              	.LVL47:
 114:Farbe_scan.c  ****         DrehTel_dreh();
 305              		.loc 1 114 0 discriminator 2
 306 0288 0C7094E5 		ldr	r7, [r4, #12]
 307 028c 877187E0 		add	r7, r7, r7, asl #3
 308 0290 073086E0 		add	r3, r6, r7
 309 0294 01B0D3E5 		ldrb	fp, [r3, #1]	@ zero_extendqisi2
 310 0298 FEFFFFEB 		bl	ColSen_getData
 311              	.LVL48:
 312 029c 0B7087E0 		add	r7, r7, fp
 313 02a0 0700C5E7 		strb	r0, [r5, r7]
 115:Farbe_scan.c  ****         Farbe_setpos(2);
 314              		.loc 1 115 0 discriminator 2
 315 02a4 FEFFFFEB 		bl	DrehTel_dreh
 316              	.LVL49:
 317              		.loc 1 116 0 discriminator 2
 318 02a8 0800A0E1 		mov	r0, r8
 319 02ac FEFFFFEB 		bl	Farbe_setpos
 320              	.LVL50:
 117:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][2]]=ColSen_getData();
 321              		.loc 1 117 0 discriminator 2
 322 02b0 0C7094E5 		ldr	r7, [r4, #12]
 323 02b4 877187E0 		add	r7, r7, r7, asl #3
 324 02b8 073086E0 		add	r3, r6, r7
 325 02bc 02B0D3E5 		ldrb	fp, [r3, #2]	@ zero_extendqisi2
 326 02c0 FEFFFFEB 		bl	ColSen_getData
 327              	.LVL51:
 328 02c4 0B7087E0 		add	r7, r7, fp
 329 02c8 0700C5E7 		strb	r0, [r5, r7]
 118:Farbe_scan.c  ****         DrehTel_dreh();
 330              		.loc 1 118 0 discriminator 2
 331 02cc FEFFFFEB 		bl	DrehTel_dreh
 332              	.LVL52:
 119:Farbe_scan.c  ****         Farbe_setpos(4);
 333              		.loc 1 119 0 discriminator 2
 334 02d0 0400A0E3 		mov	r0, #4
 335 02d4 FEFFFFEB 		bl	Farbe_setpos
 336              	.LVL53:
 120:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][3]]=ColSen_getData();
 337              		.loc 1 120 0 discriminator 2
 338 02d8 0CB094E5 		ldr	fp, [r4, #12]
 339 02dc 0370A0E3 		mov	r7, #3
 340 02e0 8BB18BE0 		add	fp, fp, fp, asl #3
 341 02e4 0B3086E0 		add	r3, r6, fp
 342 02e8 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 343 02ec 04308DE5 		str	r3, [sp, #4]
 344 02f0 FEFFFFEB 		bl	ColSen_getData
 345              	.LVL54:
 346 02f4 04309DE5 		ldr	r3, [sp, #4]
 347 02f8 03B08BE0 		add	fp, fp, r3
 348 02fc 0B00C5E7 		strb	r0, [r5, fp]
 121:Farbe_scan.c  ****         DrehTel_dreh();
 349              		.loc 1 121 0 discriminator 2
 350 0300 FEFFFFEB 		bl	DrehTel_dreh
 351              	.LVL55:
 122:Farbe_scan.c  ****         Farbe_setpos(2);
 352              		.loc 1 122 0 discriminator 2
 353 0304 0800A0E1 		mov	r0, r8
 354 0308 FEFFFFEB 		bl	Farbe_setpos
 355              	.LVL56:
 123:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][4]]=ColSen_getData();
 356              		.loc 1 123 0 discriminator 2
 357 030c 0CB094E5 		ldr	fp, [r4, #12]
 358 0310 8BB18BE0 		add	fp, fp, fp, asl #3
 359 0314 0B3086E0 		add	r3, r6, fp
 360 0318 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 361 031c 04308DE5 		str	r3, [sp, #4]
 362 0320 FEFFFFEB 		bl	ColSen_getData
 363              	.LVL57:
 364 0324 04309DE5 		ldr	r3, [sp, #4]
 365 0328 03B08BE0 		add	fp, fp, r3
 366 032c 0B00C5E7 		strb	r0, [r5, fp]
 124:Farbe_scan.c  ****         DrehTel_dreh();
 367              		.loc 1 124 0 discriminator 2
 368 0330 FEFFFFEB 		bl	DrehTel_dreh
 369              	.LVL58:
 125:Farbe_scan.c  ****         Farbe_setpos(5);
 370              		.loc 1 125 0 discriminator 2
 371 0334 0900A0E1 		mov	r0, r9
 372 0338 FEFFFFEB 		bl	Farbe_setpos
 373              	.LVL59:
 126:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][5]]=ColSen_getData();
 374              		.loc 1 126 0 discriminator 2
 375 033c 0CB094E5 		ldr	fp, [r4, #12]
 376 0340 8BB18BE0 		add	fp, fp, fp, asl #3
 377 0344 0B3086E0 		add	r3, r6, fp
 378 0348 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 379 034c 04308DE5 		str	r3, [sp, #4]
 380 0350 FEFFFFEB 		bl	ColSen_getData
 381              	.LVL60:
 382 0354 04309DE5 		ldr	r3, [sp, #4]
 383 0358 03B08BE0 		add	fp, fp, r3
 384 035c 0B00C5E7 		strb	r0, [r5, fp]
 127:Farbe_scan.c  ****         DrehTel_dreh();
 385              		.loc 1 127 0 discriminator 2
 386 0360 FEFFFFEB 		bl	DrehTel_dreh
 387              	.LVL61:
 128:Farbe_scan.c  ****         Farbe_setpos(3);
 388              		.loc 1 128 0 discriminator 2
 389 0364 0700A0E1 		mov	r0, r7
 390 0368 FEFFFFEB 		bl	Farbe_setpos
 391              	.LVL62:
 129:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][6]]=ColSen_getData();
 392              		.loc 1 129 0 discriminator 2
 393 036c 0CB094E5 		ldr	fp, [r4, #12]
 394 0370 8BB18BE0 		add	fp, fp, fp, asl #3
 395 0374 0B3086E0 		add	r3, r6, fp
 396 0378 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 397 037c 04308DE5 		str	r3, [sp, #4]
 398 0380 FEFFFFEB 		bl	ColSen_getData
 399              	.LVL63:
 400 0384 04309DE5 		ldr	r3, [sp, #4]
 401 0388 03B08BE0 		add	fp, fp, r3
 402 038c 0B00C5E7 		strb	r0, [r5, fp]
 130:Farbe_scan.c  ****         DrehTel_dreh();
 403              		.loc 1 130 0 discriminator 2
 404 0390 FEFFFFEB 		bl	DrehTel_dreh
 405              	.LVL64:
 131:Farbe_scan.c  ****         Farbe_setpos(5);
 406              		.loc 1 131 0 discriminator 2
 407 0394 0900A0E1 		mov	r0, r9
 408 0398 FEFFFFEB 		bl	Farbe_setpos
 409              	.LVL65:
 132:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][7]]=ColSen_getData();
 410              		.loc 1 132 0 discriminator 2
 411 039c 0CB094E5 		ldr	fp, [r4, #12]
 412 03a0 8BB18BE0 		add	fp, fp, fp, asl #3
 413 03a4 0B3086E0 		add	r3, r6, fp
 414 03a8 0730D3E5 		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 415 03ac 04308DE5 		str	r3, [sp, #4]
 416 03b0 FEFFFFEB 		bl	ColSen_getData
 417              	.LVL66:
 418 03b4 04309DE5 		ldr	r3, [sp, #4]
 419 03b8 03B08BE0 		add	fp, fp, r3
 420 03bc 0B00C5E7 		strb	r0, [r5, fp]
 133:Farbe_scan.c  ****         DrehTel_dreh();
 421              		.loc 1 133 0 discriminator 2
 422 03c0 FEFFFFEB 		bl	DrehTel_dreh
 423              	.LVL67:
 134:Farbe_scan.c  ****         Farbe_setpos(3);
 424              		.loc 1 134 0 discriminator 2
 425 03c4 0700A0E1 		mov	r0, r7
 426 03c8 FEFFFFEB 		bl	Farbe_setpos
 427              	.LVL68:
 135:Farbe_scan.c  ****         color_data[Center[i]][(int)Color_position[Center[i]][8]]=ColSen_getData();
 428              		.loc 1 135 0 discriminator 2
 429 03cc 0CB094E5 		ldr	fp, [r4, #12]
 430 03d0 8BB18BE0 		add	fp, fp, fp, asl #3
 431 03d4 0B3086E0 		add	r3, r6, fp
 432 03d8 0830D3E5 		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 433 03dc 04308DE5 		str	r3, [sp, #4]
 434 03e0 FEFFFFEB 		bl	ColSen_getData
 435              	.LVL69:
 436 03e4 04309DE5 		ldr	r3, [sp, #4]
 437 03e8 03B08BE0 		add	fp, fp, r3
 438 03ec 0B00C5E7 		strb	r0, [r5, fp]
 136:Farbe_scan.c  ****         /*for(j=1;j<=7;j++)
 137:Farbe_scan.c  ****         {
 138:Farbe_scan.c  ****             if (j%2 != 0){
 139:Farbe_scan.c  ****                 usleep(1000);
 140:Farbe_scan.c  ****                 Farbe_setpos(2);
 141:Farbe_scan.c  ****                 usleep(100000);
 142:Farbe_scan.c  ****                 color_data[Center[i]][(int)Color_position[Center[i]][j]]=ColSen_getData();
 143:Farbe_scan.c  ****                 usleep(10000);
 144:Farbe_scan.c  ****                 DrehTel_dreh();
 145:Farbe_scan.c  ****                 sleep(1);
 146:Farbe_scan.c  ****             }
 147:Farbe_scan.c  ****             else
 148:Farbe_scan.c  ****             {
 149:Farbe_scan.c  ****                 usleep(1000);
 150:Farbe_scan.c  ****                 Farbe_setpos(3);
 151:Farbe_scan.c  ****                 usleep(100000);
 152:Farbe_scan.c  ****                 color_data[Center[i]][(int)Color_position[Center[i]][j]]=ColSen_getData();
 153:Farbe_scan.c  ****                 usleep(10000);
 154:Farbe_scan.c  ****                 DrehTel_dreh();
 155:Farbe_scan.c  ****                 sleep(1);
 156:Farbe_scan.c  ****             }
 157:Farbe_scan.c  ****         }*/
 158:Farbe_scan.c  ****         Farbe_setpos(6);
 439              		.loc 1 158 0 discriminator 2
 440 03f0 0600A0E3 		mov	r0, #6
 441 03f4 FEFFFFEB 		bl	Farbe_setpos
 442              	.LVL70:
 159:Farbe_scan.c  ****         usleep(10000);
 443              		.loc 1 159 0 discriminator 2
 444 03f8 44009FE5 		ldr	r0, .L6+12
 445 03fc FEFFFFEB 		bl	usleep
 446              	.LVL71:
 160:Farbe_scan.c  ****         arm_setpos(3);
 447              		.loc 1 160 0 discriminator 2
 448 0400 0700A0E1 		mov	r0, r7
 449 0404 FEFFFFEB 		bl	arm_setpos
 450              	.LVL72:
 161:Farbe_scan.c  ****         arm_setpos(2);
 451              		.loc 1 161 0 discriminator 2
 452 0408 0800A0E1 		mov	r0, r8
 453 040c FEFFFFEB 		bl	arm_setpos
 454              	.LVL73:
 162:Farbe_scan.c  ****         arm_setpos(4);
 455              		.loc 1 162 0 discriminator 2
 456 0410 0400A0E3 		mov	r0, #4
 457 0414 FEFFFFEB 		bl	arm_setpos
 458              	.LVL74:
 109:Farbe_scan.c  ****         Farbe_setpos(1);
 459              		.loc 1 109 0 discriminator 2
 460 0418 01A08AE2 		add	r10, r10, #1
 461              	.LVL75:
 462 041c 044084E2 		add	r4, r4, #4
 463 0420 06005AE3 		cmp	r10, #6
 464 0424 8CFFFF1A 		bne	.L5
 163:Farbe_scan.c  ****     }
 164:Farbe_scan.c  ****     
 165:Farbe_scan.c  ****     return color_data[6][9];
 166:Farbe_scan.c  **** #endif
 167:Farbe_scan.c  ****     
 168:Farbe_scan.c  **** #ifndef __linux__
 169:Farbe_scan.c  ****     return 0;
 170:Farbe_scan.c  **** #endif
 171:Farbe_scan.c  **** }
 465              		.loc 1 171 0
 466 0428 10309FE5 		ldr	r3, .L6+8
 467 042c 3F00D3E5 		ldrb	r0, [r3, #63]	@ zero_extendqisi2
 468 0430 0CD08DE2 		add	sp, sp, #12
 469              		@ sp needed
 470 0434 F08FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, r10, fp, pc}
 471              	.LVL76:
 472              	.L7:
 473              		.align	2
 474              	.L6:
 475 0438 00000000 		.word	.LANCHOR0
 476 043c 00000000 		.word	.LANCHOR1
 477 0440 00000000 		.word	color_data
 478 0444 10270000 		.word	10000
 479 0448 A0860100 		.word	100000
 480              		.cfi_endproc
 481              	.LFE11:
 482              		.fnend
 484              		.global	Center
 485              		.global	Color_position
 486              		.section	.rodata
 487              		.align	2
 488              	.LANCHOR1 = . + 0
 491              	Color_position:
 492 0000 04       		.byte	4
 493 0001 02       		.byte	2
 494 0002 01       		.byte	1
 495 0003 00       		.byte	0
 496 0004 03       		.byte	3
 497 0005 06       		.byte	6
 498 0006 07       		.byte	7
 499 0007 08       		.byte	8
 500 0008 05       		.byte	5
 501 0009 04       		.byte	4
 502 000a 00       		.byte	0
 503 000b 03       		.byte	3
 504 000c 06       		.byte	6
 505 000d 07       		.byte	7
 506 000e 08       		.byte	8
 507 000f 05       		.byte	5
 508 0010 02       		.byte	2
 509 0011 01       		.byte	1
 510 0012 04       		.byte	4
 511 0013 06       		.byte	6
 512 0014 07       		.byte	7
 513 0015 08       		.byte	8
 514 0016 05       		.byte	5
 515 0017 02       		.byte	2
 516 0018 01       		.byte	1
 517 0019 00       		.byte	0
 518 001a 03       		.byte	3
 519 001b 04       		.byte	4
 520 001c 06       		.byte	6
 521 001d 05       		.byte	5
 522 001e 02       		.byte	2
 523 001f 01       		.byte	1
 524 0020 00       		.byte	0
 525 0021 03       		.byte	3
 526 0022 06       		.byte	6
 527 0023 07       		.byte	7
 528 0024 04       		.byte	4
 529 0025 06       		.byte	6
 530 0026 07       		.byte	7
 531 0027 08       		.byte	8
 532 0028 05       		.byte	5
 533 0029 02       		.byte	2
 534 002a 01       		.byte	1
 535 002b 00       		.byte	0
 536 002c 03       		.byte	3
 537 002d 04       		.byte	4
 538 002e 02       		.byte	2
 539 002f 01       		.byte	1
 540 0030 00       		.byte	0
 541 0031 03       		.byte	3
 542 0032 06       		.byte	6
 543 0033 07       		.byte	7
 544 0034 08       		.byte	8
 545 0035 05       		.byte	5
 546 0036 0000     		.data
 547              		.align	2
 548              	.LANCHOR0 = . + 0
 551              	Center:
 552 0000 00000000 		.word	0
 553 0004 05000000 		.word	5
 554 0008 02000000 		.word	2
 555 000c 03000000 		.word	3
 556 0010 04000000 		.word	4
 557 0014 01000000 		.word	1
 558              		.text
 559              	.Letext0:
 560              		.file 2 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 561              		.file 3 "/usr/local/carlson-minot/crosscompilers/lib/gcc/arm-none-linux-gnueabi/4.8.3/include/stdd
 562              		.file 4 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 563              		.file 5 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/us
 564              		.file 6 "main.h"
 565              		.file 7 "Arm_motor.h"
 566              		.file 8 "Farbe_motor.h"
 567              		.file 9 "Farbe_sen.h"
 568              		.file 10 "Dreh_motor.h"
 569              		.file 11 "/usr/local/carlson-minot/crosscompilers/arm-none-linux-gnueabi/libc-2014.05-29-sysroot/u
 570              		.file 12 "bytecodes.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Farbe_scan.c
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc9TU1BH.s:16     .text:0000000000000000 $a
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc9TU1BH.s:19     .text:0000000000000000 farbe_scan
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc9TU1BH.s:475    .text:0000000000000438 $d
                       .ARM.exidx:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc9TU1BH.s:551    .data:0000000000000000 Center
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc9TU1BH.s:491    .rodata:0000000000000000 Color_position
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc9TU1BH.s:487    .rodata:0000000000000000 $d
/var/folders/x0/118sfpkj75v4t4_qgl0ndwr00000gn/T//cc9TU1BH.s:547    .data:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
arm_setpos
Farbe_setpos
ColSen_getData
DrehTel_dreh
usleep
DrehTel_setpos
color_data
__aeabi_unwind_cpp_pr0
